{"version":3,"file":"SellStocks-CWpNd88m.js","sources":["../../../src/components/pages/SellStocks/SellModal.tsx","../../../src/components/pages/SellStocks/StockChart.tsx","../../../src/components/pages/SellStocks/StockDetail.tsx","../../../src/components/portfolio/Asserts/Portfolio.ts","../../../src/components/pages/SellStocks/SellStocks.tsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { MinusIcon, PlusIcon, XIcon } from 'lucide-react';\r\nimport useAuth from '../../hooks/useAuth';\r\nimport AuthModal from '../../Auth/AuthModal';\r\n\r\ninterface SellModalProps {\r\n  stock?: {\r\n    symbol: string;\r\n    name: string;\r\n    price: number;\r\n    quantity: number;\r\n  };\r\n  onClose: () => void;\r\n  onSuccess: (quantity: number) => void;\r\n}\r\n\r\nconst SellModal: React.FC<SellModalProps> = ({ stock, onClose, onSuccess }) => {\r\n  const [quantity, setQuantity] = useState(1);\r\n  const { isAuthenticated } = useAuth();\r\n  const [showAuthModal, setShowAuthModal] = useState(false);\r\n  const [error, setError] = useState<string | null>(null);\r\n\r\n  const handleSell = async () => {\r\n    if (!isAuthenticated) {\r\n      setShowAuthModal(true);\r\n      return;\r\n    }\r\n\r\n    if (quantity <= 0) {\r\n      setError('Quantity must be greater than 0.');\r\n      return;\r\n    }\r\n\r\n    if (!stock || quantity > stock.quantity) {\r\n      setError('Quantity exceeds available shares.');\r\n      return;\r\n    }\r\n\r\n    setError(null);\r\n    onSuccess(quantity);\r\n    onClose();\r\n  };\r\n\r\n  if (!stock) {\r\n    return null;\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <div className=\"fixed inset-0 bg-black/80 backdrop-blur-xl z-50 flex items-center justify-center\">\r\n        <div className=\"bg-[#111111] backdrop-blur-xl rounded-2xl p-8 w-full max-w-md mx-4 border border-white/10\">\r\n          <div className=\"flex justify-between items-center mb-8\">\r\n            <div>\r\n              <h2 className=\"text-2xl font-medium text-white\">{stock.name}</h2>\r\n              <p className=\"text-white/60 text-sm\">{stock.symbol}</p>\r\n            </div>\r\n            <button\r\n              onClick={onClose}\r\n              className=\"text-white/60 hover:text-white transition-colors p-2 rounded-full hover:bg-white/5\"\r\n            >\r\n              <XIcon size={24} />\r\n            </button>\r\n          </div>\r\n\r\n          <div className=\"space-y-8\">\r\n            <div className=\"flex flex-col items-center space-y-4\">\r\n              <span className=\"text-sm text-white/60\">Quantity</span>\r\n              <div className=\"flex items-center space-x-6\">\r\n                <button\r\n                  onClick={() => setQuantity(Math.max(1, quantity - 1))}\r\n                  className=\"w-12 h-12 rounded-full bg-white/5 hover:bg-white/10 flex items-center justify-center text-white border border-white/10 transition-all\"\r\n                >\r\n                  <MinusIcon size={20} />\r\n                </button>\r\n                <span className=\"text-4xl font-light text-white w-16 text-center\">\r\n                  {quantity}\r\n                </span>\r\n                <button\r\n                  onClick={() => setQuantity(Math.min(stock.quantity, quantity + 1))}\r\n                  className=\"w-12 h-12 rounded-full bg-white/5 hover:bg-white/10 flex items-center justify-center text-white border border-white/10 transition-all\"\r\n                >\r\n                  <PlusIcon size={20} />\r\n                </button>\r\n              </div>\r\n              <p className=\"text-white/40 text-sm\">\r\n                Available: {stock.quantity} shares\r\n              </p>\r\n            </div>\r\n\r\n            <div className=\"space-y-4 border-t border-white/10 pt-6\">\r\n              <div className=\"flex justify-between text-sm\">\r\n                <span className=\"text-white/60\">Price per share</span>\r\n                <span className=\"text-white font-medium\">₹{stock.price?.toFixed(2)}</span>\r\n              </div>\r\n              <div className=\"flex justify-between text-xl\">\r\n                <span className=\"text-white/80\">Total Amount</span>\r\n                <span className=\"text-white font-medium\">₹{(stock.price * quantity).toFixed(2)}</span>\r\n              </div>\r\n            </div>\r\n\r\n            {error && (\r\n              <div className=\"bg-red-500/10 border border-red-500/20 rounded-xl p-4 text-red-400 text-sm\">\r\n                {error}\r\n              </div>\r\n            )}\r\n\r\n            <div className=\"space-y-3 pt-4\">\r\n              <button\r\n                onClick={handleSell}\r\n                className=\"w-full py-4 bg-red-500 text-white rounded-full font-medium hover:bg-red-600 transition-all text-sm uppercase tracking-wide\"\r\n              >\r\n                Sell Now\r\n              </button>\r\n              <button\r\n                onClick={onClose}\r\n                className=\"w-full py-4 text-white/60 font-medium hover:text-white transition-colors text-sm uppercase tracking-wide\"\r\n              >\r\n                Cancel\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <AuthModal\r\n        isOpen={showAuthModal}\r\n        onClose={() => setShowAuthModal(false)}\r\n        onSuccess={() => {\r\n          setShowAuthModal(false);\r\n          if (!stock) return;\r\n          handleSell();\r\n        }}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default SellModal;","import React, { useState, useEffect } from 'react';\r\nimport { motion } from 'framer-motion';\r\nimport {\r\n  AreaChart, Area, XAxis, YAxis, Tooltip, ResponsiveContainer,\r\n  CartesianGrid\r\n} from 'recharts';\r\n\r\ninterface StockChartProps {\r\n  symbol: string;\r\n  onTimeframeChange?: (timeframe: string) => void;\r\n  basePrice?: number;\r\n}\r\n\r\ninterface StockDataPoint {\r\n  date: string;\r\n  price: number;\r\n}\r\n\r\nconst generateRandomPrice = (basePrice: number, volatility: number = 0.005): number => {\r\n  const change = basePrice * volatility * (Math.random() - 0.5);\r\n  return basePrice + change;\r\n};\r\n\r\nconst generateStockData = (timeframe: string, basePrice: number = 100): StockDataPoint[] => {\r\n  const dataPoints: StockDataPoint[] = [];\r\n  const periods = {\r\n    '1D': 78,    // 5-minute intervals for a trading day\r\n    '1W': 168,   // Hourly for a week\r\n    '1M': 30,    // Daily for a month\r\n    '3M': 90,    // Daily for 3 months\r\n    '1Y': 252,   // Trading days in a year\r\n    'ALL': 1260  // 5 years of trading days\r\n  }[timeframe] || 78;\r\n\r\n  let currentPrice = basePrice;\r\n  const now = new Date();\r\n\r\n  for (let i = 0; i < periods; i++) {\r\n    const date = new Date(now);\r\n    if (timeframe === '1D') {\r\n      date.setMinutes(date.getMinutes() - (i * 5));\r\n    } else if (timeframe === '1W') {\r\n      date.setHours(date.getHours() - i);\r\n    } else {\r\n      date.setDate(date.getDate() - i);\r\n    }\r\n\r\n    currentPrice = generateRandomPrice(currentPrice);\r\n    dataPoints.unshift({\r\n      date: date.toISOString(),\r\n      price: Number(currentPrice.toFixed(2))\r\n    });\r\n  }\r\n\r\n  return dataPoints;\r\n};\r\n\r\nexport const StockChart: React.FC<StockChartProps> = ({ \r\n  symbol, \r\n  onTimeframeChange,\r\n  basePrice: initialBasePrice = 100\r\n}) => {\r\n  const [timeframe, setTimeframe] = useState('1D');\r\n  const [stockData, setStockData] = useState<StockDataPoint[]>([]);\r\n  const [hoveredData, setHoveredData] = useState<StockDataPoint | null>(null);\r\n\r\n  const basePrice = {\r\n    'AAPL': 150,\r\n    'MSFT': 380,\r\n    'GOOGL': 140,\r\n    'TSLA': 250,\r\n    'NVDA': 800\r\n  }[symbol] || initialBasePrice;\r\n\r\n  useEffect(() => {\r\n    const data = generateStockData(timeframe, basePrice);\r\n    setStockData(data);\r\n\r\n    // Live updates for 1D timeframe\r\n    if (timeframe === '1D') {\r\n      const interval = setInterval(() => {\r\n        const lastPrice = data[data.length - 1].price;\r\n        const newPrice = generateRandomPrice(lastPrice, 0.001);\r\n        const newData = [...data.slice(1), {\r\n          date: new Date().toISOString(),\r\n          price: newPrice\r\n        }];\r\n        setStockData(newData);\r\n      }, 5000);\r\n\r\n      return () => clearInterval(interval);\r\n    }\r\n  }, [timeframe, basePrice]);\r\n\r\n  const handleTimeframeChange = (tf: string) => {\r\n    setTimeframe(tf);\r\n    onTimeframeChange?.(tf);\r\n  };\r\n\r\n  const priceChange = stockData.length > 0 ? stockData[stockData.length - 1].price - stockData[0].price : 0;\r\n  const priceChangePercent = stockData.length > 0 ? ((priceChange / stockData[0].price) * 100).toFixed(2) : '0.00';\r\n\r\n  const timeframes = ['1D', '1W', '1M', '3M', '1Y', 'ALL'];\r\n\r\n  const CustomTooltip = ({ active, payload, label }: any) => {\r\n    if (active && payload && payload.length) {\r\n      const date = new Date(label);\r\n      const price = payload[0].value;\r\n      \r\n      return (\r\n        <div className=\"bg-white/90 backdrop-blur-xl border border-gray-200 rounded-lg p-4 shadow-xl\">\r\n          <p className=\"text-gray-600 text-sm mb-1\">\r\n            {timeframe === '1D' \r\n              ? date.toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' })\r\n              : date.toLocaleDateString([], { month: 'short', day: 'numeric' })}\r\n          </p>\r\n          <p className=\"text-black text-lg font-medium\">\r\n            ${price.toFixed(2)}\r\n          </p>\r\n        </div>\r\n      );\r\n    }\r\n    return null;\r\n  };\r\n\r\n  return (\r\n    <motion.div\r\n      key={symbol}\r\n      initial={{ opacity: 0 }}\r\n      animate={{ opacity: 1 }}\r\n      className=\"relative h-full bg-white rounded-2xl p-6 shadow-sm\"\r\n    >\r\n      <div className=\"flex items-center justify-between mb-6\">\r\n        <div>\r\n          <h3 className=\"text-2xl font-light text-black\">{symbol}</h3>\r\n          <div className={`text-sm ${priceChange >= 0 ? 'text-green-600' : 'text-red-600'} font-light`}>\r\n            {priceChange >= 0 ? '+' : ''}{priceChangePercent}%\r\n          </div>\r\n        </div>\r\n        \r\n        <div className=\"flex gap-2\">\r\n          {timeframes.map((tf) => (\r\n            <button\r\n              key={tf}\r\n              onClick={() => handleTimeframeChange(tf)}\r\n              className={`px-4 py-2 rounded-full text-sm transition-all ${\r\n                timeframe === tf \r\n                  ? 'bg-black text-white font-medium' \r\n                  : 'bg-gray-100 text-gray-600 hover:bg-gray-200 hover:text-black'\r\n              }`}\r\n            >\r\n              {tf}\r\n            </button>\r\n          ))}\r\n        </div>\r\n      </div>\r\n\r\n      <ResponsiveContainer width=\"100%\" height=\"85%\">\r\n        <AreaChart \r\n          data={stockData}\r\n          onMouseMove={(data: any) => {\r\n            if (data.activePayload) {\r\n              setHoveredData(data.activePayload[0].payload);\r\n            }\r\n          }}\r\n          onMouseLeave={() => setHoveredData(null)}\r\n        >\r\n          <defs>\r\n            <linearGradient id=\"colorPrice\" x1=\"0\" y1=\"0\" x2=\"0\" y2=\"1\">\r\n              <stop \r\n                offset=\"5%\" \r\n                stopColor={priceChange >= 0 ? 'rgb(34, 197, 94)' : 'rgb(239, 68, 68)'} \r\n                stopOpacity={0.2}\r\n              />\r\n              <stop \r\n                offset=\"95%\" \r\n                stopColor={priceChange >= 0 ? 'rgb(34, 197, 94)' : 'rgb(239, 68, 68)'} \r\n                stopOpacity={0}\r\n              />\r\n            </linearGradient>\r\n          </defs>\r\n          \r\n          <CartesianGrid \r\n            strokeDasharray=\"3 3\" \r\n            stroke=\"rgba(0,0,0,0.05)\"\r\n            vertical={false}\r\n          />\r\n          \r\n          <XAxis\r\n            dataKey=\"date\"\r\n            tickFormatter={(date) => {\r\n              const d = new Date(date);\r\n              if (timeframe === '1D') {\r\n                return d.toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' });\r\n              }\r\n              return d.toLocaleDateString([], { day: 'numeric', month: 'short' });\r\n            }}\r\n            stroke=\"rgba(0,0,0,0.1)\"\r\n            tick={{ fill: 'rgba(0,0,0,0.4)', fontSize: 11 }}\r\n            axisLine={{ stroke: 'rgba(0,0,0,0.1)' }}\r\n            tickLine={{ stroke: 'rgba(0,0,0,0.1)' }}\r\n          />\r\n          \r\n          <YAxis\r\n            domain={['auto', 'auto']}\r\n            stroke=\"rgba(0,0,0,0.1)\"\r\n            tick={{ fill: 'rgba(0,0,0,0.4)', fontSize: 11 }}\r\n            tickFormatter={(value) => `$${value.toFixed(2)}`}\r\n            axisLine={{ stroke: 'rgba(0,0,0,0.1)' }}\r\n            tickLine={{ stroke: 'rgba(0,0,0,0.1)' }}\r\n            width={65}\r\n          />\r\n          \r\n          <Tooltip content={<CustomTooltip />} />\r\n          \r\n          <Area\r\n            type=\"monotone\"\r\n            dataKey=\"price\"\r\n            stroke={priceChange >= 0 ? 'rgb(34, 197, 94)' : 'rgb(239, 68, 68)'}\r\n            strokeWidth={1.5}\r\n            fill=\"url(#colorPrice)\"\r\n            animationDuration={750}\r\n            dot={false}\r\n            activeDot={{\r\n              r: 4,\r\n              fill: priceChange >= 0 ? 'rgb(34, 197, 94)' : 'rgb(239, 68, 68)',\r\n              stroke: '#fff',\r\n              strokeWidth: 1\r\n            }}\r\n          />\r\n        </AreaChart>\r\n      </ResponsiveContainer>\r\n\r\n      {hoveredData && (\r\n        <motion.div\r\n          initial={{ opacity: 0, y: 10 }}\r\n          animate={{ opacity: 1, y: 0 }}\r\n          className=\"absolute top-4 right-4 bg-white/90 backdrop-blur-xl border border-gray-200 rounded-lg p-4 shadow-sm\"\r\n        >\r\n          <p className=\"text-gray-600 text-sm\">Current Price</p>\r\n          <p className=\"text-black text-2xl font-medium\">\r\n            ${hoveredData.price.toFixed(2)}\r\n          </p>\r\n        </motion.div>\r\n      )}\r\n    </motion.div>\r\n  );\r\n};\r\n\r\nexport default StockChart;","import React, { useState, useEffect } from 'react';\r\nimport { ArrowUp, ArrowDown, Clock, TrendingUp, BarChart2, Activity, Globe } from 'lucide-react';\r\nimport { motion, AnimatePresence } from 'framer-motion';\r\nimport StockChart from './StockChart';\r\nimport { Portfolio } from '@/components/portfolio/PortfolioTable';\r\n\r\ninterface StockDetailProps {\r\n  stock: Portfolio | null;\r\n  onSellClick: (stock: Portfolio) => void;\r\n  loading?: boolean;\r\n}\r\n\r\nconst StockDetail: React.FC<StockDetailProps> = ({ stock, onSellClick, loading }) => {\r\n  const [timeFrame, setTimeFrame] = useState<string>('1D');\r\n  const [currentTime, setCurrentTime] = useState(new Date());\r\n  const [recommendationTrends, setRecommendationTrends] = useState<any[]>([]);\r\n  const [trendsLoading, setTrendsLoading] = useState<boolean>(false);\r\n\r\n  useEffect(() => {\r\n    const timer = setInterval(() => {\r\n      setCurrentTime(new Date());\r\n    }, 1000);\r\n    return () => clearInterval(timer);\r\n  }, []);\r\n\r\n  if (loading || !stock) {\r\n    return (\r\n      <div className=\"h-full flex items-center justify-center text-gray-600\">\r\n        <div className=\"text-center\">\r\n          <Globe size={48} className=\"mx-auto mb-4 opacity-60\" />\r\n          <p className=\"text-xl font-light\">Select a stock to view details</p>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  const timeFrames = ['1D', '1W', '1M', '3M', '1Y', 'ALL'];\r\n\r\n  const trendColors = {\r\n    strongBuy: '#22c55e',\r\n    buy: '#4ade80',\r\n    hold: '#facc15',\r\n    sell: '#f87171',\r\n    strongSell: '#ef4444',\r\n  };\r\n\r\n  return (\r\n    <AnimatePresence mode=\"wait\">\r\n      <motion.div\r\n        initial={{ opacity: 0, y: 20 }}\r\n        animate={{ opacity: 1, y: 0 }}\r\n        exit={{ opacity: 0, y: -20 }}\r\n        className=\"flex flex-col h-full bg-white rounded-2xl p-6 lg:p-8 shadow-sm\"\r\n      >\r\n        <div className=\"flex items-center justify-between mb-6\">\r\n          <div>\r\n            <h1 className=\"text-3xl font-light text-black mb-1\">{stock.name}</h1>\r\n            <div className=\"flex items-center gap-3 text-sm\">\r\n              <span className=\"text-gray-600\">{stock.symbol}</span>\r\n              <span className=\"text-gray-300\">•</span>\r\n              <span className=\"text-gray-600 font-light\">{currentTime.toLocaleTimeString()}</span>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"flex items-baseline gap-4 mb-8\">\r\n          <span className=\"text-5xl font-light text-black\">\r\n            ${stock.currentPrice?.toFixed(2) || 'N/A'}\r\n          </span>\r\n          <motion.span\r\n            animate={{\r\n              color: (stock.totalReturn || 0) >= 0 ? \"#22c55e\" : \"#ef4444\"\r\n            }}\r\n            className=\"flex items-center text-lg font-light\"\r\n          >\r\n            {(stock.totalReturn || 0) >= 0 ? <ArrowUp size={20} /> : <ArrowDown size={20} />}\r\n            {Math.abs(stock.totalReturn || 0).toFixed(2)}%\r\n          </motion.span>\r\n        </div>\r\n\r\n        <div className=\"flex gap-2 mb-8 overflow-x-auto scrollbar-hide\">\r\n          {timeFrames.map((tf) => (\r\n            <button\r\n              key={tf}\r\n              onClick={() => setTimeFrame(tf)}\r\n              className={`px-6 py-2 rounded-full text-sm font-medium transition-all ${\r\n                timeFrame === tf\r\n                  ? 'bg-black text-white'\r\n                  : 'bg-gray-100 text-gray-600 hover:bg-gray-200 hover:text-black'\r\n              }`}\r\n            >\r\n              {tf}\r\n            </button>\r\n          ))}\r\n        </div>\r\n\r\n        <div className=\"flex-1 bg-gray-100 rounded-2xl mb-8 overflow-hidden\">\r\n          <div className=\"h-full p-4\">\r\n            <StockChart stock={stock} timeFrame={timeFrame} />\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"bg-gray-100 rounded-2xl p-6\">\r\n          <h3 className=\"text-xl font-light text-black mb-6\">Market Analysis</h3>\r\n          {trendsLoading ? (\r\n            <div className=\"flex justify-center items-center py-8\">\r\n              <motion.div\r\n                animate={{ rotate: 360 }}\r\n                transition={{ duration: 1, repeat: Infinity, ease: \"linear\" }}\r\n                className=\"w-8 h-8 border-2 border-gray-300 border-t-black rounded-full\"\r\n              />\r\n            </div>\r\n          ) : recommendationTrends.length > 0 ? (\r\n            <div className=\"space-y-6\">\r\n              {recommendationTrends.map((trend, index) => (\r\n                <div key={index} className=\"bg-white rounded-xl p-6 shadow-sm\">\r\n                  <p className=\"text-sm text-gray-600 mb-4 font-light\">{trend.period}</p>\r\n                  <div className=\"grid grid-cols-5 gap-4\">\r\n                    {[\r\n                      { label: 'Strong Buy', value: trend.strongBuy, color: trendColors.strongBuy },\r\n                      { label: 'Buy', value: trend.buy, color: trendColors.buy },\r\n                      { label: 'Hold', value: trend.hold, color: trendColors.hold },\r\n                      { label: 'Sell', value: trend.sell, color: trendColors.sell },\r\n                      { label: 'Strong Sell', value: trend.strongSell, color: trendColors.strongSell },\r\n                    ].map((item, i) => (\r\n                      <div key={i} className=\"text-center\">\r\n                        <p className=\"text-xs text-gray-500 mb-2 font-light\">{item.label}</p>\r\n                        <p className=\"text-lg font-light\" style={{ color: item.color }}>\r\n                          {item.value}\r\n                        </p>\r\n                      </div>\r\n                    ))}\r\n                  </div>\r\n                </div>\r\n              ))}\r\n            </div>\r\n          ) : (\r\n            <div className=\"flex justify-center items-center py-8\">\r\n              <span className=\"text-gray-500 font-light\">No market analysis available</span>\r\n            </div>\r\n          )}\r\n        </div>\r\n      </motion.div>\r\n    </AnimatePresence>\r\n  );\r\n};\r\n\r\nexport default StockDetail;","import { ReactNode } from \"react\";\r\n\r\nexport interface Portfolio {\r\n  quantity: number;\r\n  id: number;\r\n  symbol: string;\r\n  name: string;\r\n  shares: number;\r\n  value: number;\r\n  change: number;\r\n  averagePrice: number;\r\n  currentPrice: number;\r\n  totalReturn: number;\r\n  lastUpdated: string;\r\n}\r\n\r\nexport interface PortfolioStats {\r\n  dailyPerformance: Array<{\r\n    date: string;\r\n    value: number;\r\n  }>;\r\n  totalInvestment: number;\r\n}\r\n\r\nexport interface ApiResponse<T> {\r\n  success: boolean;\r\n  data: T;\r\n}\r\n\r\nexport interface Transaction {\r\n  id: number;\r\n  symbol: string;\r\n  type: 'BUY' | 'SELL';\r\n  quantity: number;\r\n  price: number;\r\n  totalAmount: number;\r\n  date: string;\r\n  status: string;\r\n}\r\n\r\n\r\nexport interface PortfolioHolding {\r\n  name: ReactNode;\r\n\r\n  symbol: string;\r\n\r\n  quantity: number;\r\n\r\n  averagePrice: number;\r\n\r\n  currentPrice: number;\r\n\r\n  marketValue?: number;\r\n\r\n  totalReturn?: number;\r\n\r\n}\r\n\r\n\r\nexport interface DailyPerformance {\r\n  date: string;\r\n  value: number;\r\n  change: number;\r\n}\r\n\r\nexport interface PortfolioAction {\r\n  id: string;\r\n  type: 'BUY' | 'SELL';\r\n  symbol: string;\r\n  quantity: number;\r\n  price: number;\r\n  timestamp: string;\r\n}\r\n\r\nexport const formatMoney = (value: number): string => {\r\n\r\n  return new Intl.NumberFormat('en-US', {\r\n\r\n    style: 'currency',\r\n\r\n    currency: 'USD'\r\n\r\n  }).format(value);\r\n\r\n};\r\n\r\n\r\n\r\nexport const formatPercent = (value: number): string => {\r\n\r\n  return new Intl.NumberFormat('en-US', {\r\n\r\n    style: 'percent',\r\n\r\n    minimumFractionDigits: 2,\r\n\r\n    maximumFractionDigits: 2\r\n\r\n  }).format(value / 100);\r\n\r\n};\r\n\r\nexport interface LoginActivityData {\r\n  date: string;\r\n  count: number;\r\n  details?: {\r\n    browser: string;\r\n    platform: string;\r\n    location?: string;\r\n  };\r\n}\r\n\r\nexport interface ActivityStats {\r\n  totalLogins: number;\r\n  averagePerDay: number;\r\n  mostActiveDay: {\r\n    date: string;\r\n    count: number;\r\n  };\r\n  lastSevenDays: {\r\n    dates: string[];\r\n    counts: number[];\r\n  };\r\n}","import React, { useState, useEffect, useTransition } from 'react';\r\nimport { Search, ArrowUp, ArrowDown, Globe, DollarSign, Check } from 'lucide-react';\r\nimport SellModal from './SellModal';\r\nimport { motion, AnimatePresence } from 'framer-motion';\r\nimport Header from '@/components/Header/Header';\r\nimport LoadingSpinner from '../../ui/LoadingSpinner';\r\nimport useAuth from '@/components/hooks/useAuth';\r\nimport StockDetail from './StockDetail';\r\nimport { formatMoney, formatPercent, Portfolio } from '@/components/portfolio/Asserts/Portfolio';\r\nimport emailjs from 'emailjs-com';\r\n\r\nexport const SellStocks: React.FC = () => {\r\n  const { user, token } = useAuth();\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState<string | null>(null);\r\n  const [searchTerm, setSearchTerm] = useState('');\r\n  const [selectedStock, setSelectedStock] = useState<Portfolio | null>(null);\r\n  const [selectedStockDetail, setSelectedStockDetail] = useState<Portfolio | null>(null);\r\n  const [showSuccessPopup, setShowSuccessPopup] = useState(false);\r\n  const [portfolio, setPortfolio] = useState<Portfolio[]>([]);\r\n  const [isPending, startTransition] = useTransition();\r\n\r\n  // Initialize EmailJS\r\n  useEffect(() => {\r\n    try {\r\n      emailjs.init('eyK87ZsxW822cQvyN'); // Replace with your EmailJS User ID\r\n    } catch (error) {\r\n      console.error('Failed to initialize EmailJS:', error);\r\n    }\r\n  }, []);\r\n\r\n  // Fetch portfolio data on component mount\r\n  useEffect(() => {\r\n    const fetchPortfolio = async () => {\r\n      try {\r\n        const response = await fetch('https://production-backend-final.onrender.com/portfolio', {\r\n          method: 'GET',\r\n          headers: {\r\n            Authorization: `Bearer ${token}`,\r\n          },\r\n        });\r\n\r\n        if (!response.ok) {\r\n          throw new Error('Failed to fetch portfolio');\r\n        }\r\n\r\n        const { data } = await response.json();\r\n        console.log('Backend Response:', data); // Debugging\r\n\r\n        // Validate portfolio data\r\n        if (Array.isArray(data)) {\r\n          const validPortfolio = data.filter(\r\n            (holding) => holding?.symbol && holding?.name\r\n          );\r\n          setPortfolio(validPortfolio);\r\n        } else {\r\n          throw new Error('Invalid portfolio data format');\r\n        }\r\n      } catch (error) {\r\n        console.error('Error fetching portfolio:', error);\r\n        setError('Failed to load portfolio');\r\n        setPortfolio([]); // Reset portfolio to an empty array in case of error\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchPortfolio();\r\n  }, [token]);\r\n\r\n// Handle successful transaction\r\nconst handleTransactionSuccess = async (stock: Portfolio, quantity: number, totalPrice: number) => {\r\n  // Validate totalPrice\r\n  if (typeof totalPrice !== 'number' || isNaN(totalPrice)) {\r\n    console.error('Invalid totalPrice:', totalPrice);\r\n    return;\r\n  }\r\n\r\n  // Show success popup\r\n  startTransition(() => {\r\n    setShowSuccessPopup(true);\r\n  });\r\n  setTimeout(() => {\r\n    startTransition(() => {\r\n      setShowSuccessPopup(false);\r\n    });\r\n  }, 3000);\r\n\r\n  // Re-fetch portfolio data\r\n  try {\r\n    const response = await fetch('https://production-backend-final.onrender.com/portfolio', {\r\n      method: 'GET',\r\n      headers: {\r\n        Authorization: `Bearer ${token}`,\r\n      },\r\n    });\r\n\r\n    if (!response.ok) {\r\n      throw new Error('Failed to fetch portfolio');\r\n    }\r\n\r\n    const { data } = await response.json();\r\n    console.log('Backend Response:', data); // Debugging\r\n\r\n    // Validate portfolio data\r\n    if (Array.isArray(data)) {\r\n      const validPortfolio = data.filter(\r\n        (holding) => holding?.symbol && holding?.name\r\n      );\r\n      setPortfolio(validPortfolio);\r\n    } else {\r\n      throw new Error('Invalid portfolio data format');\r\n    }\r\n  } catch (error) {\r\n    console.error('Error fetching portfolio:', error);\r\n    setError('Failed to load portfolio');\r\n    setPortfolio([]); // Reset portfolio to an empty array in case of error\r\n  }\r\n\r\n  // Send email notification\r\n  if (user?.email) {\r\n    try {\r\n      const templateParams = {\r\n        to_email: user.email,\r\n        stock_symbol: stock.symbol,\r\n        stock_name: stock.name,\r\n        quantity: quantity,\r\n        total_price: totalPrice.toFixed(2),\r\n      };\r\n\r\n      await emailjs.send(\r\n        'service_box535f', // Replace with your EmailJS Service ID\r\n        'template_l4fugpk', // Replace with your EmailJS Template ID\r\n        templateParams\r\n      );\r\n\r\n      console.log('Email notification sent successfully!');\r\n    } catch (error) {\r\n      console.error('Failed to send email notification:', error);\r\n    }\r\n  } else {\r\n    console.error('User email not found.');\r\n    alert('User email not found. Please update your email in settings.');\r\n  }\r\n};\r\n  // Handle stock selection\r\n  const handleStockSelect = (stock: Portfolio) => {\r\n    setSelectedStockDetail(stock);\r\n  };\r\n\r\n  // Handle selling stock\r\n  const handleSell = async (symbol: string, quantity: number) => {\r\n    try {\r\n      const response = await fetch('https://production-backend-final.onrender.com/transaction/sell', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          Authorization: `Bearer ${token}`,\r\n        },\r\n        body: JSON.stringify({\r\n          stockSymbol: symbol,\r\n          quantity,\r\n          price: selectedStockDetail?.currentPrice || 0,\r\n        }),\r\n      });\r\n\r\n      if (!response.ok) {\r\n        const errorData = await response.json();\r\n        throw new Error(errorData.message || 'Failed to process transaction');\r\n      }\r\n\r\n      // Update the portfolio after selling\r\n      setPortfolio((prevPortfolio) =>\r\n        prevPortfolio.map((holding) => {\r\n          if (holding.symbol === symbol) {\r\n            const newQuantity = holding.quantity - quantity;\r\n            return { ...holding, quantity: newQuantity };\r\n          }\r\n          return holding;\r\n        }).filter((holding) => holding.quantity > 0) // Remove stocks with 0 quantity\r\n      );\r\n\r\n      handleTransactionSuccess(selectedStockDetail!, quantity, selectedStockDetail!.currentPrice * quantity);\r\n    } catch (error) {\r\n      console.error('Sell transaction failed:', error);\r\n      setError('Failed to sell stock');\r\n    }\r\n  };\r\n\r\n  // Filter portfolio based on search term\r\n  const filteredPortfolio = (Array.isArray(portfolio) ? portfolio : []).filter(\r\n    (holding) =>\r\n      holding?.symbol?.toLowerCase().includes(searchTerm.toLowerCase()) ||\r\n      holding?.name?.toLowerCase().includes(searchTerm.toLowerCase())\r\n  );\r\n\r\n  return (\r\n    <div className=\"min-h-screen bg-white text-black\">\r\n      <Header />\r\n      <div>\r\n        <div className=\"mt-32 absolute flex z-20 px-8 justify-end w-full\">\r\n          {selectedStockDetail && (\r\n            <button\r\n              onClick={() => setSelectedStock(selectedStockDetail)}\r\n              className=\"px-8 py-3 bg-black text-white font-medium rounded-full hover:bg-black/90 transition-all flex items-center gap-2\"\r\n            >\r\n              <DollarSign size={20} />\r\n              Sell {selectedStockDetail.symbol}\r\n            </button>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"flex h-screen pt-20\">\r\n        {/* Sidebar */}\r\n        <div className=\"w-98 border-r border-gray-200 overflow-hidden\">\r\n          <div className=\"p-6\">\r\n            <div className=\"relative mb-6\">\r\n              <Search className=\"absolute left-4 top-1/2 transform -translate-y-1/2 text-gray-400\" size={20} />\r\n              <input\r\n                type=\"text\"\r\n                placeholder=\"Search stocks...\"\r\n                value={searchTerm}\r\n                onChange={(e) => setSearchTerm(e.target.value)}\r\n                className=\"w-full bg-white border border-gray-300 rounded-2xl pl-12 pr-4 py-3 text-base focus:outline-none focus:ring-2 focus:ring-black/20\"\r\n              />\r\n            </div>\r\n\r\n            {/* Portfolio List */}\r\n            <div className=\"space-y-4 overflow-y-auto w-[400px] h-[calc(100vh-200px)]\">\r\n              {loading ? (\r\n                <LoadingSpinner/>\r\n              ) : (\r\n                filteredPortfolio.map((holding) => (\r\n                  <motion.div\r\n                    key={holding.symbol}\r\n                    layout\r\n                    className={`p-4 rounded-xl cursor-pointer transition-all ${\r\n                      selectedStockDetail?.symbol === holding.symbol\r\n                        ? 'bg-gray-200'\r\n                        : 'bg-white hover:bg-gray-100'\r\n                    }`}\r\n                    onClick={() => handleStockSelect(holding)}\r\n                  >\r\n                    <div className=\"flex justify-between items-start\">\r\n                      <div>\r\n                        <h3 className=\"font-medium\">{holding.symbol}</h3>\r\n                        <p className=\"text-sm text-gray-600\">{holding.name}</p>\r\n                      </div>\r\n                      <motion.div\r\n                        animate={{\r\n                          color: (holding.totalReturn || 0) >= 0 ? '#34D399' : '#EF4444',\r\n                        }}\r\n                        className=\"text-right\"\r\n                      >\r\n                        <p className=\"font-medium\">{formatMoney(holding.currentPrice)}</p>\r\n                        <p className=\"text-sm flex items-center gap-1\">\r\n                          {(holding.totalReturn !== undefined) && (\r\n                            <>\r\n                              {(holding.totalReturn >= 0) ? <ArrowUp size={12} /> : <ArrowDown size={12} />}\r\n                              {formatPercent(Math.abs(holding.totalReturn))}\r\n                            </>\r\n                          )}\r\n                        </p>\r\n                      </motion.div>\r\n                    </div>\r\n                  </motion.div>\r\n                ))\r\n              )}\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        {/* Main Content */}\r\n        <div className=\"flex-1 overflow-y-auto\">\r\n          {selectedStockDetail ? (\r\n            <StockDetail\r\n              stock={selectedStockDetail}\r\n              onSellClick={setSelectedStock}\r\n              loading={loading}\r\n            />\r\n          ) : (\r\n            <div className=\"h-full flex items-center justify-center text-gray-600\">\r\n              <div className=\"text-center\">\r\n                <Globe size={48} className=\"mx-auto mb-4 opacity-60\" />\r\n                <p className=\"text-xl\">Select a stock to view details</p>\r\n              </div>\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      {/* Success Popup */}\r\n      <AnimatePresence>\r\n        {showSuccessPopup && (\r\n          <motion.div\r\n            initial={{ opacity: 0, y: 50 }}\r\n            animate={{ opacity: 1, y: 0 }}\r\n            exit={{ opacity: 0, y: -50 }}\r\n            className=\"fixed inset-0 flex items-center justify-center z-50\"\r\n          >\r\n            <div className=\"bg-black/50 backdrop-blur-sm fixed inset-0\" /> {/* Overlay */}\r\n            <motion.div\r\n              initial={{ scale: 0.8 }}\r\n              animate={{ scale: 1 }}\r\n              exit={{ scale: 0.8 }}\r\n              className=\"bg-white backdrop-blur-lg rounded-xl shadow-2xl p-6 max-w-md w-full mx-4 border border-gray-200\"\r\n            >\r\n              <div className=\"flex flex-col items-center gap-4 text-center\">\r\n                <div className=\"bg-green-500/10 rounded-full p-3\">\r\n                  <Check className=\"w-8 h-8 text-green-500\" />\r\n                </div>\r\n                <h2 className=\"text-2xl font-semibold text-gray-900\">Success!</h2>\r\n                <p className=\"text-gray-600\">\r\n                  Transaction completed successfully! A notification has been sent to your email.\r\n                </p>\r\n                <button\r\n                  onClick={() => setShowSuccessPopup(false)}\r\n                  className=\"mt-4 px-6 py-2 bg-green-500 text-white rounded-lg hover:bg-green-600 transition-colors\"\r\n                >\r\n                  Close\r\n                </button>\r\n              </div>\r\n            </motion.div>\r\n          </motion.div>\r\n        )}\r\n      </AnimatePresence>\r\n\r\n      {/* Sell Modal */}\r\n      {selectedStock && (\r\n        <SellModal\r\n          stock={selectedStock}\r\n          onClose={() => setSelectedStock(null)}\r\n          onSuccess={(quantity) => handleSell(selectedStock.symbol, quantity)}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SellStocks;"],"names":["SellModal","stock","onClose","onSuccess","quantity","setQuantity","useState","isAuthenticated","useAuth","showAuthModal","setShowAuthModal","error","setError","handleSell","async","jsxRuntimeExports","jsxs","Fragment","children","jsx","className","name","symbol","onClick","XIcon","size","Math","max","MinusIcon","min","PlusIcon","_a","price","toFixed","AuthModal","isOpen","generateRandomPrice","basePrice","volatility","random","StockChart","onTimeframeChange","initialBasePrice","timeframe","setTimeframe","stockData","setStockData","hoveredData","setHoveredData","AAPL","MSFT","GOOGL","TSLA","NVDA","useEffect","data","dataPoints","periods","ALL","currentPrice","now","Date","i","date","setMinutes","getMinutes","setHours","getHours","setDate","getDate","unshift","toISOString","Number","generateStockData","interval","setInterval","lastPrice","length","newPrice","newData","slice","clearInterval","priceChange","priceChangePercent","CustomTooltip","active","payload","label","value","toLocaleTimeString","hour","minute","toLocaleDateString","month","day","motion","div","initial","opacity","animate","map","tf","handleTimeframeChange","ResponsiveContainer","width","height","AreaChart","onMouseMove","activePayload","onMouseLeave","id","x1","y1","x2","y2","offset","stopColor","stopOpacity","CartesianGrid","strokeDasharray","stroke","vertical","XAxis","dataKey","tickFormatter","d","tick","fill","fontSize","axisLine","tickLine","YAxis","domain","Tooltip","content","Area","type","strokeWidth","animationDuration","dot","activeDot","r","y","StockDetail","onSellClick","loading","timeFrame","setTimeFrame","currentTime","setCurrentTime","recommendationTrends","setRecommendationTrends","trendsLoading","setTrendsLoading","timer","Globe","trendColors","strongBuy","buy","hold","sell","strongSell","AnimatePresence","mode","exit","span","color","totalReturn","ArrowUp","ArrowDown","abs","rotate","transition","duration","repeat","Infinity","ease","trend","index","period","item","style","formatPercent","Intl","NumberFormat","minimumFractionDigits","maximumFractionDigits","format","SellStocks","user","token","setLoading","searchTerm","setSearchTerm","selectedStock","setSelectedStock","selectedStockDetail","setSelectedStockDetail","showSuccessPopup","setShowSuccessPopup","portfolio","setPortfolio","isPending","startTransition","useTransition","emailjs","init","console","response","fetch","method","headers","Authorization","ok","Error","json","log","Array","isArray","validPortfolio","filter","holding","fetchPortfolio","body","JSON","stringify","stockSymbol","errorData","message","prevPortfolio","newQuantity","totalPrice","isNaN","setTimeout","email","templateParams","to_email","stock_symbol","stock_name","total_price","send","alert","handleTransactionSuccess","filteredPortfolio","toLowerCase","includes","_b","Header","DollarSign","Search","placeholder","onChange","e","target","LoadingSpinner","layout","currency","scale","Check"],"mappings":"0SAgBA,MAAMA,EAAsC,EAAGC,QAAOC,UAASC,sBAC7D,MAAOC,EAAUC,GAAeC,EAAAA,SAAS,IACnCC,gBAAEA,GAAoBC,KACrBC,EAAeC,GAAoBJ,EAAAA,UAAS,IAC5CK,EAAOC,GAAYN,EAAAA,SAAwB,MAE5CO,EAAaC,UACZP,EAKDH,GAAY,EACdQ,EAAS,qCAINX,GAASG,EAAWH,EAAMG,SAC7BQ,EAAS,uCAIXA,EAAS,MACTT,EAAUC,GACFF,KAhBNQ,GAAiB,EAgBX,EAGV,OAAKT,EAMDc,EAAAC,KAAAC,WAAA,CAAAC,SAAA,CAAAC,EAAAA,IAAC,OAAIC,UAAU,mFACbF,SAACF,EAAAA,KAAA,MAAA,CAAII,UAAU,4FACbF,SAAA,GAACF,KAAA,MAAA,CAAII,UAAU,yCACbF,SAAA,QAAC,MACC,CAAAA,SAAA,CAAAC,EAAAA,IAAC,KAAG,CAAAC,UAAU,kCAAmCF,SAAAjB,EAAMoB,OACtDF,EAAAA,IAAA,IAAA,CAAEC,UAAU,wBAAyBF,WAAMI,YAE9CP,EAAAI,IAAC,SAAA,CACCI,QAASrB,EACTkB,UAAU,qFAEVF,SAAAC,EAAAA,IAACK,EAAM,CAAAC,KAAM,YAIjBT,KAAC,MAAI,CAAAI,UAAU,YACbF,SAAA,GAACF,KAAA,MAAA,CAAII,UAAU,uCACbF,SAAA,CAACC,EAAAA,IAAA,OAAA,CAAKC,UAAU,wBAAwBF,SAAQ,eAChDF,KAAC,MAAI,CAAAI,UAAU,8BACbF,SAAA,CAAAH,EAAAI,IAAC,SAAA,CACCI,QAAS,IAAMlB,EAAYqB,KAAKC,IAAI,EAAGvB,EAAW,IAClDgB,UAAU,wIAEVF,SAAAC,EAAAA,IAACS,EAAU,CAAAH,KAAM,OAElBN,EAAAA,IAAA,OAAA,CAAKC,UAAU,kDACbF,SACHd,IACAW,EAAAI,IAAC,SAAA,CACCI,QAAS,IAAMlB,EAAYqB,KAAKG,IAAI5B,EAAMG,SAAUA,EAAW,IAC/DgB,UAAU,wIAEVF,SAAAC,EAAAA,IAACW,EAAS,CAAAL,KAAM,YAGpBT,KAAC,IAAE,CAAAI,UAAU,wBAAwBF,SAAA,CAAA,cACvBjB,EAAMG,SAAS,kBAI/BY,KAAC,MAAI,CAAAI,UAAU,0CACbF,SAAA,GAACF,KAAA,MAAA,CAAII,UAAU,+BACbF,SAAA,CAACC,EAAAA,IAAA,OAAA,CAAKC,UAAU,gBAAgBF,SAAe,sBAC/CF,KAAC,OAAK,CAAAI,UAAU,yBAAyBF,SAAA,CAAA,IAAE,OAAAa,EAAA9B,EAAM+B,YAAN,EAAAD,EAAaE,QAAQ,WAElEjB,KAAC,MAAI,CAAAI,UAAU,+BACbF,SAAA,CAACC,EAAAA,IAAA,OAAA,CAAKC,UAAU,gBAAgBF,SAAY,mBAC5CF,KAAC,OAAK,CAAAI,UAAU,yBAAyBF,SAAA,CAAA,KAAGjB,EAAM+B,MAAQ5B,GAAU6B,QAAQ,YAI/EtB,KACCQ,IAAC,MAAI,CAAAC,UAAU,6EACZF,SACHP,MAGFK,KAAC,MAAI,CAAAI,UAAU,iBACbF,SAAA,CAAAH,EAAAI,IAAC,SAAA,CACCI,QAASV,EACTO,UAAU,6HACXF,SAAA,aAGDH,EAAAI,IAAC,SAAA,CACCI,QAASrB,EACTkB,UAAU,2GACXF,SAAA,sBAQTH,EAAAI,IAACe,EAAA,CACCC,OAAQ1B,EACRP,QAAS,IAAMQ,GAAiB,GAChCP,UAAW,KACTO,GAAiB,GACZT,GACMY,GAAA,OAtFV,IAyFP,ECnHEuB,EAAsB,CAACC,EAAmBC,EAAqB,OAE5DD,EADQA,EAAYC,GAAcZ,KAAKa,SAAW,IAsC9CC,EAAwC,EACnDlB,SACAmB,oBACAJ,UAAWK,EAAmB,QAE9B,MAAOC,EAAWC,GAAgBtC,EAAAA,SAAS,OACpCuC,EAAWC,GAAgBxC,EAAAA,SAA2B,KACtDyC,EAAaC,GAAkB1C,EAAAA,SAAgC,MAEhE+B,EAAY,CAChBY,KAAQ,IACRC,KAAQ,IACRC,MAAS,IACTC,KAAQ,IACRC,KAAQ,KACR/B,IAAWoB,EAEbY,EAAAA,WAAU,KACF,MAAAC,EApDgB,EAACZ,EAAmBN,EAAoB,OAChE,MAAMmB,EAA+B,GAC/BC,EAAU,CACd,KAAM,GACN,KAAM,IACN,KAAM,GACN,KAAM,GACN,KAAM,IACNC,IAAO,MACPf,IAAc,GAEhB,IAAIgB,EAAetB,EACb,MAAAuB,MAAUC,KAEhB,IAAA,IAASC,EAAI,EAAGA,EAAIL,EAASK,IAAK,CAC1B,MAAAC,EAAO,IAAIF,KAAKD,GACJ,OAAdjB,EACFoB,EAAKC,WAAWD,EAAKE,aAAoB,EAAJH,GACd,OAAdnB,EACToB,EAAKG,SAASH,EAAKI,WAAaL,GAEhCC,EAAKK,QAAQL,EAAKM,UAAYP,GAGhCH,EAAevB,EAAoBuB,GACnCH,EAAWc,QAAQ,CACjBP,KAAMA,EAAKQ,cACXvC,MAAOwC,OAAOb,EAAa1B,QAAQ,KACpC,CAGI,OAAAuB,CAAA,EAqBQiB,CAAkB9B,EAAWN,GAI1C,GAHAS,EAAaS,GAGK,OAAdZ,EAAoB,CAChB,MAAA+B,EAAWC,aAAY,KAC3B,MAAMC,EAAYrB,EAAKA,EAAKsB,OAAS,GAAG7C,MAClC8C,EAAW1C,EAAoBwC,EAAW,MAC1CG,EAAU,IAAIxB,EAAKyB,MAAM,GAAI,CACjCjB,MAAM,IAAIF,MAAOU,cACjBvC,MAAO8C,IAEThC,EAAaiC,EAAO,GACnB,KAEI,MAAA,IAAME,cAAcP,EAAQ,IAEpC,CAAC/B,EAAWN,IAET,MAKA6C,EAAcrC,EAAUgC,OAAS,EAAIhC,EAAUA,EAAUgC,OAAS,GAAG7C,MAAQa,EAAU,GAAGb,MAAQ,EAClGmD,EAAqBtC,EAAUgC,OAAS,GAAMK,EAAcrC,EAAU,GAAGb,MAAS,KAAKC,QAAQ,GAAK,OAIpGmD,EAAgB,EAAGC,SAAQC,UAASC,YACpC,GAAAF,GAAUC,GAAWA,EAAQT,OAAQ,CACjC,MAAAd,EAAO,IAAIF,KAAK0B,GAChBvD,EAAQsD,EAAQ,GAAGE,MAGvB,SAAAxE,KAAC,MAAI,CAAAI,UAAU,+EACbF,SAAA,CAACC,EAAAA,IAAA,IAAA,CAAEC,UAAU,6BACVF,SAAc,OAAAyB,EACXoB,EAAK0B,mBAAmB,GAAI,CAAEC,KAAM,UAAWC,OAAQ,YACvD5B,EAAK6B,mBAAmB,GAAI,CAAEC,MAAO,QAASC,IAAK,gBAEzD9E,KAAC,IAAE,CAAAI,UAAU,iCAAiCF,SAAA,CAAA,IAC1Cc,EAAMC,QAAQ,QAEpB,CAGG,OAAA,IAAA,EAIP,OAAAlB,EAAAC,KAAC+E,EAAOC,IAAP,CAECC,QAAS,CAAEC,QAAS,GACpBC,QAAS,CAAED,QAAS,GACpB9E,UAAU,qDAEVF,SAAA,GAACF,KAAA,MAAA,CAAII,UAAU,yCACbF,SAAA,QAAC,MACC,CAAAA,SAAA,CAACC,EAAAA,IAAA,KAAA,CAAGC,UAAU,iCAAkCF,SAAOI,IACvDN,EAAAA,KAAC,OAAII,UAAW,WAAW8D,GAAe,EAAI,iBAAmB,4BAC9DhE,SAAA,CAAAgE,GAAe,EAAI,IAAM,GAAIC,EAAmB,gBAIpD,MAAI,CAAA/D,UAAU,aACZF,SAvCU,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,OAuC9BkF,KAAKC,GACftF,EAAAI,IAAC,SAAA,CAECI,QAAS,IAlDS,CAAC8E,IAC7BzD,EAAayD,GACO,MAAA5D,GAAAA,EAAA4D,EAAA,EAgDKC,CAAsBD,GACrCjF,UAAW,kDACTuB,IAAc0D,EACV,kCACA,gEAGLnF,SAAAmF,GARIA,UAcZlF,EAAAA,IAAAoF,EAAA,CAAoBC,MAAM,OAAOC,OAAO,MACvCvF,SAAAH,EAAAC,KAAC0F,EAAA,CACCnD,KAAMV,EACN8D,YAAcpD,IACRA,EAAKqD,eACP5D,EAAeO,EAAKqD,cAAc,GAAGtB,QAAO,EAGhDuB,aAAc,IAAM7D,EAAe,MAEnC9B,SAAA,GAAAC,IAAC,OACC,CAAAD,SAAAF,EAAAA,KAAC,iBAAe,CAAA8F,GAAG,aAAaC,GAAG,IAAIC,GAAG,IAAIC,GAAG,IAAIC,GAAG,IACtDhG,SAAA,CAAAH,EAAAI,IAAC,OAAA,CACCgG,OAAO,KACPC,UAAWlC,GAAe,EAAI,mBAAqB,mBACnDmC,YAAa,KAEftG,EAAAI,IAAC,OAAA,CACCgG,OAAO,MACPC,UAAWlC,GAAe,EAAI,mBAAqB,mBACnDmC,YAAa,SAKnBtG,EAAAI,IAACmG,EAAA,CACCC,gBAAgB,MAChBC,OAAO,mBACPC,UAAU,IAGZ1G,EAAAI,IAACuG,EAAA,CACCC,QAAQ,OACRC,cAAgB7D,IACR,MAAA8D,EAAI,IAAIhE,KAAKE,GACnB,MAAkB,OAAdpB,EACKkF,EAAEpC,mBAAmB,GAAI,CAAEC,KAAM,UAAWC,OAAQ,YAEtDkC,EAAEjC,mBAAmB,GAAI,CAAEE,IAAK,UAAWD,MAAO,SAAS,EAEpE2B,OAAO,kBACPM,KAAM,CAAEC,KAAM,kBAAmBC,SAAU,IAC3CC,SAAU,CAAET,OAAQ,mBACpBU,SAAU,CAAEV,OAAQ,qBAGtBzG,EAAAI,IAACgH,EAAA,CACCC,OAAQ,CAAC,OAAQ,QACjBZ,OAAO,kBACPM,KAAM,CAAEC,KAAM,kBAAmBC,SAAU,IAC3CJ,cAAgBpC,GAAU,IAAIA,EAAMvD,QAAQ,KAC5CgG,SAAU,CAAET,OAAQ,mBACpBU,SAAU,CAAEV,OAAQ,mBACpBhB,MAAO,KAGRrF,EAAAA,IAAAkH,EAAA,CAAQC,QAASvH,EAAAI,IAACiE,GAAc,KAEjCrE,EAAAI,IAACoH,EAAA,CACCC,KAAK,WACLb,QAAQ,QACRH,OAAQtC,GAAe,EAAI,mBAAqB,mBAChDuD,YAAa,IACbV,KAAK,mBACLW,kBAAmB,IACnBC,KAAK,EACLC,UAAW,CACTC,EAAG,EACHd,KAAM7C,GAAe,EAAI,mBAAqB,mBAC9CsC,OAAQ,OACRiB,YAAa,UAMpB1F,GACChC,EAAAC,KAAC+E,EAAOC,IAAP,CACCC,QAAS,CAAEC,QAAS,EAAG4C,EAAG,IAC1B3C,QAAS,CAAED,QAAS,EAAG4C,EAAG,GAC1B1H,UAAU,sGAEVF,SAAA,CAACC,EAAAA,IAAA,IAAA,CAAEC,UAAU,wBAAwBF,SAAa,oBAClDF,KAAC,IAAE,CAAAI,UAAU,kCAAkCF,SAAA,CAAA,IAC3C6B,EAAYf,MAAMC,QAAQ,WAlH7BX,EAsHP,ECzOEyH,EAA0C,EAAG9I,QAAO+I,cAAaC,oBACrE,MAAOC,EAAWC,GAAgB7I,EAAAA,SAAiB,OAC5C8I,EAAaC,GAAkB/I,EAAAA,SAAS,IAAIuD,OAC5CyF,EAAsBC,GAA2BjJ,EAAAA,SAAgB,KACjEkJ,EAAeC,GAAoBnJ,EAAAA,UAAkB,GASxD,GAPJgD,EAAAA,WAAU,KACF,MAAAoG,EAAQ/E,aAAY,KACT0E,EAAA,IAAIxF,KAAM,GACxB,KACI,MAAA,IAAMoB,cAAcyE,EAAK,GAC/B,IAECT,IAAYhJ,EACd,aACG,MAAI,CAAAmB,UAAU,wDACbF,SAACF,EAAAA,KAAA,MAAA,CAAII,UAAU,cACbF,SAAA,CAAAC,EAAAA,IAACwI,EAAM,CAAAlI,KAAM,GAAIL,UAAU,4BAC1BD,EAAAA,IAAA,IAAA,CAAEC,UAAU,qBAAqBF,SAA8B,wCAMxE,MAEM0I,EAAc,CAClBC,UAAW,UACXC,IAAK,UACLC,KAAM,UACNC,KAAM,UACNC,WAAY,WAIZ,SAAA9I,IAAC+I,EAAgB,CAAAC,KAAK,OACpBjJ,SAAAH,EAAAC,KAAC+E,EAAOC,IAAP,CACCC,QAAS,CAAEC,QAAS,EAAG4C,EAAG,IAC1B3C,QAAS,CAAED,QAAS,EAAG4C,EAAG,GAC1BsB,KAAM,CAAElE,QAAS,EAAG4C,GAAO,IAC3B1H,UAAU,iEAEVF,SAAA,CAAAC,MAAC,MAAI,CAAAC,UAAU,yCACbF,SAAAH,EAAAC,KAAC,MACC,CAAAE,SAAA,CAAAC,EAAAA,IAAC,KAAG,CAAAC,UAAU,sCAAuCF,SAAAjB,EAAMoB,SAC3DL,KAAC,MAAI,CAAAI,UAAU,kCACbF,SAAA,CAAAC,EAAAA,IAAC,OAAK,CAAAC,UAAU,gBAAiBF,SAAAjB,EAAMqB,SACtCH,EAAAA,IAAA,OAAA,CAAKC,UAAU,gBAAgBF,SAAC,YAChC,OAAK,CAAAE,UAAU,2BAA4BF,SAAAkI,EAAY3D,iCAK9DzE,KAAC,MAAI,CAAAI,UAAU,iCACbF,SAAA,GAACF,KAAA,OAAA,CAAKI,UAAU,iCAAiCF,SAAA,CAAA,KAC7C,OAAAa,EAAM9B,EAAA0D,mBAAc,EAAA5B,EAAAE,QAAQ,KAAM,SAEtClB,EAAAC,KAAC+E,EAAOsE,KAAP,CACClE,QAAS,CACPmE,OAAQrK,EAAMsK,aAAe,IAAM,EAAI,UAAY,WAErDnJ,UAAU,uCAERF,SAAA,EAAMjB,EAAAsK,aAAe,IAAM,EAAKpJ,EAAAA,IAAAqJ,EAAA,CAAQ/I,KAAM,KAASV,EAAAI,IAACsJ,EAAU,CAAAhJ,KAAM,KACzEC,KAAKgJ,IAAIzK,EAAMsK,aAAe,GAAGtI,QAAQ,GAAG,gBAIhD,MAAI,CAAAb,UAAU,iDACZF,SA7CU,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,OA6C9BkF,KAAKC,GACftF,EAAAI,IAAC,SAAA,CAECI,QAAS,IAAM4H,EAAa9C,GAC5BjF,UAAW,8DACT8H,IAAc7C,EACV,sBACA,gEAGLnF,SAAAmF,GARIA,OAaVlF,EAAAA,IAAA,MAAA,CAAIC,UAAU,sDACbF,SAACC,EAAAA,IAAA,MAAA,CAAIC,UAAU,aACbF,SAACC,EAAAA,IAAAqB,EAAA,CAAWvC,QAAciJ,oBAI9BlI,KAAC,MAAI,CAAAI,UAAU,8BACbF,SAAA,CAACC,EAAAA,IAAA,KAAA,CAAGC,UAAU,qCAAqCF,SAAe,oBACjEsI,IACCrI,IAAC,MAAI,CAAAC,UAAU,wCACbF,SAAAH,EAAAI,IAAC4E,EAAOC,IAAP,CACCG,QAAS,CAAEwE,OAAQ,KACnBC,WAAY,CAAEC,SAAU,EAAGC,OAAQC,IAAUC,KAAM,UACnD5J,UAAU,mEAGZkI,EAAqBzE,OAAS,QAC/B,MAAI,CAAAzD,UAAU,YACZF,SAAAoI,EAAqBlD,KAAI,CAAC6E,EAAOC,IAC/BlK,EAAAA,KAAA,MAAA,CAAgBI,UAAU,oCACzBF,SAAA,CAAAC,EAAAA,IAAC,IAAE,CAAAC,UAAU,wCAAyCF,SAAA+J,EAAME,WAC5DhK,IAAC,MAAI,CAAAC,UAAU,yBACZF,SAAA,CACC,CAAEqE,MAAO,aAAcC,MAAOyF,EAAMpB,UAAWS,MAAOV,EAAYC,WAClE,CAAEtE,MAAO,MAAOC,MAAOyF,EAAMnB,IAAKQ,MAAOV,EAAYE,KACrD,CAAEvE,MAAO,OAAQC,MAAOyF,EAAMlB,KAAMO,MAAOV,EAAYG,MACvD,CAAExE,MAAO,OAAQC,MAAOyF,EAAMjB,KAAMM,MAAOV,EAAYI,MACvD,CAAEzE,MAAO,cAAeC,MAAOyF,EAAMhB,WAAYK,MAAOV,EAAYK,aACpE7D,KAAI,CAACgF,EAAMtH,IACV9C,EAAAA,KAAA,MAAA,CAAYI,UAAU,cACrBF,SAAA,CAAAC,EAAAA,IAAC,IAAE,CAAAC,UAAU,wCAAyCF,SAAAkK,EAAK7F,QAC3DpE,EAAAA,IAAC,IAAE,CAAAC,UAAU,qBAAqBiK,MAAO,CAAEf,MAAOc,EAAKd,OACpDpJ,SAAAkK,EAAK5F,UAHA1B,SAVNoH,OAsBb/J,EAAAA,IAAA,MAAA,CAAIC,UAAU,wCACbF,SAACC,EAAAA,IAAA,OAAA,CAAKC,UAAU,2BAA2BF,mDAKrD,ECvDSoK,EAAiB9F,GAErB,IAAI+F,KAAKC,aAAa,QAAS,CAEpCH,MAAO,UAEPI,sBAAuB,EAEvBC,sBAAuB,IAEtBC,OAAOnG,EAAQ,KCvFPoG,EAAuB,KAClC,MAAMC,KAAEA,EAAAC,MAAMA,GAAUtL,KACjByI,EAAS8C,GAAczL,EAAAA,UAAS,IAChCK,EAAOC,GAAYN,EAAAA,SAAwB,OAC3C0L,EAAYC,GAAiB3L,EAAAA,SAAS,KACtC4L,EAAeC,GAAoB7L,EAAAA,SAA2B,OAC9D8L,EAAqBC,GAA0B/L,EAAAA,SAA2B,OAC1EgM,EAAkBC,GAAuBjM,EAAAA,UAAS,IAClDkM,EAAWC,GAAgBnM,EAAAA,SAAsB,KACjDoM,EAAWC,GAAmBC,kBAGrCtJ,EAAAA,WAAU,KACJ,IACFuJ,EAAQC,KAAK,2BACNnM,GACCoM,QAAApM,MAAM,gCAAiCA,EAAK,IAErD,IAGH2C,EAAAA,WAAU,KACexC,WACjB,IACI,MAAAkM,QAAiBC,MAAM,0DAA2D,CACtFC,OAAQ,MACRC,QAAS,CACPC,cAAe,UAAUtB,OAIzB,IAACkB,EAASK,GACN,MAAA,IAAIC,MAAM,6BAGlB,MAAM/J,KAAEA,SAAeyJ,EAASO,OAI5B,GAHIR,QAAAS,IAAI,oBAAqBjK,IAG7BkK,MAAMC,QAAQnK,GAMV,MAAA,IAAI+J,MAAM,iCANO,CACvB,MAAMK,EAAiBpK,EAAKqK,QACzBC,IAAqB,MAATA,OAAS,EAAAA,EAAAvM,UAAmB,MAATuM,OAAS,EAAAA,EAAAxM,QAE3CoL,EAAakB,EAAc,QAItBhN,GACCoM,QAAApM,MAAM,4BAA6BA,GAC3CC,EAAS,4BACT6L,EAAa,GAAE,CACf,QACAV,GAAW,EAAK,GAIL+B,EAAA,GACd,CAAChC,IAGN,MAgFQjL,EAAaC,MAAOQ,EAAgBlB,KACpC,IACI,MAAA4M,QAAiBC,MAAM,iEAAkE,CAC7FC,OAAQ,OACRC,QAAS,CACP,eAAgB,mBAChBC,cAAe,UAAUtB,KAE3BiC,KAAMC,KAAKC,UAAU,CACnBC,YAAa5M,EACblB,WACA4B,aAAOoK,WAAqBzI,eAAgB,MAI5C,IAACqJ,EAASK,GAAI,CACV,MAAAc,QAAkBnB,EAASO,OACjC,MAAM,IAAID,MAAMa,EAAUC,SAAW,gCAA+B,CAItE3B,GAAc4B,GACZA,EAAcjI,KAAKyH,IACb,GAAAA,EAAQvM,SAAWA,EAAQ,CACvB,MAAAgN,EAAcT,EAAQzN,SAAWA,EACvC,MAAO,IAAKyN,EAASzN,SAAUkO,EAAY,CAEtC,OAAAT,CAAA,IACND,QAAQC,GAAYA,EAAQzN,SAAW,MA5GjBU,OAAOb,EAAkBG,EAAkBmO,KAE1E,GAA0B,iBAAfA,GAA2BC,MAAMD,GAClCxB,QAAApM,MAAM,sBAAuB4N,OADvC,CAMA5B,GAAgB,KACdJ,GAAoB,EAAI,IAE1BkC,YAAW,KACT9B,GAAgB,KACdJ,GAAoB,EAAK,GAC1B,GACA,KAGC,IACI,MAAAS,QAAiBC,MAAM,0DAA2D,CACtFC,OAAQ,MACRC,QAAS,CACPC,cAAe,UAAUtB,OAIzB,IAACkB,EAASK,GACN,MAAA,IAAIC,MAAM,6BAGlB,MAAM/J,KAAEA,SAAeyJ,EAASO,OAI5B,GAHIR,QAAAS,IAAI,oBAAqBjK,IAG7BkK,MAAMC,QAAQnK,GAMV,MAAA,IAAI+J,MAAM,iCANO,CACvB,MAAMK,EAAiBpK,EAAKqK,QACzBC,IAAqB,MAATA,OAAS,EAAAA,EAAAvM,UAAmB,MAATuM,OAAS,EAAAA,EAAAxM,QAE3CoL,EAAakB,EAAc,QAItBhN,GACCoM,QAAApM,MAAM,4BAA6BA,GAC3CC,EAAS,4BACT6L,EAAa,GAAE,CAIjB,SAAIZ,WAAM6C,MACJ,IACF,MAAMC,EAAiB,CACrBC,SAAU/C,EAAK6C,MACfG,aAAc5O,EAAMqB,OACpBwN,WAAY7O,EAAMoB,KAClBjB,WACA2O,YAAaR,EAAWtM,QAAQ,UAG5B4K,EAAQmC,KACZ,kBACA,mBACAL,GAGF5B,QAAQS,IAAI,+CACL7M,GACCoM,QAAApM,MAAM,qCAAsCA,EAAK,MAG3DoM,QAAQpM,MAAM,yBACdsO,MAAM,8DAnEN,CAmEmE,EAwCjEC,CAAyB9C,EAAsBhM,EAAUgM,EAAqBzI,aAAevD,SACtFO,GACCoM,QAAApM,MAAM,2BAA4BA,GAC1CC,EAAS,uBAAsB,GAK7BuO,GAAqB1B,MAAMC,QAAQlB,GAAaA,EAAY,IAAIoB,QACnEC,YACC,OAAA,OAAA9L,EAAA,MAAA8L,OAAA,EAAAA,EAASvM,aAAT,EAAAS,EAAiBqN,cAAcC,SAASrD,EAAWoD,kBACnD,OAAAE,EAAA,MAAAzB,OAAA,EAAAA,EAASxM,WAAT,EAAAiO,EAAeF,cAAcC,SAASrD,EAAWoD,eAAa,IAIhE,SAAApO,KAAC,MAAI,CAAAI,UAAU,mCACbF,SAAA,CAAAH,EAAAI,IAACoO,EAAO,UACP,MACC,CAAArO,SAAAC,MAAC,MAAI,CAAAC,UAAU,mDACZF,SACCkL,GAAArL,EAAAC,KAAC,SAAA,CACCO,QAAS,IAAM4K,EAAiBC,GAChChL,UAAU,kHAEVF,SAAA,GAACC,IAAAqO,EAAA,CAAW/N,KAAM,KAAM,QAClB2K,EAAoB9K,gBAMlCN,KAAC,MAAI,CAAAI,UAAU,sBAEbF,SAAA,CAAAC,EAAAA,IAAC,OAAIC,UAAU,gDACbF,SAACF,EAAAA,KAAA,MAAA,CAAII,UAAU,MACbF,SAAA,GAACF,KAAA,MAAA,CAAII,UAAU,gBACbF,SAAA,CAAAC,EAAAA,IAACsO,EAAO,CAAArO,UAAU,mEAAmEK,KAAM,KAC3FV,EAAAI,IAAC,QAAA,CACCqH,KAAK,OACLkH,YAAY,mBACZlK,MAAOwG,EACP2D,SAAWC,GAAM3D,EAAc2D,EAAEC,OAAOrK,OACxCpE,UAAU,0IAKdD,IAAC,MAAI,CAAAC,UAAU,4DACZF,SAAA+H,EACE9H,EAAAA,IAAA2O,EAAA,CAAc,GAEfX,EAAkB/I,KAAKyH,IACrB9M,SAAAI,IAAC4E,EAAOC,IAAP,CAEC+J,QAAM,EACN3O,UAAW,kDACT,MAAAgL,OAAA,EAAAA,EAAqB9K,UAAWuM,EAAQvM,OACpC,cACA,8BAENC,QAAS,KA/FzB8K,EA+FiDwB,EAAO,EAExC3M,SAAAH,EAAAC,KAAC,MAAI,CAAAI,UAAU,mCACbF,SAAA,QAAC,MACC,CAAAA,SAAA,CAAAC,EAAAA,IAAC,KAAG,CAAAC,UAAU,cAAeF,SAAA2M,EAAQvM,SACpCH,EAAAA,IAAA,IAAA,CAAEC,UAAU,wBAAyBF,WAAQG,UAEhDN,EAAAC,KAAC+E,EAAOC,IAAP,CACCG,QAAS,CACPmE,OAAQuD,EAAQtD,aAAe,IAAM,EAAI,UAAY,WAEvDnJ,UAAU,aAEVF,SAAA,CAAAC,MAAC,KAAEC,UAAU,cAAeF,UDrLxBsE,ECqLoCqI,EAAQlK,aDnL/D,IAAI4H,KAAKC,aAAa,QAAS,CAEpCH,MAAO,WAEP2E,SAAU,QAETrE,OAAOnG,YC8Ka,IAAE,CAAApE,UAAU,kCACTF,cAAwB,IAAhB2M,EAAAtD,aAEJvJ,EAAAA,KAAAC,EAAAA,SAAA,CAAAC,SAAA,CAAQ2M,EAAAtD,aAAe,EAAKpJ,EAAAA,IAACqJ,EAAQ,CAAA/I,KAAM,KAASN,EAAAA,IAACsJ,EAAU,CAAAhJ,KAAM,KACtE6J,EAAc5J,KAAKgJ,IAAImD,EAAQtD,0BAzBrCsD,EAAQvM,QDjKN,IAACkE,CCiMX,WAORrE,EAAAA,IAAA,MAAA,CAAIC,UAAU,yBACZF,SACCkL,EAAArL,EAAAI,IAAC4H,EAAA,CACC9I,MAAOmM,EACPpD,YAAamD,EACblD,kBAGD,MAAI,CAAA7H,UAAU,wDACbF,SAACF,EAAAA,KAAA,MAAA,CAAII,UAAU,cACbF,SAAA,CAAAC,EAAAA,IAACwI,EAAM,CAAAlI,KAAM,GAAIL,UAAU,4BAC1BD,EAAAA,IAAA,IAAA,CAAEC,UAAU,UAAUF,SAA8B,+CAQ/DC,IAAC+I,GACEhJ,SACCoL,GAAAvL,EAAAC,KAAC+E,EAAOC,IAAP,CACCC,QAAS,CAAEC,QAAS,EAAG4C,EAAG,IAC1B3C,QAAS,CAAED,QAAS,EAAG4C,EAAG,GAC1BsB,KAAM,CAAElE,QAAS,EAAG4C,GAAO,IAC3B1H,UAAU,sDAEVF,SAAA,GAACC,IAAA,MAAA,CAAIC,UAAU,+CAA+C,IAC9DL,EAAAI,IAAC4E,EAAOC,IAAP,CACCC,QAAS,CAAEgK,MAAO,IAClB9J,QAAS,CAAE8J,MAAO,GAClB7F,KAAM,CAAE6F,MAAO,IACf7O,UAAU,kGAEVF,SAAAH,EAAAC,KAAC,MAAI,CAAAI,UAAU,+CACbF,SAAA,CAAAC,EAAAA,IAAC,OAAIC,UAAU,mCACbF,eAACgP,EAAM,CAAA9O,UAAU,6BAElBD,EAAAA,IAAA,KAAA,CAAGC,UAAU,uCAAuCF,SAAQ,aAC5DC,EAAAA,IAAA,IAAA,CAAEC,UAAU,gBAAgBF,SAE7B,oFACAH,EAAAI,IAAC,SAAA,CACCI,QAAS,IAAMgL,GAAoB,GACnCnL,UAAU,yFACXF,SAAA,oBAUVgL,GACCnL,EAAAI,IAACnB,EAAA,CACCC,MAAOiM,EACPhM,QAAS,IAAMiM,EAAiB,MAChChM,UAAYC,GAAaS,EAAWqL,EAAc5K,OAAQlB,OAGhE"}