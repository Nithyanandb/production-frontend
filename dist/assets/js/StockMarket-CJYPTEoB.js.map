{"version":3,"file":"StockMarket-CJYPTEoB.js","sources":["../../../src/components/Stock/StocksPage/SegmentSelector.tsx","../../../src/components/Stock/StocksPage/HoldingsTable.tsx","../../../src/components/Stock/StocksPage/StockMarket.tsx"],"sourcesContent":["import React from 'react';\r\nimport { motion } from 'framer-motion';\r\n\r\ninterface SegmentSelectorProps {\r\n  segments: string[];\r\n  selectedSegment: string;\r\n  onSegmentChange: (segment: string) => void;\r\n}\r\n\r\nexport const SegmentSelector: React.FC<SegmentSelectorProps> = ({\r\n  segments,\r\n  selectedSegment,\r\n  onSegmentChange,\r\n}) => {\r\n  return (\r\n    <div className=\"flex items-center gap-2 mb-8 overflow-x-auto scrollbar-hide\">\r\n      {segments.map((segment) => (\r\n        <motion.button\r\n          key={segment}\r\n          onClick={() => onSegmentChange(segment)}\r\n          whileHover={{ scale: 1.05 }}\r\n          whileTap={{ scale: 0.95 }}\r\n          className={`px-4 py-2 rounded-lg text-sm font-medium transition-all \r\n            ${selectedSegment === segment \r\n              ? 'bg-white text-black' \r\n              : 'text-gray-400 hover:text-white'}`}\r\n        >\r\n          {segment}\r\n        </motion.button>\r\n      ))}\r\n    </div>\r\n  );\r\n};","import React, { useEffect, useState } from 'react';\r\nimport  BuyModal  from '@/components/pages/BuyStocks/BuyModal';\r\nimport { motion, AnimatePresence } from 'framer-motion';\r\nimport { Check, Loader2, Search } from 'lucide-react'; // Added Search icon for search functionality\r\n\r\ninterface StockHolding {\r\n  symbol: string;\r\n  quantity: number;\r\n  currentPrice?: number;\r\n  change?: number;\r\n  changePercent?: number;\r\n  highPrice?: number;\r\n  lowPrice?: number;\r\n  openPrice?: number;\r\n  previousClose?: number;\r\n  name?: string;\r\n}\r\n\r\ninterface HoldingsTableProps {\r\n  holdings: StockHolding[];\r\n}\r\n\r\nexport const HoldingsTable: React.FC<HoldingsTableProps> = ({ holdings }) => {\r\n  const [updatedHoldings, setUpdatedHoldings] = useState<StockHolding[]>(holdings);\r\n  const [loading, setLoading] = useState<boolean>(false);\r\n  const [error, setError] = useState<string | null>(null);\r\n  const [selectedStock, setSelectedStock] = useState<StockHolding | null>(null);\r\n  const [showSuccessPopup, setShowSuccessPopup] = useState<boolean>(false);\r\n  const [searchTerm, setSearchTerm] = useState<string>(''); // Added search term state\r\n  const API_KEY = 'ctre6q9r01qhb16mmh70ctre6q9r01qhb16mmh7g'; // Replace with your Finnhub API key\r\n\r\n  useEffect(() => {\r\n    const fetchStockData = async () => {\r\n      setLoading(true);\r\n      try {\r\n        const updated = await Promise.all(\r\n          holdings.map(async (holding) => {\r\n            const quoteResponse = await fetch(\r\n              `https://finnhub.io/api/v1/quote?symbol=${holding.symbol}&token=${API_KEY}`\r\n            );\r\n            const quoteData = await quoteResponse.json();\r\n\r\n            return {\r\n              ...holding,\r\n              currentPrice: quoteData.c,\r\n              change: quoteData.d,\r\n              changePercent: quoteData.dp,\r\n              highPrice: quoteData.h,\r\n              lowPrice: quoteData.l,\r\n              openPrice: quoteData.o,\r\n              previousClose: quoteData.pc,\r\n            };\r\n          })\r\n        );\r\n        setUpdatedHoldings(updated);\r\n      } catch (err) {\r\n        setError('Failed to fetch stock data. Please try again later.');\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    if (holdings.length > 0) {\r\n      fetchStockData();\r\n    }\r\n  }, [holdings]);\r\n\r\n  const handleBuy = async (transactionData: {\r\n    stockSymbol: string;\r\n    stockName: string;\r\n    quantity: number;\r\n    price: number;\r\n  }) => {\r\n    try {\r\n      const response = await fetch('http://localhost:2000/transaction/buy', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify(transactionData),\r\n      });\r\n\r\n      if (!response.ok) {\r\n        const errorData = await response.json();\r\n        throw new Error(errorData.message || 'Failed to process transaction');\r\n      }\r\n\r\n      setShowSuccessPopup(true);\r\n      setTimeout(() => {\r\n        setShowSuccessPopup(false);\r\n      }, 3000);\r\n      console.log('Transaction completed successfully!');\r\n    } catch (error) {\r\n      setError('Transaction failed. Please try again.');\r\n      console.error('Transaction failed:', error);\r\n    }\r\n  };\r\n\r\n  // Filter holdings based on search term\r\n  const filteredHoldings = updatedHoldings.filter(\r\n    (holding) =>\r\n      holding.symbol.toLowerCase().includes(searchTerm.toLowerCase()) ||\r\n      (holding.name && holding.name.toLowerCase().includes(searchTerm.toLowerCase()))\r\n  );\r\n\r\n  if (loading) {\r\n    return (\r\n      <div className=\"flex items-center justify-center h-64\">\r\n        <Loader2 className=\"w-8 h-8 animate-spin text-gray-400\" />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (error) {\r\n    return <div className=\"text-center py-4 text-red-500\">{error}</div>;\r\n  }\r\n\r\n  if (!updatedHoldings || updatedHoldings.length === 0) {\r\n    return <div className=\"text-center py-4 text-gray-400\">No holdings available.</div>;\r\n  }\r\n\r\n  return (\r\n    <div className=\"overflow-x-auto custom-scrollbar\">\r\n      {/* Search Bar */}\r\n      <div className=\"relative mb-6\">\r\n        <Search className=\"absolute left-4 top-1/2 transform -translate-y-1/2 text-gray-400\" size={20} />\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Search holdings...\"\r\n          value={searchTerm}\r\n          onChange={(e) => setSearchTerm(e.target.value)}\r\n          className=\"w-full bg-white/5 border border-white/10 rounded-2xl pl-12 pr-4 py-3 text-base focus:outline-none focus:ring-2 focus:ring-white/20 text-white\"\r\n        />\r\n      </div>\r\n\r\n      <table className=\"min-w-full bg-black text-white\">\r\n        <thead>\r\n          <tr className=\"border-b border-white/10\">\r\n            <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-400 uppercase tracking-wider\">Symbol</th>\r\n            <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-400 uppercase tracking-wider\">Name</th>\r\n            <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-400 uppercase tracking-wider\">Quantity</th>\r\n            <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-400 uppercase tracking-wider\">Current Price</th>\r\n            <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-400 uppercase tracking-wider\">Change</th>\r\n            <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-400 uppercase tracking-wider\">Change %</th>\r\n            <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-400 uppercase tracking-wider\">High Price</th>\r\n            <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-400 uppercase tracking-wider\">Low Price</th>\r\n            <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-400 uppercase tracking-wider\">Open Price</th>\r\n            <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-400 uppercase tracking-wider\">Previous Close</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {filteredHoldings.map((holding) => (\r\n            <tr\r\n              key={holding.symbol}\r\n              className=\"border-b border-white/10 hover:bg-white/5 cursor-pointer\"\r\n              onClick={() => setSelectedStock(holding)}\r\n            >\r\n              <td className=\"px-6 py-4 font-medium\">{holding.symbol}</td>\r\n              <td className=\"px-6 py-4 text-gray-300\">{holding.name ?? 'N/A'}</td>\r\n              <td className=\"px-6 py-4\">{holding.quantity}</td>\r\n              <td className=\"px-6 py-4\">\r\n                {holding.currentPrice === undefined ? (\r\n                  <Loader2 className=\"w-4 h-4 animate-spin\" />\r\n                ) : (\r\n                  `$${holding.currentPrice.toFixed(2)}`\r\n                )}\r\n              </td>\r\n              <td className={`px-6 py-4 ${(holding.change ?? 0) >= 0 ? 'text-green-500' : 'text-red-500'}`}>\r\n                {holding.change === undefined ? (\r\n                  <Loader2 className=\"w-4 h-4 animate-spin\" />\r\n                ) : (\r\n                  `$${holding.change.toFixed(2)}`\r\n                )}\r\n              </td>\r\n              <td className={`px-6 py-4 ${(holding.changePercent ?? 0) >= 0 ? 'text-green-500' : 'text-red-500'}`}>\r\n                {holding.changePercent === undefined ? (\r\n                  <Loader2 className=\"w-4 h-4 animate-spin\" />\r\n                ) : (\r\n                  `${holding.changePercent.toFixed(2)}%`\r\n                )}\r\n              </td>\r\n              <td className=\"px-6 py-4\">\r\n                {holding.highPrice === undefined ? (\r\n                  <Loader2 className=\"w-4 h-4 animate-spin\" />\r\n                ) : (\r\n                  `$${holding.highPrice.toFixed(2)}`\r\n                )}\r\n              </td>\r\n              <td className=\"px-6 py-4\">\r\n                {holding.lowPrice === undefined ? (\r\n                  <Loader2 className=\"w-4 h-4 animate-spin\" />\r\n                ) : (\r\n                  `$${holding.lowPrice.toFixed(2)}`\r\n                )}\r\n              </td>\r\n              <td className=\"px-6 py-4\">\r\n                {holding.openPrice === undefined ? (\r\n                  <Loader2 className=\"w-4 h-4 animate-spin\" />\r\n                ) : (\r\n                  `$${holding.openPrice.toFixed(2)}`\r\n                )}\r\n              </td>\r\n              <td className=\"px-6 py-4\">\r\n                {holding.previousClose === undefined ? (\r\n                  <Loader2 className=\"w-4 h-4 animate-spin\" />\r\n                ) : (\r\n                  `$${holding.previousClose.toFixed(2)}`\r\n                )}\r\n              </td>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n\r\n      {selectedStock && (\r\n        <BuyModal\r\n          stock={{\r\n            symbol: selectedStock.symbol,\r\n            name: selectedStock.name || selectedStock.symbol,\r\n            price: selectedStock.currentPrice || 0,\r\n          }}\r\n          onClose={() => setSelectedStock(null)}\r\n          onBuy={handleBuy}\r\n          onSuccess={() => {\r\n            setShowSuccessPopup(true);\r\n            setTimeout(() => {\r\n              setShowSuccessPopup(false);\r\n            }, 3000);\r\n          }}\r\n        />\r\n      )}\r\n\r\n      {/* Success Popup */}\r\n      <AnimatePresence>\r\n        {showSuccessPopup && (\r\n          <motion.div\r\n            initial={{ opacity: 0, y: 50 }}\r\n            animate={{ opacity: 1, y: 0 }}\r\n            exit={{ opacity: 0, y: -50 }}\r\n            className=\"fixed bottom-8 right-8 z-50\"\r\n          >\r\n            <div className=\"bg-green-500 text-white px-6 py-4 rounded-xl shadow-xl flex items-center gap-3\">\r\n              <div className=\"bg-white/20 rounded-full p-1\">\r\n                <Check className=\"w-4 h-4\" />\r\n              </div>\r\n              <span>Transaction completed successfully!</span>\r\n            </div>\r\n          </motion.div>\r\n        )}\r\n      </AnimatePresence>\r\n    </div>\r\n  );\r\n};","import React, { useState, useEffect } from 'react';\r\nimport { Clock } from 'lucide-react';\r\nimport { SegmentSelector } from './SegmentSelector';\r\nimport { HoldingsTable } from './HoldingsTable';\r\nimport { symbols } from './symbols'; // Import the symbols\r\nimport Header from '@/components/Header/Header';\r\nimport { motion, AnimatePresence } from 'framer-motion';\r\n\r\nconst segments = ['ALL', 'TECHNOLOGY', 'FINANCE', 'HEALTHCARE', 'ENERGY', 'CONSUMER'];\r\nconst API_KEY = \"ctre6q9r01qhb16mmh70ctre6q9r01qhb16mmh7g\"; // Replace with your API key\r\n\r\nconst StockMarket: React.FC = () => {\r\n  const [searchTerm, setSearchTerm] = useState('');\r\n  const [selectedSegment, setSelectedSegment] = useState('ALL');\r\n  const [selectedStock, setSelectedStock] = useState<typeof symbols[0] | null>(null);\r\n  const [financials, setFinancials] = useState<Record<string, any>>({});\r\n  const [loading, setLoading] = useState<boolean>(false);\r\n\r\n  // Fetch basic financials for all symbols on component mount\r\n  useEffect(() => {\r\n    const fetchAllFinancials = async () => {\r\n      setLoading(true);\r\n      try {\r\n        const financialData: Record<string, any> = {};\r\n        for (const stock of symbols) {\r\n          const response = await fetch(\r\n            `https://finnhub.io/api/v1/stock/metric?symbol=${stock.symbol}&metric=all&token=${API_KEY}`\r\n          );\r\n          const data = await response.json();\r\n          financialData[stock.symbol] = data;\r\n        }\r\n        setFinancials(financialData);\r\n      } catch (error) {\r\n        console.error('Failed to fetch financials:', error);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchAllFinancials();\r\n  }, []);\r\n\r\n  // Get financials for the selected stock\r\n  const selectedFinancials = selectedStock ? financials[selectedStock.symbol] : null;\r\n\r\n  return (\r\n    <div className=\"min-h-screen bg-gradient-to-br from-zinc-900 to-black text-white\">\r\n      <Header />\r\n\r\n      <div className=\"flex h-screen pt-20\">\r\n        {/* Sidebar for Basic Financials */}\r\n        <div className=\" p-8 space-y-4 overflow-y-auto w-[400px] h-[calc(100vh-200px)]\">\r\n          <h2 className=\"text-xl font-semibold text-white mb-4\">Basic Financials</h2>\r\n          {loading ? (\r\n            <div className=\"flex justify-center items-center py-4\">\r\n              <span className=\"text-white/60\">Loading financials...</span>\r\n            </div>\r\n          ) : selectedFinancials ? (\r\n            <div className=\"space-y-4\">\r\n              <div className=\"bg-white/5 rounded-xl p-4\">\r\n                <h3 className=\"text-lg font-semibold text-white mb-2\">Key Metrics</h3>\r\n                <div className=\"space-y-2\">\r\n                  <p className=\"text-sm text-white/60\">52-Week High: <span className=\"text-white\">{selectedFinancials.metric['52WeekHigh']}</span></p>\r\n                  <p className=\"text-sm text-white/60\">52-Week Low: <span className=\"text-white\">{selectedFinancials.metric['52WeekLow']}</span></p>\r\n                  <p className=\"text-sm text-white/60\">Beta: <span className=\"text-white\">{selectedFinancials.metric.beta}</span></p>\r\n                  <p className=\"text-sm text-white/60\">PE Ratio: <span className=\"text-white\">{selectedFinancials.metric.peAnnual}</span></p>\r\n                  <p className=\"text-sm text-white/60\">Net Margin: <span className=\"text-white\">{selectedFinancials.metric.netMarginAnnual}</span></p>\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"bg-white/5 rounded-xl p-4\">\r\n                <h3 className=\"text-lg font-semibold text-white mb-2\">Annual Ratios</h3>\r\n                <div className=\"space-y-2\">\r\n                  {selectedFinancials.series.annual.currentRatio.map((ratio: any, index: number) => (\r\n                    <p key={index} className=\"text-sm text-white/60\">\r\n                      Current Ratio ({ratio.period}): <span className=\"text-white\">{ratio.v}</span>\r\n                    </p>\r\n                  ))}\r\n                  {selectedFinancials.series.annual.salesPerShare.map((ratio: any, index: number) => (\r\n                    <p key={index} className=\"text-sm text-white/60\">\r\n                      Sales Per Share ({ratio.period}): <span className=\"text-white\">{ratio.v}</span>\r\n                    </p>\r\n                  ))}\r\n                </div>\r\n              </div>\r\n            </div>\r\n          ) : (\r\n            <div className=\"flex justify-center items-center py-4\">\r\n              <span className=\"text-white/60\">Select a stock to view financials.</span>\r\n            </div>\r\n          )}\r\n        </div>\r\n\r\n        {/* Main Content */}\r\n        <div className=\"flex-1 overflow-y-auto\">\r\n          <div className=\"container mx-auto px-4 py-6\">\r\n            {/* Header */}\r\n            <div className=\"flex flex-col gap-6 mb-8\">\r\n              <div className=\"flex items-center justify-between\">\r\n                <h1 className=\"text-3xl font-semibold text-white\">Market Holdings</h1>\r\n                <div className=\"flex items-center gap-4\">\r\n                  <Clock size={16} className=\"text-gray-400\" />\r\n                  <span className=\"text-sm text-gray-400\">\r\n                    Market {new Date().toLocaleTimeString()}\r\n                  </span>\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n            {/* Segment Selector */}\r\n            <SegmentSelector\r\n              segments={segments}\r\n              selectedSegment={selectedSegment}\r\n              onSegmentChange={setSelectedSegment}\r\n            />\r\n\r\n            {/* Holdings Table */}\r\n            <AnimatePresence mode=\"wait\">\r\n              <motion.div\r\n                initial={{ opacity: 0, y: 20 }}\r\n                animate={{ opacity: 1, y: 0 }}\r\n                exit={{ opacity: 0, y: -20 }}\r\n              >\r\n                {symbols && (\r\n                  <HoldingsTable\r\n                    holdings={symbols}\r\n                    onStockSelect={setSelectedStock}\r\n                  />\r\n                )}\r\n              </motion.div>\r\n            </AnimatePresence>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default StockMarket;"],"names":["SegmentSelector","segments","selectedSegment","onSegmentChange","className","children","map","segment","jsxRuntimeExports","jsx","motion","button","onClick","whileHover","scale","whileTap","HoldingsTable","holdings","updatedHoldings","setUpdatedHoldings","useState","loading","setLoading","error","setError","selectedStock","setSelectedStock","showSuccessPopup","setShowSuccessPopup","searchTerm","setSearchTerm","useEffect","length","async","updated","Promise","all","holding","quoteResponse","fetch","symbol","quoteData","json","currentPrice","c","change","d","changePercent","dp","highPrice","h","lowPrice","l","openPrice","o","previousClose","pc","err","fetchStockData","filteredHoldings","filter","toLowerCase","includes","name","Loader2","jsxs","Search","size","type","placeholder","value","onChange","e","target","quantity","toFixed","BuyModal","stock","price","onClose","onBuy","transactionData","response","method","headers","body","JSON","stringify","ok","errorData","Error","message","setTimeout","console","log","onSuccess","AnimatePresence","div","initial","opacity","y","animate","exit","Check","StockMarket","setSelectedSegment","financials","setFinancials","financialData","symbols","data","fetchAllFinancials","selectedFinancials","Header","metric","beta","peAnnual","netMarginAnnual","series","annual","currentRatio","ratio","index","period","v","salesPerShare","Clock","Date","toLocaleTimeString","mode","onStockSelect"],"mappings":"kKASO,MAAMA,EAAkD,EAC7DC,SAAAA,EACAC,kBACAC,2BAGG,MAAI,CAAAC,UAAU,8DACZC,SAASJ,EAAAK,KAAKC,GACbC,EAAAC,IAACC,EAAOC,OAAP,CAECC,QAAS,IAAMT,EAAgBI,GAC/BM,WAAY,CAAEC,MAAO,MACrBC,SAAU,CAAED,MAAO,KACnBV,UAAW,0EACPF,IAAoBK,EAClB,sBACA,kCAELF,SAAAE,GATIA,OCIFS,EAA8C,EAAGC,eAC5D,MAAOC,EAAiBC,GAAsBC,EAAAA,SAAyBH,IAChEI,EAASC,GAAcF,EAAAA,UAAkB,IACzCG,EAAOC,GAAYJ,EAAAA,SAAwB,OAC3CK,EAAeC,GAAoBN,EAAAA,SAA8B,OACjEO,EAAkBC,GAAuBR,EAAAA,UAAkB,IAC3DS,EAAYC,GAAiBV,EAAAA,SAAiB,IAGrDW,EAAAA,WAAU,KA+BJd,EAASe,OAAS,GA9BCC,WACrBX,GAAW,GACP,IACI,MAAAY,QAAgBC,QAAQC,IAC5BnB,EAASX,KAAI2B,MAAOI,IAClB,MAAMC,QAAsBC,MAC1B,0CAA0CF,EAAQG,yDAE9CC,QAAkBH,EAAcI,OAE/B,MAAA,IACFL,EACHM,aAAcF,EAAUG,EACxBC,OAAQJ,EAAUK,EAClBC,cAAeN,EAAUO,GACzBC,UAAWR,EAAUS,EACrBC,SAAUV,EAAUW,EACpBC,UAAWZ,EAAUa,EACrBC,cAAed,EAAUe,GAC3B,KAGJrC,EAAmBe,SACZuB,GACPjC,EAAS,sDAAqD,CAC9D,QACAF,GAAW,EAAK,GAKHoC,EAAA,GAEhB,CAACzC,IAEE,MAgCA0C,EAAmBzC,EAAgB0C,QACtCvB,GACCA,EAAQG,OAAOqB,cAAcC,SAASjC,EAAWgC,gBAChDxB,EAAQ0B,MAAQ1B,EAAQ0B,KAAKF,cAAcC,SAASjC,EAAWgC,iBAGpE,OAAIxC,QAEC,OAAIjB,UAAU,wCACbC,eAAC2D,EAAQ,CAAA5D,UAAU,yCAKrBmB,EACMd,EAAAA,IAAA,MAAA,CAAIL,UAAU,gCAAiCC,SAAMkB,IAG1DL,GAA8C,IAA3BA,EAAgBc,SAKtCiC,KAAC,MAAI,CAAA7D,UAAU,mCAEbC,SAAA,GAAC4D,KAAA,MAAA,CAAI7D,UAAU,gBACbC,SAAA,CAAAI,EAAAA,IAACyD,EAAO,CAAA9D,UAAU,mEAAmE+D,KAAM,KAC3F3D,EAAAC,IAAC,QAAA,CACC2D,KAAK,OACLC,YAAY,qBACZC,MAAOzC,EACP0C,SAAWC,GAAM1C,EAAc0C,EAAEC,OAAOH,OACxClE,UAAU,uJAId6D,KAAC,QAAM,CAAA7D,UAAU,iCACfC,SAAA,CAAAI,MAAC,QACC,CAAAJ,SAAA4D,EAAAA,KAAC,KAAG,CAAA7D,UAAU,2BACZC,SAAA,CAACI,EAAAA,IAAA,KAAA,CAAGL,UAAU,iFAAiFC,SAAM,WACpGI,EAAAA,IAAA,KAAA,CAAGL,UAAU,iFAAiFC,SAAI,SAClGI,EAAAA,IAAA,KAAA,CAAGL,UAAU,iFAAiFC,SAAQ,aACtGI,EAAAA,IAAA,KAAA,CAAGL,UAAU,iFAAiFC,SAAa,kBAC3GI,EAAAA,IAAA,KAAA,CAAGL,UAAU,iFAAiFC,SAAM,WACpGI,EAAAA,IAAA,KAAA,CAAGL,UAAU,iFAAiFC,SAAQ,aACtGI,EAAAA,IAAA,KAAA,CAAGL,UAAU,iFAAiFC,SAAU,eACxGI,EAAAA,IAAA,KAAA,CAAGL,UAAU,iFAAiFC,SAAS,cACvGI,EAAAA,IAAA,KAAA,CAAGL,UAAU,iFAAiFC,SAAU,eACxGI,EAAAA,IAAA,KAAA,CAAGL,UAAU,iFAAiFC,SAAc,wBAGhHI,EAAAA,IAAA,QAAA,CACEJ,SAAiBsD,EAAArD,KAAK+B,GACrB7B,EAAAyD,KAAC,KAAA,CAEC7D,UAAU,2DACVQ,QAAS,IAAMc,EAAiBW,GAEhChC,SAAA,CAAAI,EAAAA,IAAC,KAAG,CAAAL,UAAU,wBAAyBC,SAAAgC,EAAQG,eAC9C,KAAG,CAAApC,UAAU,0BAA2BC,SAAAgC,EAAQ0B,MAAQ,QACxDtD,EAAAA,IAAA,KAAA,CAAGL,UAAU,YAAaC,WAAQqE,iBAClC,KAAG,CAAAtE,UAAU,YACXC,cAAyB,IAAjBgC,EAAAM,aACNlC,EAAAA,IAAAuD,EAAA,CAAQ5D,UAAU,yBAEnB,IAAIiC,EAAQM,aAAagC,QAAQ,OAGrClE,EAAAA,IAAC,KAAG,CAAAL,UAAW,eAAciC,EAAQQ,QAAU,IAAM,EAAI,iBAAmB,gBACzExC,cAAmB,IAAnBgC,EAAQQ,OACPpC,EAAAA,IAACuD,EAAQ,CAAA5D,UAAU,yBAEnB,IAAIiC,EAAQQ,OAAO8B,QAAQ,OAG/BlE,EAAAA,IAAC,KAAG,CAAAL,UAAW,eAAciC,EAAQU,eAAiB,IAAM,EAAI,iBAAmB,gBAChF1C,cAA0B,IAA1BgC,EAAQU,cACPtC,EAAAA,IAACuD,EAAQ,CAAA5D,UAAU,yBAEnB,GAAGiC,EAAQU,cAAc4B,QAAQ,cAGpC,KAAG,CAAAvE,UAAU,YACXC,cAAsB,IAAdgC,EAAAY,UACNxC,EAAAA,IAAAuD,EAAA,CAAQ5D,UAAU,yBAEnB,IAAIiC,EAAQY,UAAU0B,QAAQ,aAGjC,KAAG,CAAAvE,UAAU,YACXC,cAAqB,IAAbgC,EAAAc,SACN1C,EAAAA,IAAAuD,EAAA,CAAQ5D,UAAU,yBAEnB,IAAIiC,EAAQc,SAASwB,QAAQ,aAGhC,KAAG,CAAAvE,UAAU,YACXC,cAAsB,IAAdgC,EAAAgB,UACN5C,EAAAA,IAAAuD,EAAA,CAAQ5D,UAAU,yBAEnB,IAAIiC,EAAQgB,UAAUsB,QAAQ,aAGjC,KAAG,CAAAvE,UAAU,YACXC,cAA0B,IAAlBgC,EAAAkB,oBACNS,EAAA,CAAQ5D,UAAU,yBAEnB,IAAIiC,EAAQkB,cAAcoB,QAAQ,SArDjCtC,EAAQG,eA6DpBf,GACCjB,EAAAC,IAACmE,EAAA,CACCC,MAAO,CACLrC,OAAQf,EAAce,OACtBuB,KAAMtC,EAAcsC,MAAQtC,EAAce,OAC1CsC,MAAOrD,EAAckB,cAAgB,GAEvCoC,QAAS,IAAMrD,EAAiB,MAChCsD,MA3JU/C,MAAOgD,IAMnB,IACI,MAAAC,QAAiB3C,MAAM,uEAAwE,CACnG4C,OAAQ,OACRC,QAAS,CACP,eAAgB,oBAElBC,KAAMC,KAAKC,UAAUN,KAGnB,IAACC,EAASM,GAAI,CACV,MAAAC,QAAkBP,EAASxC,OACjC,MAAM,IAAIgD,MAAMD,EAAUE,SAAW,gCAA+B,CAGtE/D,GAAoB,GACpBgE,YAAW,KACThE,GAAoB,EAAK,GACxB,KACHiE,QAAQC,IAAI,6CACLvE,GACPC,EAAS,yCACDqE,QAAAtE,MAAM,sBAAuBA,EAAK,GAiItCwE,UAAW,KACTnE,GAAoB,GACpBgE,YAAW,KACThE,GAAoB,EAAK,GACxB,IAAI,MAMbnB,IAACuF,GACE3F,SACCsB,GAAAnB,EAAAC,IAACC,EAAOuF,IAAP,CACCC,QAAS,CAAEC,QAAS,EAAGC,EAAG,IAC1BC,QAAS,CAAEF,QAAS,EAAGC,EAAG,GAC1BE,KAAM,CAAEH,QAAS,EAAGC,GAAO,IAC3BhG,UAAU,8BAEVC,SAAAG,EAAAyD,KAAC,MAAI,CAAA7D,UAAU,iFACbC,SAAA,CAAAI,EAAAA,IAAC,OAAIL,UAAU,+BACbC,eAACkG,EAAM,CAAAnG,UAAU,gBAEnBK,IAAC,QAAKJ,SAAmC,kDA/H3CI,EAAAA,IAAA,MAAA,CAAIL,UAAU,iCAAiCC,SAAsB,0BAoI7E,EClPEJ,EAAW,CAAC,MAAO,aAAc,UAAW,aAAc,SAAU,YAGpEuG,EAAwB,KACQpF,EAAAA,SAAS,IAC7C,MAAOlB,EAAiBuG,GAAsBrF,EAAAA,SAAS,QAChDK,EAAeC,GAAoBN,EAAAA,SAAmC,OACtEsF,EAAYC,GAAiBvF,EAAAA,SAA8B,CAAA,IAC3DC,EAASC,GAAcF,EAAAA,UAAkB,GAGhDW,EAAAA,WAAU,KACmBE,WACzBX,GAAW,GACP,IACF,MAAMsF,EAAqC,CAAC,EAC5C,IAAA,MAAW/B,KAASgC,EAAS,CAC3B,MAAM3B,QAAiB3C,MACrB,iDAAiDsC,EAAMrC,oEAEnDsE,QAAa5B,EAASxC,OACdkE,EAAA/B,EAAMrC,QAAUsE,CAAA,CAEhCH,EAAcC,SACPrF,GACCsE,QAAAtE,MAAM,8BAA+BA,EAAK,CAClD,QACAD,GAAW,EAAK,GAIDyF,EAAA,GAClB,IAGH,MAAMC,EAAqBvF,EAAgBiF,EAAWjF,EAAce,QAAU,KAG5E,SAAAyB,KAAC,MAAI,CAAA7D,UAAU,mEACbC,SAAA,CAAAG,EAAAC,IAACwG,EAAO,MAERhD,KAAC,MAAI,CAAA7D,UAAU,sBAEbC,SAAA,GAAC4D,KAAA,MAAA,CAAI7D,UAAU,iEACbC,SAAA,CAACI,EAAAA,IAAA,KAAA,CAAGL,UAAU,wCAAwCC,SAAgB,qBACrEgB,EACEZ,EAAAA,IAAA,MAAA,CAAIL,UAAU,wCACbC,eAAC,OAAK,CAAAD,UAAU,gBAAgBC,SAAA,4BAEhC2G,SACD,MAAA,CAAI5G,UAAU,YACbC,SAAA,GAAC4D,KAAA,MAAA,CAAI7D,UAAU,4BACbC,SAAA,CAACI,EAAAA,IAAA,KAAA,CAAGL,UAAU,wCAAwCC,SAAW,kBACjE4D,KAAC,MAAI,CAAA7D,UAAU,YACbC,SAAA,GAAC4D,KAAA,IAAA,CAAE7D,UAAU,wBAAwBC,SAAA,CAAA,uBAAe,OAAK,CAAAD,UAAU,aAAcC,SAAmB2G,EAAAE,OAAO,qBAC3GjD,KAAC,IAAE,CAAA7D,UAAU,wBAAwBC,SAAA,CAAA,sBAAc,OAAK,CAAAD,UAAU,aAAcC,SAAmB2G,EAAAE,OAAO,oBAC1GjD,KAAC,IAAE,CAAA7D,UAAU,wBAAwBC,SAAA,CAAA,eAAO,OAAK,CAAAD,UAAU,aAAcC,SAAA2G,EAAmBE,OAAOC,YACnGlD,KAAC,IAAE,CAAA7D,UAAU,wBAAwBC,SAAA,CAAA,mBAAW,OAAK,CAAAD,UAAU,aAAcC,SAAA2G,EAAmBE,OAAOE,gBACvGnD,KAAC,IAAE,CAAA7D,UAAU,wBAAwBC,SAAA,CAAA,qBAAa,OAAK,CAAAD,UAAU,aAAcC,SAAA2G,EAAmBE,OAAOG,6BAI7GpD,KAAC,MAAI,CAAA7D,UAAU,4BACbC,SAAA,CAACI,EAAAA,IAAA,KAAA,CAAGL,UAAU,wCAAwCC,SAAa,oBACnE4D,KAAC,MAAI,CAAA7D,UAAU,YACZC,SAAA,CAAmB2G,EAAAM,OAAOC,OAAOC,aAAalH,KAAI,CAACmH,EAAYC,IAC9DzD,EAAAA,KAAC,IAAc,CAAA7D,UAAU,wBAAwBC,SAAA,CAAA,kBAC/BoH,EAAME,OAAO,MAAIlH,EAAAA,IAAA,OAAA,CAAKL,UAAU,aAAcC,WAAMuH,MAD9DF,KAITV,EAAmBM,OAAOC,OAAOM,cAAcvH,KAAI,CAACmH,EAAYC,IAC/DzD,EAAAA,KAAC,IAAc,CAAA7D,UAAU,wBAAwBC,SAAA,CAAA,oBAC7BoH,EAAME,OAAO,MAAIlH,EAAAA,IAAA,OAAA,CAAKL,UAAU,aAAcC,WAAMuH,MADhEF,cAQfjH,EAAAA,IAAA,MAAA,CAAIL,UAAU,wCACbC,eAAC,OAAK,CAAAD,UAAU,gBAAgBC,SAAA,kDAMrC,MAAI,CAAAD,UAAU,yBACbC,SAAC4D,EAAAA,KAAA,MAAA,CAAI7D,UAAU,8BAEbC,SAAA,CAAAI,EAAAA,IAAC,OAAIL,UAAU,2BACbC,SAAC4D,EAAAA,KAAA,MAAA,CAAI7D,UAAU,oCACbC,SAAA,CAACI,EAAAA,IAAA,KAAA,CAAGL,UAAU,oCAAoCC,SAAe,sBACjE4D,KAAC,MAAI,CAAA7D,UAAU,0BACbC,SAAA,CAAAI,EAAAA,IAACqH,EAAM,CAAA3D,KAAM,GAAI/D,UAAU,oBAC3B6D,KAAC,OAAK,CAAA7D,UAAU,wBAAwBC,SAAA,CAAA,WAC9B,IAAI0H,MAAOC,gCAO3BxH,EAAAC,IAACT,EAAA,CACCC,WACAC,kBACAC,gBAAiBsG,MAInBhG,IAACuF,EAAgB,CAAAiC,KAAK,OACpB5H,SAAAG,EAAAC,IAACC,EAAOuF,IAAP,CACCC,QAAS,CAAEC,QAAS,EAAGC,EAAG,IAC1BC,QAAS,CAAEF,QAAS,EAAGC,EAAG,GAC1BE,KAAM,CAAEH,QAAS,EAAGC,GAAO,IAE1B/F,SACCG,EAAAC,IAACO,EAAA,CACCC,SAAU4F,EACVqB,cAAexG,kBAQ/B"}