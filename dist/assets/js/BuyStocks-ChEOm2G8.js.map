{"version":3,"file":"BuyStocks-ChEOm2G8.js","sources":["../../../src/components/pages/BuyStocks/StockChart.tsx","../../../src/components/pages/BuyStocks/StockDetail.tsx","../../../src/components/pages/BuyStocks/BuyStocks.tsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { motion } from 'framer-motion';\r\nimport {\r\n  AreaChart, Area, XAxis, YAxis, Tooltip, ResponsiveContainer,\r\n  CartesianGrid\r\n} from 'recharts';\r\n\r\ninterface StockChartProps {\r\n  symbol: string;\r\n  onTimeframeChange?: (timeframe: string) => void;\r\n}\r\n\r\nconst generateRandomPrice = (basePrice: number, volatility: number = 0.005) => {\r\n  const change = basePrice * volatility * (Math.random() - 0.5);\r\n  return basePrice + change;\r\n};\r\n\r\nconst generateStockData = (timeframe: string, basePrice: number = 100) => {\r\n  const dataPoints: { date: string; price: number }[] = [];\r\n  const periods = {\r\n    '1D': 24,\r\n    '1W': 7 * 24,\r\n    '1M': 30,\r\n    '3M': 90,\r\n    '1Y': 252,\r\n    '5Y': 1260\r\n  }[timeframe] || 24;\r\n\r\n  let currentPrice = basePrice;\r\n  const now = new Date();\r\n\r\n  for (let i = 0; i < periods; i++) {\r\n    const date = new Date(now);\r\n    \r\n    if (timeframe === '1D') {\r\n      date.setHours(date.getHours() - i);\r\n    } else if (timeframe === '1W') {\r\n      date.setHours(date.getHours() - i);\r\n    } else {\r\n      date.setDate(date.getDate() - i);\r\n    }\r\n\r\n    currentPrice = generateRandomPrice(currentPrice);\r\n\r\n    dataPoints.unshift({\r\n      date: date.toISOString(),\r\n      price: Number(currentPrice.toFixed(2))\r\n    });\r\n  }\r\n\r\n  return dataPoints;\r\n};\r\n\r\nexport const StockChart: React.FC<StockChartProps> = ({ \r\n  symbol, \r\n  onTimeframeChange \r\n}) => {\r\n  const [timeframe, setTimeframe] = useState('1D');\r\n\r\n  // Generate data based on symbol\r\n  const basePrice = {\r\n    'AAPL': 150,\r\n    'MSFT': 380,\r\n    'GOOGL': 140,\r\n    'TSLA': 250,\r\n    'NVDA': 800\r\n  }[symbol] || 100;\r\n\r\n  const stockData = generateStockData(timeframe, basePrice);\r\n\r\n  const handleTimeframeChange = (tf: string) => {\r\n    setTimeframe(tf);\r\n    onTimeframeChange?.(tf);\r\n  };\r\n\r\n  const priceChange = stockData[stockData.length - 1].price - stockData[0].price;\r\n  const priceChangePercent = ((priceChange / stockData[0].price) * 100).toFixed(2);\r\n\r\n  const timeframes = ['1D', '1W', '1M', '3M', '1Y', '5Y'];\r\n\r\n  return (\r\n    <motion.div\r\n      key={symbol}\r\n      initial={{ opacity: 0, y: 0 }}\r\n      animate={{ opacity: 1, y: 0 }}\r\n      className=\"relative h-[400px] bg-black/40 backdrop-blur-xl rounded-2xl p-6\"\r\n    >\r\n      {/* Header with price change */}\r\n      <div className=\"flex items-center justify-between mb-6\">\r\n        <div>\r\n          <h3 className=\"text-xl font-medium text-white\">{symbol}</h3>\r\n          <div className={`text-sm ${priceChange >= 0 ? 'text-green-400' : 'text-red-400'}`}>\r\n            {priceChange >= 0 ? '+' : ''}{priceChangePercent}%\r\n          </div>\r\n        </div>\r\n        \r\n        {/* Timeframe selector */}\r\n        <div className=\"flex gap-2\">\r\n          {timeframes.map((tf) => (\r\n            <button\r\n              key={tf}\r\n              onClick={() => handleTimeframeChange(tf)}\r\n              className={`px-3 py-1 rounded-full text-sm transition-all ${\r\n                timeframe === tf \r\n                  ? 'bg-white/10 text-white' \r\n                  : 'text-white/60 hover:text-white'\r\n              }`}\r\n            >\r\n              {tf}\r\n            </button>\r\n          ))}\r\n        </div>\r\n      </div>\r\n\r\n      {/* Chart */}\r\n      <ResponsiveContainer width=\"100%\" height=\"100%\" style={{position: 'sticky', top: 0}}>\r\n        <AreaChart data={stockData}>\r\n          <defs>\r\n            <linearGradient id=\"colorPrice\" x1=\"0\" y1=\"0\" x2=\"0\" y2=\"1\">\r\n              <stop offset=\"5%\" stopColor=\"#60A5FA\" stopOpacity={0.3}/>\r\n              <stop offset=\"95%\" stopColor=\"#60A5FA\" stopOpacity={0}/>\r\n            </linearGradient>\r\n          </defs>\r\n          \r\n          <CartesianGrid\r\n            strokeDasharray=\"3 3\"\r\n            stroke=\"rgba(255,255,255,0.1)\"\r\n            vertical={false}\r\n          />\r\n          \r\n          <XAxis\r\n            dataKey=\"date\"\r\n            tickFormatter={(date) => {\r\n              const d = new Date(date);\r\n              if (timeframe === '1D') {\r\n                return d.toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' });\r\n              } else {\r\n                return d.toLocaleDateString([], { day: 'numeric', month: 'short' });\r\n              }\r\n            }}\r\n            stroke=\"rgba(255,255,255,0.5)\"\r\n            tick={{ fill: 'rgba(255,255,255,0.5)', fontSize: 12 }}\r\n          />\r\n          \r\n          <YAxis\r\n            domain={['auto', 'auto']}\r\n            stroke=\"rgba(255,255,255,0.5)\"\r\n            tick={{ fill: 'rgba(255,255,255,0.5)', fontSize: 12 }}\r\n            tickFormatter={(value) => `$${value}`}\r\n          />\r\n          \r\n          <Tooltip\r\n          \r\n            contentStyle={{\r\n              \r\n              backgroundColor: 'rgba(0,0,0,0.9)',\r\n              border: 'none',\r\n              backdropFilter: 'blur(10px)',\r\n              padding: '12px',\r\n              borderRadius: '8px'\r\n            }}\r\n            labelFormatter={(date) => new Date(date).toLocaleString()}\r\n          />\r\n          \r\n          <Area\r\n          className='fixed'\r\n            type=\"monotone\"\r\n            dataKey=\"price\"\r\n            stroke=\"#60A5FA\"\r\n            fill=\"url(#colorPrice)\"\r\n            strokeWidth={2}\r\n          />\r\n        </AreaChart>\r\n      </ResponsiveContainer>\r\n    </motion.div>\r\n  );\r\n};\r\n\r\nexport default StockChart;","import React, { useState, useEffect } from 'react';\r\nimport { Stock } from './stockApi';\r\nimport { ArrowUp, ArrowDown, Clock, TrendingUp, BarChart2, Activity, Globe } from 'lucide-react';\r\nimport { motion, AnimatePresence } from 'framer-motion';\r\nimport { StockChart } from './StockChart';\r\n\r\nconst API_KEY = \"ctre6q9r01qhb16mmh70ctre6q9r01qhb16mmh7g\"; // Replace with your API key\r\n\r\ninterface StockDetailProps {\r\n  stock: Stock | null;\r\n  onBuyClick: (stock: Stock) => void;\r\n  loading?: boolean;\r\n}\r\n\r\nexport const StockDetail: React.FC<StockDetailProps> = ({ stock, onBuyClick, loading }) => {\r\n  const [timeFrame, setTimeFrame] = useState<string>('1D');\r\n  const [currentTime, setCurrentTime] = useState(new Date());\r\n  const [recommendationTrends, setRecommendationTrends] = useState<any[]>([]);\r\n  const [trendsLoading, setTrendsLoading] = useState<boolean>(false);\r\n\r\n  // Fetch recommendation trends when stock changes\r\n  useEffect(() => {\r\n    const fetchRecommendationTrends = async () => {\r\n      if (stock?.symbol) {\r\n        setTrendsLoading(true);\r\n        try {\r\n          const response = await fetch(\r\n            `https://finnhub.io/api/v1/stock/recommendation?symbol=${stock.symbol}&token=${API_KEY}`\r\n          );\r\n          const data = await response.json();\r\n          setRecommendationTrends(data);\r\n        } catch (error) {\r\n          console.error('Failed to fetch recommendation trends:', error);\r\n        } finally {\r\n          setTrendsLoading(false);\r\n        }\r\n      }\r\n    };\r\n\r\n    fetchRecommendationTrends();\r\n  }, [stock?.symbol]);\r\n\r\n  // Update current time every second\r\n  useEffect(() => {\r\n    const timer = setInterval(() => {\r\n      setCurrentTime(new Date());\r\n    }, 1000);\r\n    return () => clearInterval(timer);\r\n  }, []);\r\n\r\n  if (loading || !stock) return null;\r\n\r\n  const timeFrames = ['1D', '1W', '1M', '3M', '1Y', 'ALL'];\r\n\r\n  // Color scheme for recommendation trends\r\n  const trendColors = {\r\n    strongBuy: '#16a34a', // Bright green\r\n    buy: '#4ade80',      // Light green\r\n    hold: '#facc15',     // Yellow\r\n    sell: '#f87171',     // Light red\r\n    strongSell: '#dc2626', // Bright red\r\n  };\r\n\r\n  return (\r\n    <AnimatePresence mode=\"wait\">\r\n      <motion.div\r\n        initial={{ opacity: 0, y: 20 }}\r\n        animate={{ opacity: 1, y: 0 }}\r\n        exit={{ opacity: 0, y: -20 }}\r\n        className=\"flex flex-col h-full bg-black/40 backdrop-blur-xl p-4 lg:p-6\"\r\n      >\r\n        {/* Compact Header */}\r\n        <div className=\"flex items-center justify-between mb-2\">\r\n          <div>\r\n            <h1 className=\"text-2xl font-semibold text-white\">{stock.name}</h1>\r\n            <div className=\"flex items-center gap-2 text-sm\">\r\n              <span className=\"text-white/60\">{stock.symbol}</span>\r\n              <span className=\"text-white/60\">â€¢</span>\r\n              <span className=\"text-white/60\">{currentTime.toLocaleTimeString()}</span>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        {/* Compact Price Section */}\r\n        <div className=\"flex items-center gap-4 mb-4\">\r\n          <span className=\"text-4xl font-medium\">\r\n            ${stock.price.toFixed(2)}\r\n          </span>\r\n          <motion.span\r\n            animate={{\r\n              color: stock.change >= 0 ? \"rgb(34, 197, 94)\" : \"rgb(239, 68, 68)\"\r\n            }}\r\n            className=\"flex items-center text-lg\"\r\n          >\r\n            {(stock.change || 0) >= 0 ? <ArrowUp size={20} /> : <ArrowDown size={20} />}\r\n            {Math.abs(stock.change || 0).toFixed(2)}%\r\n          </motion.span>\r\n        </div>\r\n\r\n        {/* Compact Time Frame Selector */}\r\n        <div className=\"flex gap-1 mb-4 overflow-x-auto scrollbar-hide\">\r\n          {timeFrames.map((tf) => (\r\n            <button\r\n              key={tf}\r\n              onClick={() => setTimeFrame(tf)}\r\n              className={`px-3 py-1 rounded-full text-xs font-medium transition-all whitespace-nowrap ${\r\n                timeFrame === tf\r\n                  ? 'bg-white text-black'\r\n                  : 'bg-white/10 text-white/60 hover:bg-white/20'\r\n              }`}\r\n            >\r\n              {tf}\r\n            </button>\r\n          ))}\r\n        </div>\r\n\r\n        {/* Chart Container */}\r\n        <div className=\"flex-1 bg-black/20 rounded-xl p-4 backdrop-blur-sm mb-4\">\r\n          <div className=\"h-full\">\r\n            <StockChart stock={stock} timeFrame={timeFrame} />\r\n          </div>\r\n        </div>\r\n\r\n        {/* Compact Stats Grid */}\r\n        <div className=\"grid grid-cols-3 gap-3 mb-6\">\r\n          {[\r\n            { icon: <Activity size={16} />, label: 'Volume', value: (stock.change || 0).toLocaleString() },\r\n            { icon: <TrendingUp size={16} />, label: 'High', value: `â‚¹${(stock.high || 0).toFixed(2)}` },\r\n            { icon: <BarChart2 size={16} />, label: 'Low', value: `â‚¹${(stock.low || 0).toFixed(2)}` }\r\n          ].map((stat, index) => (\r\n            <div key={index} className=\"bg-white/5 backdrop-blur-sm rounded-xl p-3\">\r\n              <div className=\"flex items-center gap-1 text-white/60 mb-1 text-xs\">\r\n                {stat.icon}\r\n                <span className=\"font-medium\">{stat.label}</span>\r\n              </div>\r\n              <p className=\"text-lg font-medium truncate\">{stat.value}</p>\r\n            </div>\r\n          ))}\r\n        </div>\r\n\r\n        {/* Recommendation Trends Section */}\r\n        <div className=\"bg-black/20 rounded-xl p-4 backdrop-blur-sm\">\r\n          <h3 className=\"text-lg font-semibold text-white mb-4\">Recommendation Trends</h3>\r\n          {trendsLoading ? (\r\n            <div className=\"flex justify-center items-center py-4\">\r\n              <span className=\"text-white/60\">Loading trends...</span>\r\n            </div>\r\n          ) : recommendationTrends.length > 0 ? (\r\n            <div className=\"space-y-4\">\r\n              {recommendationTrends.map((trend, index) => (\r\n                <div key={index} className=\"bg-white/5 rounded-xl p-3\">\r\n                  <p className=\"text-sm text-white/60 mb-2\">Period: {trend.period}</p>\r\n                  <div className=\"grid grid-cols-5 gap-2\">\r\n                    <div className=\"text-center\">\r\n                      <p className=\"text-xs text-white/60\">Strong Buy</p>\r\n                      <p className=\"text-lg font-medium\" style={{ color: trendColors.strongBuy }}>\r\n                        {trend.strongBuy}\r\n                      </p>\r\n                    </div>\r\n                    <div className=\"text-center\">\r\n                      <p className=\"text-xs text-white/60\">Buy</p>\r\n                      <p className=\"text-lg font-medium\" style={{ color: trendColors.buy }}>\r\n                        {trend.buy}\r\n                      </p>\r\n                    </div>\r\n                    <div className=\"text-center\">\r\n                      <p className=\"text-xs text-white/60\">Hold</p>\r\n                      <p className=\"text-lg font-medium\" style={{ color: trendColors.hold }}>\r\n                        {trend.hold}\r\n                      </p>\r\n                    </div>\r\n                    <div className=\"text-center\">\r\n                      <p className=\"text-xs text-white/60\">Sell</p>\r\n                      <p className=\"text-lg font-medium\" style={{ color: trendColors.sell }}>\r\n                        {trend.sell}\r\n                      </p>\r\n                    </div>\r\n                    <div className=\"text-center\">\r\n                      <p className=\"text-xs text-white/60\">Strong Sell</p>\r\n                      <p className=\"text-lg font-medium\" style={{ color: trendColors.strongSell }}>\r\n                        {trend.strongSell}\r\n                      </p>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              ))}\r\n            </div>\r\n          ) : (\r\n            <div className=\"flex justify-center items-center py-4\">\r\n              <span className=\"text-white/60\">No recommendation trends available.</span>\r\n            </div>\r\n          )}\r\n        </div>\r\n      </motion.div>\r\n    </AnimatePresence>\r\n  );\r\n};","import React, { useState, useEffect } from 'react';\r\nimport { Search, ArrowUp, ArrowDown, Globe, DollarSign, Check } from 'lucide-react';\r\nimport  BuyModal from './BuyModal';\r\nimport { motion, AnimatePresence } from 'framer-motion';\r\nimport Header from '@/components/Header/Header';\r\nimport { StockDetail } from './StockDetail';\r\nimport { symbols } from '../../Stock/StocksPage/symbols';\r\nimport LoadingSpinner from '../../ui/LoadingSpinner';\r\n\r\nexport const BuyStocks: React.FC = () => {\r\n  const [stocks, setStocks] = useState(symbols);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState<string | null>(null);\r\n  const [searchTerm, setSearchTerm] = useState('');\r\n  const [selectedStock, setSelectedStock] = useState<typeof symbols[0] | null>(null);\r\n  const [selectedStockDetail, setSelectedStockDetail] = useState<typeof symbols[0] | null>(null);\r\n  const [priceChanges, setPriceChanges] = useState<Record<string, number>>({});\r\n  const [stockDetailLoading, setStockDetailLoading] = useState(false);\r\n  const [showSuccessPopup, setShowSuccessPopup] = useState(false);\r\n\r\n  const handleTransactionSuccess = () => {\r\n    setShowSuccessPopup(true);\r\n    setTimeout(() => {\r\n      setShowSuccessPopup(false);\r\n    }, 3000);\r\n  };\r\n\r\n  useEffect(() => {\r\n    setLoading(true);\r\n    const timer = setTimeout(() => {\r\n      setStocks(symbols);\r\n      setLoading(false);\r\n    }, 4000);\r\n\r\n    return () => clearTimeout(timer);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const interval = setInterval(() => {\r\n      setStocks((prevStocks) =>\r\n        prevStocks.map((stock) => {\r\n          const change = (Math.random() - 0.5) * 2;\r\n          const newPrice = (stock.price || 100) + change;\r\n\r\n          setPriceChanges((prev) => ({\r\n            ...prev,\r\n            [stock.symbol]: change,\r\n          }));\r\n\r\n          return {\r\n            ...stock,\r\n            price: newPrice,\r\n            change,\r\n            changePercent: (change / (stock.price || 100)) * 100,\r\n          };\r\n        })\r\n      );\r\n    }, 5000);\r\n\r\n    return () => clearInterval(interval);\r\n  }, []);\r\n\r\n  const handleStockSelect = async (stock: typeof symbols[0]) => {\r\n    setStockDetailLoading(true);\r\n    setSelectedStockDetail(stock);\r\n\r\n    try {\r\n      const detailedStock = { ...stock };\r\n      setSelectedStockDetail(detailedStock);\r\n    } catch (error) {\r\n      console.error('Failed to load stock details:', error);\r\n      setError('Failed to load stock details');\r\n    } finally {\r\n      setStockDetailLoading(false);\r\n    }\r\n  };\r\n\r\n  const filteredStocks = stocks.filter(\r\n    (stock) =>\r\n      stock.symbol.toLowerCase().includes(searchTerm.toLowerCase()) ||\r\n      stock.name.toLowerCase().includes(searchTerm.toLowerCase())\r\n  );\r\n\r\n  return (\r\n    <div className=\"min-h-screen bg-gradient-to-br from-zinc-900 to-black text-white\">\r\n      <Header />\r\n      <div>\r\n        <div className=\"mt-32 absolute flex z-20 px-8 justify-end w-full\">\r\n          {selectedStockDetail && (\r\n            <button\r\n              onClick={() => setSelectedStock(selectedStockDetail)}\r\n              className=\"px-8 py-3 bg-white text-black font-medium rounded-full hover:bg-white/90 transition-all flex items-center gap-2\"\r\n            >\r\n              <DollarSign size={20} />\r\n              Buy {selectedStockDetail.symbol}\r\n            </button>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"flex h-screen pt-20\">\r\n        <div className=\"w-98 bg-black/30 border-r border-white/10 overflow-hidden\">\r\n          <div className=\"p-6\">\r\n            <div className=\"relative mb-6\">\r\n              <Search className=\"absolute left-4 top-1/2 transform -translate-y-1/2 text-white/40\" size={20} />\r\n              <input\r\n                type=\"text\"\r\n                placeholder=\"Search stocks...\"\r\n                value={searchTerm}\r\n                onChange={(e) => setSearchTerm(e.target.value)}\r\n                className=\"w-full bg-white/5 border border-white/10 rounded-2xl pl-12 pr-4 py-3 text-base focus:outline-none focus:ring-2 focus:ring-white/20\"\r\n              />\r\n            </div>\r\n\r\n            <div className=\"space-y-4 overflow-y-auto w-[400px] h-[calc(100vh-200px)]\">\r\n              {loading ? (\r\n                <LoadingSpinner />\r\n              ) : (\r\n                filteredStocks.map((stock) => (\r\n                  <motion.div\r\n                    key={stock.symbol}\r\n                    layout\r\n                    className={`p-4 rounded-xl cursor-pointer transition-all ${\r\n                      selectedStockDetail?.symbol === stock.symbol\r\n                        ? 'bg-white/10'\r\n                        : 'bg-black/20 hover:bg-white/5'\r\n                    }`}\r\n                    onClick={() => handleStockSelect(stock)}\r\n                  >\r\n                    <div className=\"flex justify-between items-start\">\r\n                      <div>\r\n                        <h3 className=\"font-medium\">{stock.symbol}</h3>\r\n                        <p className=\"text-sm text-white/60\">{stock.name}</p>\r\n                      </div>\r\n                      <motion.div\r\n                        animate={{\r\n                          color: (stock.changePercent || 0) >= 0\r\n                            ? '#16a34a' // Green for positive change\r\n                            : '#dc2626', // Red for negative change\r\n                        }}\r\n                        className=\"text-right\"\r\n                      >\r\n                        <p className=\"font-medium\">â‚¹{(stock.price || 0).toFixed(2)}</p>\r\n                        <p className=\"text-sm flex items-center gap-1\">\r\n                          {(stock.changePercent !== undefined) && (\r\n                            <>\r\n                              {(stock.changePercent >= 0) ? <ArrowUp size={12} /> : <ArrowDown size={12} />}\r\n                              {Math.abs(stock.changePercent).toFixed(2)}%\r\n                            </>\r\n                          )}\r\n                        </p>\r\n                      </motion.div>\r\n                    </div>\r\n                  </motion.div>\r\n                ))\r\n              )}\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"flex-1 overflow-y-auto\">\r\n          {stockDetailLoading ? (\r\n            <LoadingSpinner />\r\n          ) : selectedStockDetail ? (\r\n            <StockDetail\r\n              stock={selectedStockDetail}\r\n              onBuyClick={setSelectedStock}\r\n              loading={loading}\r\n            />\r\n          ) : (\r\n            <div className=\"h-full flex items-center justify-center text-white/60\">\r\n              <div className=\"text-center\">\r\n                <Globe size={48} className=\"mx-auto mb-4 opacity-60\" />\r\n                <p className=\"text-xl\">Select a stock to view details</p>\r\n              </div>\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      <AnimatePresence>\r\n        {showSuccessPopup && (\r\n          <motion.div\r\n            initial={{ opacity: 0, y: 50 }}\r\n            animate={{ opacity: 1, y: 0 }}\r\n            exit={{ opacity: 0, y: -50 }}\r\n            className=\"fixed bottom-8 right-8 z-50\"\r\n          >\r\n            <div className=\"bg-green-500 text-white px-6 py-4 rounded-xl shadow-xl flex items-center gap-3\">\r\n              <div className=\"bg-white/20 rounded-full p-1\">\r\n                <Check className=\"w-4 h-4\" />\r\n              </div>\r\n              <span>Transaction completed successfully!</span>\r\n            </div>\r\n          </motion.div>\r\n        )}\r\n      </AnimatePresence>\r\n\r\n      {selectedStock && (\r\n        <BuyModal\r\n          stock={selectedStock}\r\n          onClose={() => setSelectedStock(null)}\r\n          onSuccess={handleTransactionSuccess}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default BuyStocks;"],"names":["generateRandomPrice","basePrice","volatility","Math","random","StockChart","symbol","onTimeframeChange","timeframe","setTimeframe","useState","stockData","dataPoints","periods","currentPrice","now","Date","i","date","setHours","getHours","setDate","getDate","unshift","toISOString","price","Number","toFixed","generateStockData","AAPL","MSFT","GOOGL","TSLA","NVDA","priceChange","length","priceChangePercent","jsxRuntimeExports","jsxs","motion","div","initial","opacity","y","animate","className","children","jsx","map","tf","onClick","handleTimeframeChange","ResponsiveContainer","width","height","style","position","top","AreaChart","data","id","x1","y1","x2","y2","offset","stopColor","stopOpacity","CartesianGrid","strokeDasharray","stroke","vertical","XAxis","dataKey","tickFormatter","d","toLocaleTimeString","hour","minute","toLocaleDateString","day","month","tick","fill","fontSize","YAxis","domain","value","Tooltip","contentStyle","backgroundColor","border","backdropFilter","padding","borderRadius","labelFormatter","toLocaleString","Area","type","strokeWidth","StockDetail","stock","onBuyClick","loading","timeFrame","setTimeFrame","currentTime","setCurrentTime","recommendationTrends","setRecommendationTrends","trendsLoading","setTrendsLoading","useEffect","async","response","fetch","json","error","console","fetchRecommendationTrends","timer","setInterval","clearInterval","trendColors","AnimatePresence","mode","exit","name","span","color","change","ArrowUp","size","ArrowDown","abs","icon","Activity","label","TrendingUp","high","BarChart2","low","stat","index","trend","period","strongBuy","buy","hold","sell","strongSell","BuyStocks","stocks","setStocks","symbols","setLoading","setError","searchTerm","setSearchTerm","selectedStock","setSelectedStock","selectedStockDetail","setSelectedStockDetail","priceChanges","setPriceChanges","stockDetailLoading","setStockDetailLoading","showSuccessPopup","setShowSuccessPopup","setTimeout","clearTimeout","interval","prevStocks","newPrice","prev","changePercent","filteredStocks","filter","toLowerCase","includes","Header","DollarSign","Search","placeholder","onChange","e","target","LoadingSpinner","layout","detailedStock","handleStockSelect","Fragment","Globe","Check","BuyModal","onClose","onSuccess"],"mappings":"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"}