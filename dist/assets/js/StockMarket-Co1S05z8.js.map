{"version":3,"file":"StockMarket-Co1S05z8.js","sources":["../../../src/components/pages/AllStocks/SegmentSelector.tsx","../../../src/components/pages/AllStocks/finnhubApi.ts","../../../src/components/pages/AllStocks/HoldingsTable.tsx","../../../src/components/pages/AllStocks/StockMarket.tsx"],"sourcesContent":["import React from 'react';\r\nimport { motion } from 'framer-motion';\r\n\r\ninterface SegmentSelectorProps {\r\n  segments: string[];\r\n  selectedSegment: string;\r\n  onSegmentChange: (segment: string) => void;\r\n}\r\n\r\nexport const SegmentSelector: React.FC<SegmentSelectorProps> = ({\r\n  segments,\r\n  selectedSegment,\r\n  onSegmentChange,\r\n}) => {\r\n  return (\r\n    <div className=\"flex items-center gap-2 mb-8 overflow-x-auto scrollbar-hide\">\r\n      {segments.map((segment) => (\r\n        <motion.button\r\n          key={segment}\r\n          onClick={() => onSegmentChange(segment)}\r\n          whileHover={{ scale: 1.05 }}\r\n          whileTap={{ scale: 0.95 }}\r\n          className={`px-4 py-2 rounded-lg text-sm font-medium transition-all \r\n            ${selectedSegment === segment \r\n              ? 'bg-white text-black' \r\n              : 'text-gray-400 hover:text-white'}`}\r\n        >\r\n          {segment}\r\n        </motion.button>\r\n      ))}\r\n    </div>\r\n  );\r\n};","const FINNHUB_API_KEY = \"cu147s1r01qjiern2jmgcu147s1r01qjiern2jn0\";\r\nconst BASE_URL = \"https://finnhub.io/api/v1\";\r\n\r\n// Cache duration in milliseconds (30 minutes)\r\nconst CACHE_DURATION = 30 * 60 * 1000;\r\n\r\nexport interface FinnhubQuote {\r\n  c: number;  // Current price\r\n  d: number;  // Change\r\n  dp: number; // Percent change\r\n  h: number;  // High price of the day\r\n  l: number;  // Low price of the day\r\n  o: number;  // Open price of the day\r\n  pc: number; // Previous close price\r\n  t: number;  // Timestamp\r\n}\r\n\r\nexport interface RecommendationTrend {\r\n  symbol: string;\r\n  buy: number;\r\n  hold: number;\r\n  period: string;\r\n  sell: number;\r\n  strongBuy: number;\r\n  strongSell: number;\r\n}\r\n\r\nexport const finnhubApi = {\r\n  async getQuote(symbol: string): Promise<FinnhubQuote> {\r\n    const cacheKey = `quote_${symbol}`;\r\n    const cachedData = localStorage.getItem(cacheKey);\r\n    const cacheTimestamp = localStorage.getItem(`${cacheKey}_timestamp`);\r\n    const now = Date.now();\r\n\r\n    if (cachedData && cacheTimestamp && now - Number(cacheTimestamp) < CACHE_DURATION) {\r\n      return JSON.parse(cachedData);\r\n    }\r\n\r\n    const response = await fetch(\r\n      `${BASE_URL}/quote?symbol=${symbol}&token=${FINNHUB_API_KEY}`\r\n    );\r\n    if (!response.ok) {\r\n      throw new Error('Failed to fetch quote');\r\n    }\r\n    const data = await response.json();\r\n    localStorage.setItem(cacheKey, JSON.stringify(data));\r\n    localStorage.setItem(`${cacheKey}_timestamp`, now.toString());\r\n    return data;\r\n  },\r\n\r\n  async getRecommendationTrends(symbol: string): Promise<RecommendationTrend[]> {\r\n    const cacheKey = `recommendation_${symbol}`;\r\n    const cachedData = localStorage.getItem(cacheKey);\r\n    const cacheTimestamp = localStorage.getItem(`${cacheKey}_timestamp`);\r\n    const now = Date.now();\r\n\r\n    if (cachedData && cacheTimestamp && now - Number(cacheTimestamp) < CACHE_DURATION) {\r\n      return JSON.parse(cachedData);\r\n    }\r\n\r\n    const response = await fetch(\r\n      `${BASE_URL}/stock/recommendation?symbol=${symbol}&token=${FINNHUB_API_KEY}`\r\n    );\r\n    if (!response.ok) {\r\n      throw new Error('Failed to fetch recommendation trends');\r\n    }\r\n    const data = await response.json();\r\n    localStorage.setItem(cacheKey, JSON.stringify(data));\r\n    localStorage.setItem(`${cacheKey}_timestamp`, now.toString());\r\n    return data;\r\n  },\r\n};","import React, { useEffect, useState, startTransition } from 'react';\r\nimport { Search } from 'lucide-react';\r\nimport LoadingSpinner from '@/components/ui/LoadingSpinner';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { motion } from 'framer-motion';\r\nimport { finnhubApi, FinnhubQuote } from './finnhubApi'; // Import the API utility\r\n\r\ninterface StockHolding {\r\n  symbol: string;\r\n  quantity: number;\r\n  currentPrice?: number;\r\n  change?: number;\r\n  changePercent?: number;\r\n  highPrice?: number;\r\n  lowPrice?: number;\r\n  openPrice?: number;\r\n  previousClose?: number;\r\n  name?: string;\r\n}\r\n\r\ninterface HoldingsTableProps {\r\n  holdings: StockHolding[];\r\n  onStockSelect: (stock: StockHolding) => void;\r\n}\r\n\r\nexport const HoldingsTable: React.FC<HoldingsTableProps> = ({ holdings, onStockSelect }) => {\r\n  const [updatedHoldings, setUpdatedHoldings] = useState<StockHolding[]>(holdings);\r\n  const [loading, setLoading] = useState<boolean>(false);\r\n  const [error, setError] = useState<string | null>(null);\r\n  const [searchTerm, setSearchTerm] = useState<string>('');\r\n  const [currentPage, setCurrentPage] = useState<number>(1);\r\n  const itemsPerPage = 10;\r\n  const navigate = useNavigate();\r\n\r\n  // Cache duration in milliseconds (30 minutes)\r\n  const CACHE_DURATION = 30 * 60 * 1000;\r\n\r\n  // Fetch stock data for all holdings at once\r\n  useEffect(() => {\r\n    const fetchAllStockData = async () => {\r\n      setLoading(true);\r\n      try {\r\n        const updated = await Promise.all(\r\n          holdings.map(async (holding) => {\r\n            // Check if data is already cached and not expired\r\n            const cacheKey = `stockData_${holding.symbol}`;\r\n            const cachedData = localStorage.getItem(cacheKey);\r\n            const cacheTimestamp = localStorage.getItem(`${cacheKey}_timestamp`);\r\n            const now = Date.now();\r\n\r\n            if (cachedData && cacheTimestamp && now - Number(cacheTimestamp) < CACHE_DURATION) {\r\n              return JSON.parse(cachedData); // Use cached data if it's still valid\r\n            }\r\n\r\n            try {\r\n              const quote = await finnhubApi.getQuote(holding.symbol); // Use finnhubApi utility\r\n              const updatedHolding = {\r\n                ...holding,\r\n                currentPrice: quote.c || 0,\r\n                change: quote.d || 0,\r\n                changePercent: quote.dp || 0,\r\n                highPrice: quote.h || 0,\r\n                lowPrice: quote.l || 0,\r\n                openPrice: quote.o || 0,\r\n                previousClose: quote.pc || 0,\r\n              };\r\n\r\n              // Cache the fetched data with a timestamp\r\n              localStorage.setItem(cacheKey, JSON.stringify(updatedHolding));\r\n              localStorage.setItem(`${cacheKey}_timestamp`, now.toString());\r\n\r\n              return updatedHolding;\r\n            } catch (err) {\r\n              console.error(`Failed to fetch data for ${holding.symbol}:`, err);\r\n              return {\r\n                ...holding,\r\n                currentPrice: 0,\r\n                change: 0,\r\n                changePercent: 0,\r\n                highPrice: 0,\r\n                lowPrice: 0,\r\n                openPrice: 0,\r\n                previousClose: 0,\r\n              };\r\n            }\r\n          })\r\n        );\r\n\r\n        startTransition(() => {\r\n          setUpdatedHoldings(updated);\r\n        });\r\n      } catch (err) {\r\n        startTransition(() => {\r\n          setError('Failed to fetch stock data. Please try again later.');\r\n        });\r\n      } finally {\r\n        startTransition(() => {\r\n          setLoading(false);\r\n        });\r\n      }\r\n    };\r\n\r\n    if (holdings.length > 0) {\r\n      fetchAllStockData();\r\n    }\r\n\r\n    // Set up a timer to periodically refresh the data\r\n    const interval = setInterval(fetchAllStockData, CACHE_DURATION);\r\n\r\n    // Clean up the interval when the component unmounts\r\n    return () => clearInterval(interval);\r\n  }, [holdings]);\r\n\r\n  // Filter holdings based on search term\r\n  const filteredHoldings = updatedHoldings.filter(\r\n    (holding) =>\r\n      holding.symbol.toLowerCase().includes(searchTerm.toLowerCase()) ||\r\n      (holding.name && holding.name.toLowerCase().includes(searchTerm.toLowerCase()))\r\n  );\r\n\r\n  // Paginate filtered holdings\r\n  const paginatedHoldings = filteredHoldings.slice(\r\n    (currentPage - 1) * itemsPerPage,\r\n    currentPage * itemsPerPage\r\n  );\r\n\r\n  const handleStockSelect = (stock: StockHolding) => {\r\n    onStockSelect(stock);\r\n    navigate('/stock/buy', { state: { selectedStock: stock } });\r\n  };\r\n\r\n  const handleNextPage = () => {\r\n    setCurrentPage((prevPage) => prevPage + 1);\r\n  };\r\n\r\n  const handlePreviousPage = () => {\r\n    setCurrentPage((prevPage) => Math.max(prevPage - 1, 1));\r\n  };\r\n\r\n  if (loading) {\r\n    return (\r\n      <div className=\"flex items-center justify-center h-64\">\r\n        <LoadingSpinner />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (error) {\r\n    return <div className=\"text-center py-4 text-red-600\">{error}</div>;\r\n  }\r\n\r\n  if (!updatedHoldings || updatedHoldings.length === 0) {\r\n    return <div className=\"text-center py-4 text-gray-600\">No holdings available.</div>;\r\n  }\r\n\r\n  return (\r\n    <div className=\"overflow-x-auto w-full custom-scrollbar\">\r\n      {/* Search Bar */}\r\n      <div className=\"relative mb-6\">\r\n        <Search className=\"absolute left-4 top-1/2 transform -translate-y-1/2 text-gray-400\" size={20} />\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Search holdings...\"\r\n          value={searchTerm}\r\n          onChange={(e) => setSearchTerm(e.target.value)}\r\n          className=\"w-[500px] bg-white rounded-xl pl-12 pr-4 py-3 text-black\"\r\n        />\r\n      </div>\r\n\r\n      {/* Holdings Table */}\r\n      <table className=\"min-w-full bg-white text-black\">\r\n        <thead>\r\n          <tr className=\"border-b border-gray-200\">\r\n            <th className=\"px-5 py-3 text-left text-xs font-medium text-gray-600 uppercase tracking-wider\">Symbol</th>\r\n            <th className=\"px-5 py-3 text-left text-xs font-medium text-gray-600 uppercase tracking-wider\">Name</th>\r\n            <th className=\"px-5 py-3 text-left text-xs font-medium text-gray-600 uppercase tracking-wider\">Quantity</th>\r\n            <th className=\"px-5 py-3 text-left text-xs font-medium text-gray-600 uppercase tracking-wider\">Current Price</th>\r\n            <th className=\"px-5 py-3 text-left text-xs font-medium text-gray-600 uppercase tracking-wider\">Change</th>\r\n            <th className=\"px-5 py-3 text-left text-xs font-medium text-gray-600 uppercase tracking-wider\">Change %</th>\r\n            <th className=\"px-5 py-3 text-left text-xs font-medium text-gray-600 uppercase tracking-wider\">High Price</th>\r\n            <th className=\"px-5 py-3 text-left text-xs font-medium text-gray-600 uppercase tracking-wider\">Low Price</th>\r\n            <th className=\"px-5 py-3 text-left text-xs font-medium text-gray-600 uppercase tracking-wider\">Open Price</th>\r\n            <th className=\"px-5 py-3 text-left text-xs font-medium text-gray-600 uppercase tracking-wider\">Previous Close</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {paginatedHoldings.map((holding) => (\r\n            <motion.tr\r\n              key={holding.symbol}\r\n              className=\"border-b border-gray-200 hover:bg-gray-50 cursor-pointer\"\r\n              onClick={() => handleStockSelect(holding)}\r\n              transition={{ type: 'spring', stiffness: 300 }}\r\n            >\r\n              <td className=\"px-5 py-4 font-medium\">{holding.symbol}</td>\r\n              <td className=\"px-5 py-4 text-gray-700\">{holding.name ?? 'N/A'}</td>\r\n              <td className=\"px-5 py-4\">{holding.quantity}</td>\r\n              <td className=\"px-5 py-4\">₹{holding.currentPrice?.toFixed(2) ?? '0.00'}</td>\r\n              <td className={`px-5 py-4 ${(holding.change ?? 0) >= 0 ? 'text-green-600' : 'text-red-600'}`}>\r\n                ${holding.change?.toFixed(2) ?? '0.00'}\r\n              </td>\r\n              <td className={`px-5 py-4 ${(holding.changePercent ?? 0) >= 0 ? 'text-green-600' : 'text-red-600'}`}>\r\n                {holding.changePercent?.toFixed(2) ?? '0.00'}%\r\n              </td>\r\n              <td className=\"px-5 py-4\">₹{holding.highPrice?.toFixed(2) ?? '0.00'}</td>\r\n              <td className=\"px-5 py-4\">₹{holding.lowPrice?.toFixed(2) ?? '0.00'}</td>\r\n              <td className=\"px-5 py-4\">₹{holding.openPrice?.toFixed(2) ?? '0.00'}</td>\r\n              <td className=\"px-5 py-4\">₹{holding.previousClose?.toFixed(2) ?? '0.00'}</td>\r\n            </motion.tr>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n\r\n      {/* Pagination Controls */}\r\n      <div className=\"flex justify-between items-center mt-6\">\r\n        <button\r\n          onClick={handlePreviousPage}\r\n          disabled={currentPage === 1}\r\n          className=\"flex items-center justify-center px-4 py-2 text-sm font-medium text-white bg-black border border-gray-300 rounded-lg hover:bg-gray-50 disabled:bg-gray-100 disabled:text-gray-400 disabled:cursor-not-allowed transition-colors duration-200\"\r\n        >\r\n          Previous\r\n        </button>\r\n        <span className=\"text-sm text-gray-600\">Page {currentPage}</span>\r\n        <button\r\n          onClick={handleNextPage}\r\n          disabled={currentPage * itemsPerPage >= filteredHoldings.length}\r\n          className=\"flex items-center justify-center px-4 py-2 text-sm font-medium text-black bg-white border border-gray-300 rounded-lg hover:bg-gray-50 disabled:bg-gray-100 disabled:text-gray-400 disabled:cursor-not-allowed transition-colors duration-200\"\r\n        >\r\n          Next\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};","import React, { useState, useEffect, useRef } from 'react';\r\nimport { Clock, LineChart } from 'lucide-react';\r\nimport { SegmentSelector } from './SegmentSelector';\r\nimport { HoldingsTable } from './HoldingsTable';\r\nimport Header from '@/components/Header/Header';\r\nimport { motion, AnimatePresence } from 'framer-motion';\r\nimport { symbols } from './symbols';\r\n\r\nconst segments = ['ALL', 'TECHNOLOGY', 'FINANCE', 'HEALTHCARE', 'ENERGY', 'CONSUMER'];\r\nconst API_KEY = \"ctre6q9r01qhb16mmh70ctre6q9r01qhb16mmh7g\"; // Replace with your API key\r\n\r\nconst StockMarket: React.FC = () => {\r\n  const [selectedSegment, setSelectedSegment] = useState('ALL');\r\n  const [trades, setTrades] = useState<Array<{ symbol: string; price: number; timestamp: number; volume: number }>>([]);\r\n  const [error, setError] = useState<string | null>(null);\r\n  const socketRef = useRef<WebSocket | null>(null);\r\n\r\n  // Function to establish WebSocket connection\r\n  const connectWebSocket = () => {\r\n    const socket = new WebSocket(`wss://ws.finnhub.io?token=${API_KEY}`);\r\n\r\n    socket.addEventListener('open', () => {\r\n      console.log('WebSocket connection opened');\r\n      setError(null);\r\n\r\n      // Subscribe to predefined symbols\r\n      const symbolsToSubscribe = ['AAPL', 'BINANCE:BTCUSDT', 'IC MARKETS:1'];\r\n      symbolsToSubscribe.forEach((symbol) => {\r\n        socket.send(JSON.stringify({ type: 'subscribe', symbol }));\r\n      });\r\n    });\r\n\r\n    socket.addEventListener('message', (event) => {\r\n      const message = JSON.parse(event.data);\r\n\r\n      // Handle trade messages\r\n      if (message.type === 'trade') {\r\n        const newTrades = message.data.map((trade: any) => ({\r\n          symbol: trade.s,\r\n          price: trade.p,\r\n          timestamp: trade.t,\r\n          volume: trade.v,\r\n        }));\r\n\r\n        // Filter out duplicate trades based on timestamp and symbol\r\n        setTrades((prevTrades) => {\r\n          const uniqueTrades = newTrades.filter(\r\n            (newTrade: any) =>\r\n              !prevTrades.some(\r\n                (prevTrade) =>\r\n                  prevTrade.symbol === newTrade.symbol && prevTrade.timestamp === newTrade.timestamp\r\n              )\r\n          );\r\n\r\n          // Combine new unique trades with previous trades and limit to 5\r\n          const updatedTrades = [...prevTrades, ...uniqueTrades].slice(-5);\r\n          return updatedTrades;\r\n        });\r\n      }\r\n    });\r\n\r\n    socket.addEventListener('error', (event) => {\r\n      console.error('WebSocket error:', event);\r\n      setError('WebSocket error. Please refresh the page.');\r\n    });\r\n\r\n    socket.addEventListener('close', () => {\r\n      console.log('WebSocket connection closed');\r\n      setError('WebSocket connection closed. Reconnecting...');\r\n      // Attempt to reconnect after 5 seconds\r\n      setTimeout(() => connectWebSocket(), 5000);\r\n    });\r\n\r\n    socketRef.current = socket;\r\n  };\r\n\r\n  // Initialize WebSocket connection on component mount\r\n  useEffect(() => {\r\n    connectWebSocket();\r\n\r\n    // Cleanup on component unmount\r\n    return () => {\r\n      if (socketRef.current) {\r\n        socketRef.current.close();\r\n      }\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"min-h-screen bg-white text-black font-sans\">\r\n      <Header />\r\n\r\n      <div className=\"flex h-screen pt-20\">\r\n        {/* Sidebar for Trades */}\r\n        <div className=\"p-4 ml-2 overflow-y-auto w-[400px] h-full border-r border-gray-200 bg-white\">\r\n          <div className=\"mb-6\">\r\n            <h2 className=\"text-xl font-semibold mb-3 flex items-center gap-2\">\r\n              Trades - Last Price Updates\r\n            </h2>\r\n            {error ? (\r\n              <div className=\"flex justify-center items-center py-4\">\r\n                <span className=\"text-red-500\">{error}</span>\r\n              </div>\r\n            ) : (\r\n              <div className=\"space-y-3 mt-8\">\r\n                {trades.length > 0 ? (\r\n                  trades.map((trade, index) => (\r\n                    <div key={index} className=\"p-4 bg-white border border-gray-200 rounded-lg shadow-sm hover:bg-gray-50 transition-colors\">\r\n                      <div className=\"flex justify-between items-center mb-4\">\r\n                        <div className=\"flex items-center gap-2\">\r\n                          <span className=\"text-sm text-gray-900\">{trade.symbol}</span>\r\n                          <span className=\"text-xs text-gray-500\">{trade.symbol.toUpperCase()}</span>\r\n                        </div>\r\n                        <span className=\"text-sm text-gray-900\">${trade.price.toLocaleString()}</span>\r\n                      </div>\r\n                      <div className=\"mt-2 grid grid-cols-2 gap-2 text-xs\">\r\n                        <div className=\"flex items-center gap-1\">\r\n                          <span className=\"text-gray-500\">Volume:</span>\r\n                          <span className=\"text-gray-900\">{trade.volume.toLocaleString()}</span>\r\n                        </div>\r\n                        <div className=\"flex items-center gap-1\">\r\n                          <span className=\"text-gray-500\">Time:</span>\r\n                          <span className=\"text-gray-900\">{new Date(trade.timestamp).toLocaleTimeString()}</span>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  ))\r\n                ) : (\r\n                  <p className=\"text-sm text-gray-600\">No trades available yet.</p>\r\n                )}\r\n              </div>\r\n            )}\r\n          </div>\r\n        </div>\r\n\r\n        {/* Main Content */}\r\n        <div className=\"flex-1 overflow-y-auto\">\r\n          <div className=\"container mx-auto px-8 py-12\">\r\n            {/* Header */}\r\n            <div className=\"flex flex-col gap-6 mb-12\">\r\n              <div className=\"flex items-center justify-between\">\r\n                <h1 className=\"text-4xl font-bold text-black\">Market Holdings</h1>\r\n                <div className=\"flex items-center gap-4\">\r\n                  <Clock size={20} className=\"text-gray-400\" />\r\n                  <span className=\"text-sm text-gray-600\">\r\n                    Market {new Date().toLocaleTimeString()}\r\n                  </span>\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n            {/* Segment Selector */}\r\n            <SegmentSelector\r\n              segments={segments}\r\n              selectedSegment={selectedSegment}\r\n              onSegmentChange={setSelectedSegment}\r\n            />\r\n\r\n            {/* Holdings Table */}\r\n            <AnimatePresence mode=\"wait\">\r\n              <motion.div\r\n                initial={{ opacity: 0, y: 20 }}\r\n                animate={{ opacity: 1, y: 0 }}\r\n                exit={{ opacity: 0, y: -20 }}\r\n                transition={{ duration: 0.3 }}\r\n              >\r\n                {symbols && (\r\n                  <HoldingsTable\r\n                    holdings={symbols}\r\n                    onStockSelect={() => {}}\r\n                  />\r\n                )}\r\n              </motion.div>\r\n            </AnimatePresence>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default StockMarket;"],"names":["SegmentSelector","segments","selectedSegment","onSegmentChange","className","children","map","segment","jsxRuntimeExports","jsx","motion","button","onClick","whileHover","scale","whileTap","FINNHUB_API_KEY","BASE_URL","CACHE_DURATION","finnhubApi","getQuote","symbol","cacheKey","cachedData","localStorage","getItem","cacheTimestamp","now","Date","Number","JSON","parse","response","fetch","ok","Error","data","json","setItem","stringify","toString","getRecommendationTrends","HoldingsTable","holdings","onStockSelect","updatedHoldings","setUpdatedHoldings","useState","loading","setLoading","error","setError","searchTerm","setSearchTerm","currentPage","setCurrentPage","navigate","useNavigate","useEffect","fetchAllStockData","async","updated","Promise","all","holding","quote","updatedHolding","currentPrice","c","change","d","changePercent","dp","highPrice","h","lowPrice","l","openPrice","o","previousClose","pc","err","console","startTransition","length","interval","setInterval","clearInterval","filteredHoldings","filter","toLowerCase","includes","name","paginatedHoldings","slice","LoadingSpinner","jsxs","Search","size","type","placeholder","value","onChange","e","target","tr","handleStockSelect","stock","state","selectedStock","transition","stiffness","quantity","_a","toFixed","_b","_c","_d","_e","_f","_g","prevPage","Math","max","disabled","StockMarket","setSelectedSegment","trades","setTrades","socketRef","useRef","connectWebSocket","socket","WebSocket","addEventListener","log","forEach","send","event","message","newTrades","trade","s","price","p","timestamp","t","volume","v","prevTrades","uniqueTrades","newTrade","some","prevTrade","setTimeout","current","close","Header","index","toUpperCase","toLocaleString","toLocaleTimeString","Clock","AnimatePresence","mode","div","initial","opacity","y","animate","exit","duration","symbols"],"mappings":"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"}