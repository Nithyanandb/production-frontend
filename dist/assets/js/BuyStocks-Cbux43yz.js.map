{"version":3,"file":"BuyStocks-Cbux43yz.js","sources":["../../../src/components/pages/BuyStocks/BuyModal.tsx","../../../src/components/pages/BuyStocks/useBuyStock.ts","../../../src/components/pages/BuyStocks/StockChart.tsx","../../../src/components/pages/BuyStocks/finnhubApi.ts","../../../src/components/pages/BuyStocks/StockDetail.tsx","../../../src/components/pages/BuyStocks/BuyStocks.tsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { MinusIcon, PlusIcon, XIcon } from 'lucide-react';\r\nimport { useBuyStock } from './useBuyStock';\r\nimport useAuth from '../../hooks/useAuth';\r\nimport AuthModal from '../../Auth/AuthModal';\r\n\r\ninterface BuyModalProps {\r\n  stock?: {\r\n    symbol: string;\r\n    name: string;\r\n    price: number;\r\n    change?: number;\r\n    percentChange?: number;\r\n    high?: number;\r\n    low?: number;\r\n    openPrice?: number;\r\n    previousClose?: number;\r\n  };\r\n  onClose: () => void;\r\n  onSuccess: (quantity: number, totalPrice: number) => void;\r\n}\r\n\r\nconst BuyModal: React.FC<BuyModalProps> = ({ stock, onClose, onSuccess }) => {\r\n  const [quantity, setQuantity] = useState(1);\r\n  const { isAuthenticated } = useAuth();\r\n  const [showAuthModal, setShowAuthModal] = useState(false);\r\n  const { isProcessing, error, handlePurchase } = useBuyStock({\r\n    onSuccess: () => {\r\n      if (!stock) return;\r\n      const totalPrice = stock.price * quantity;\r\n      onSuccess(quantity, totalPrice);\r\n      onClose();\r\n    },\r\n  });\r\n\r\n  const handleSubmit = async () => {\r\n    if (!isAuthenticated) {\r\n      setShowAuthModal(true);\r\n      return;\r\n    }\r\n    if (!stock) return;\r\n    await handlePurchase(stock, quantity);\r\n  };\r\n\r\n  if (!stock) {\r\n    return null;\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <div className=\"fixed inset-0 bg-black/80 backdrop-blur-xl z-50 flex items-center justify-center\">\r\n        <div className=\"bg-[#111111] backdrop-blur-xl rounded-2xl p-8 w-full max-w-md mx-4 border border-white/10\">\r\n          <div className=\"flex justify-between items-center mb-8\">\r\n            <div>\r\n              <h2 className=\"text-2xl font-medium text-white\">{stock.name}</h2>\r\n              <p className=\"text-white/60 text-sm\">{stock.symbol}</p>\r\n            </div>\r\n            <button\r\n              onClick={onClose}\r\n              className=\"text-white/60 hover:text-white transition-colors p-2 rounded-full hover:bg-white/5\"\r\n            >\r\n              <XIcon size={24} />\r\n            </button>\r\n          </div>\r\n\r\n          <div className=\"space-y-8\">\r\n            <div className=\"flex flex-col items-center space-y-4\">\r\n              <span className=\"text-sm text-white/60\">Quantity</span>\r\n              <div className=\"flex items-center space-x-6\">\r\n                <button\r\n                  onClick={() => setQuantity(Math.max(1, quantity - 1))}\r\n                  className=\"w-12 h-12 rounded-full bg-white/5 hover:bg-white/10 flex items-center justify-center text-white border border-white/10 transition-all\"\r\n                >\r\n                  <MinusIcon size={20} />\r\n                </button>\r\n                <span className=\"text-4xl font-light text-white w-16 text-center\">\r\n                  {quantity}\r\n                </span>\r\n                <button\r\n                  onClick={() => setQuantity(quantity + 1)}\r\n                  className=\"w-12 h-12 rounded-full bg-white/5 hover:bg-white/10 flex items-center justify-center text-white border border-white/10 transition-all\"\r\n                >\r\n                  <PlusIcon size={20} />\r\n                </button>\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"space-y-4 border-t border-white/10 pt-6\">\r\n              <div className=\"flex justify-between text-sm\">\r\n                <span className=\"text-white/60\">Price per share</span>\r\n                <span className=\"text-white font-medium\">₹{stock.price?.toFixed(2)}</span>\r\n              </div>\r\n              <div className=\"flex justify-between text-xl\">\r\n                <span className=\"text-white/80\">Total Amount</span>\r\n                <span className=\"text-white font-medium\">₹{(stock.price * quantity).toFixed(2)}</span>\r\n              </div>\r\n            </div>\r\n\r\n            {error && (\r\n              <div className=\"bg-red-500/10 border border-red-500/20 rounded-xl p-4 text-red-400 text-sm\">\r\n                {error}\r\n              </div>\r\n            )}\r\n\r\n            <div className=\"space-y-3 pt-4\">\r\n              <button\r\n                onClick={handleSubmit}\r\n                disabled={isProcessing}\r\n                className=\"w-full py-4 bg-white text-black rounded-full font-medium hover:bg-white/90 transition-all disabled:opacity-50 disabled:cursor-not-allowed text-sm uppercase tracking-wide\"\r\n              >\r\n                {isProcessing ? 'Processing...' : 'Buy Now'}\r\n              </button>\r\n              <button\r\n                onClick={onClose}\r\n                className=\"w-full py-4 text-white/60 font-medium hover:text-white transition-colors text-sm uppercase tracking-wide\"\r\n              >\r\n                Cancel\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <AuthModal\r\n        isOpen={showAuthModal}\r\n        onClose={() => setShowAuthModal(false)}\r\n        onSuccess={() => {\r\n          setShowAuthModal(false);\r\n          if (!stock) return;\r\n          handlePurchase(stock, quantity);\r\n        }}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default BuyModal;","import { useState } from 'react';\r\nimport useAuth from '../../hooks/useAuth';\r\n\r\ninterface UseBuyStockProps {\r\n  onSuccess: () => void;\r\n}\r\n\r\ninterface Stock {\r\n  symbol: string;\r\n  name: string;\r\n  price: number;\r\n  change?: number;\r\n  percentChange?: number;\r\n  high?: number;\r\n  low?: number;\r\n  openPrice?: number;\r\n  previousClose?: number;\r\n}\r\n\r\nexport function useBuyStock({ onSuccess }: UseBuyStockProps) {\r\n  const [isProcessing, setIsProcessing] = useState(false);\r\n  const [error, setError] = useState<string | null>(null);\r\n  const { token, user, isAuthenticated } = useAuth();\r\n\r\n  const handlePurchase = async (stock: Stock, quantity: number) => {\r\n    if (!isAuthenticated || !token) {\r\n      setError('Please log in to continue.');\r\n      return;\r\n    }\r\n\r\n    if (!stock || quantity <= 0) {\r\n      setError('Invalid stock or quantity.');\r\n      return;\r\n    }\r\n\r\n    setIsProcessing(true);\r\n    setError(null);\r\n\r\n    try {\r\n      const response = await fetch('https://production-backend-final.onrender.com/transaction/buy', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          Authorization: `Bearer ${token}`,\r\n        },\r\n        body: JSON.stringify({\r\n          stockSymbol: stock.symbol,\r\n          stockName: stock.name,\r\n          quantity,\r\n          price: stock.price,\r\n          change: stock.change || 0,\r\n          percentChange: stock.percentChange || 0,\r\n          high: stock.high || stock.price,\r\n          low: stock.low || stock.price,\r\n          openPrice: stock.openPrice || stock.price,\r\n          previousClose: stock.previousClose || stock.price,\r\n          userId: user?.email,\r\n        }),\r\n      });\r\n\r\n      if (!response.ok) {\r\n        const errorData = await response.json();\r\n        throw new Error(errorData.message || 'Transaction failed. Please try again.');\r\n      }\r\n\r\n      onSuccess();\r\n    } catch (err) {\r\n      setError(err instanceof Error ? err.message : 'An unexpected error occurred.');\r\n    } finally {\r\n      setIsProcessing(false);\r\n    }\r\n  };\r\n\r\n  return {\r\n    isProcessing,\r\n    error,\r\n    handlePurchase,\r\n  };\r\n}","import React, { useState, useEffect, useCallback } from 'react';\r\nimport { motion } from 'framer-motion';\r\nimport {\r\n  AreaChart, Area, XAxis, YAxis, Tooltip, ResponsiveContainer,\r\n  CartesianGrid\r\n} from 'recharts';\r\nimport { ArrowUp, ArrowDown } from 'lucide-react';\r\nimport { finnhubApi } from './finnhubApi'; // Import the API utility\r\n\r\ninterface StockChartProps {\r\n  stock: {\r\n    symbol: string;\r\n    name: string;\r\n    price: number;\r\n    change: number;\r\n    changePercent: number;\r\n  };\r\n  timeFrame: string;\r\n  currentPrice: number;\r\n  onTimeframeChange?: (timeframe: string) => void;\r\n}\r\n\r\ninterface DataPoint {\r\n  date: string;\r\n  price: number;\r\n}\r\n\r\n// Cache duration in milliseconds (30 minutes)\r\nconst CACHE_DURATION = 30 * 60 * 1000;\r\n\r\n// Generate random walk data for initial chart rendering\r\nconst generateRandomWalk = (basePrice: number, steps: number, volatility: number = 0.002) => {\r\n  let prices = [basePrice];\r\n  for (let i = 1; i < steps; i++) {\r\n    const change = prices[i - 1] * volatility * (Math.random() - 0.5);\r\n    const smoothedChange = change * 0.5 + (prices[i - 1] - (i > 1 ? prices[i - 2] : basePrice)) * 0.3;\r\n    prices.push(prices[i - 1] + smoothedChange);\r\n  }\r\n  return prices;\r\n};\r\n\r\n// Generate initial data for the chart\r\nconst generateInitialData = (timeframe: string, basePrice: number = 100) => {\r\n  const dataPoints: DataPoint[] = [];\r\n  const periods = {\r\n    '1D': 78,    // 5-minute intervals for a trading day\r\n    '1W': 168,   // Hourly for a week\r\n    '1M': 30,    // Daily for a month\r\n    '3M': 90,    // Daily for 3 months\r\n    '1Y': 252,   // Trading days in a year\r\n    'ALL': 1260  // 5 years of trading days\r\n  }[timeframe] || 78;\r\n\r\n  const prices = generateRandomWalk(basePrice, periods);\r\n  const now = new Date();\r\n\r\n  for (let i = 0; i < periods; i++) {\r\n    const date = new Date(now);\r\n    if (timeframe === '1D') {\r\n      date.setMinutes(date.getMinutes() - (i * 5));\r\n    } else if (timeframe === '1W') {\r\n      date.setHours(date.getHours() - i);\r\n    } else {\r\n      date.setDate(date.getDate() - i);\r\n    }\r\n\r\n    dataPoints.unshift({\r\n      date: date.toISOString(),\r\n      price: Number(prices[i].toFixed(2))\r\n    });\r\n  }\r\n\r\n  return dataPoints;\r\n};\r\n\r\nexport const StockChart: React.FC<StockChartProps> = ({ \r\n  stock, \r\n  timeFrame,\r\n  currentPrice,\r\n  change,\r\n  onTimeframeChange \r\n}) => {\r\n  const [stockData, setStockData] = useState<DataPoint[]>([]);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n\r\n  // Fetch historical data with caching\r\n  const fetchHistoricalData = useCallback(async () => {\r\n    const cacheKey = `historical_${stock.symbol}_${timeFrame}`;\r\n    const cachedData = localStorage.getItem(cacheKey);\r\n    const cacheTimestamp = localStorage.getItem(`${cacheKey}_timestamp`);\r\n    const now = Date.now();\r\n\r\n    if (cachedData && cacheTimestamp && now - Number(cacheTimestamp) < CACHE_DURATION) {\r\n      setStockData(JSON.parse(cachedData));\r\n      setIsLoading(false);\r\n      return;\r\n    }\r\n\r\n    setIsLoading(true);\r\n    try {\r\n      // Fetch historical data using finnhubApi (if available)\r\n      const data = generateInitialData(timeFrame, currentPrice); // Use random data for now\r\n      localStorage.setItem(cacheKey, JSON.stringify(data));\r\n      localStorage.setItem(`${cacheKey}_timestamp`, now.toString());\r\n      setStockData(data);\r\n    } catch (error) {\r\n      console.error('Failed to fetch historical data:', error);\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  }, [stock.symbol, timeFrame, currentPrice]);\r\n\r\n  // Fetch historical data on component mount or when timeFrame changes\r\n  useEffect(() => {\r\n    fetchHistoricalData();\r\n  }, [fetchHistoricalData]);\r\n\r\n  // Update price for real-time data (only for 1D timeFrame)\r\n  const updatePrice = useCallback(() => {\r\n    if (stockData.length === 0 || timeFrame !== '1D') return;\r\n\r\n    const lastPrice = stockData[stockData.length - 1].price;\r\n    const volatility = 0.0001;\r\n    const trend = stock.changePercent / 100;\r\n    const change = lastPrice * volatility * (Math.random() - 0.5 + trend * 0.3);\r\n    const newPrice = Number((lastPrice + change).toFixed(2));\r\n\r\n    const newDataPoint = {\r\n      date: new Date().toISOString(),\r\n      price: newPrice\r\n    };\r\n\r\n    setStockData((prevData) => {\r\n      const newData = [...prevData.slice(1), newDataPoint];\r\n      return newData;\r\n    });\r\n  }, [stockData, stock.changePercent, timeFrame]);\r\n\r\n  // Set up a timer to update prices for 1D timeFrame\r\n  useEffect(() => {\r\n    if (isLoading || timeFrame !== '1D') return;\r\n\r\n    const interval = setInterval(() => {\r\n      updatePrice();\r\n    }, 5000 + Math.random() * 2000);\r\n\r\n    return () => clearInterval(interval);\r\n  }, [isLoading, updatePrice, timeFrame]);\r\n\r\n  const priceChange = stockData.length > 0 \r\n    ? stockData[stockData.length - 1].price - stockData[0].price \r\n    : 0;\r\n\r\n  const CustomTooltip = ({ active, payload, label }: any) => {\r\n    if (active && payload && payload.length) {\r\n      const date = new Date(label);\r\n      const price = payload[0].value;\r\n\r\n      return (\r\n        <div className=\"bg-white/90 backdrop-blur-xl border border-gray-200 rounded-lg p-4 shadow-xl\">\r\n          <p className=\"text-gray-600 text-sm mb-1\">\r\n            {timeFrame === '1D' \r\n              ? date.toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' })\r\n              : date.toLocaleDateString([], { month: 'short', day: 'numeric' })}\r\n          </p>\r\n          <p className=\"text-black text-lg font-medium\">\r\n            ₹{price.toFixed(2)} {/* Display price in rupees */}\r\n          </p>\r\n          <p className=\"text-xs flex items-center gap-1\">\r\n            {(stock.change !== undefined) && (\r\n              <>\r\n                {(stock.change >= 0) ? <ArrowUp size={10} /> : <ArrowDown size={10} />}\r\n                {Math.abs(stock.change).toFixed(2)}%\r\n              </>\r\n            )}\r\n          </p>\r\n        </div>\r\n      );\r\n    }\r\n    return null;\r\n  };\r\n\r\n  // Get the latest price from stockData\r\n  const latestPrice = stockData.length > 0 ? stockData[stockData.length - 1].price : currentPrice;\r\n\r\n  return (\r\n    <div className=\"h-full relative bg-white\">\r\n      {isLoading ? (\r\n        <div className=\"h-full flex items-center justify-center\">\r\n          <div className=\"flex flex-col items-center gap-3\">\r\n            <motion.div\r\n              animate={{ rotate: 360 }}\r\n              transition={{ duration: 1, repeat: Infinity, ease: \"linear\" }}\r\n              className=\"w-8 h-8 border-2 border-gray-200 border-t-gray-400 rounded-full\"\r\n            />\r\n            <span className=\"text-gray-400 text-sm font-medium\">Loading chart...</span>\r\n          </div>\r\n        </div>\r\n      ) : (\r\n        <ResponsiveContainer width=\"95%\" height=\"100%\">\r\n          <AreaChart \r\n            data={stockData}\r\n          >\r\n            <defs>\r\n              <linearGradient id=\"colorPrice\" x1=\"0\" y1=\"0\" x2=\"0\" y2=\"1\">\r\n                <stop \r\n                  offset=\"0%\" \r\n                  stopColor={priceChange >= 0 ? 'rgb(34, 197, 94)' : 'rgb(239, 68, 68)'} \r\n                  stopOpacity={0.2}\r\n                />\r\n                <stop \r\n                  offset=\"99%\" \r\n                  stopColor={priceChange >= 0 ? 'rgb(34, 197, 94)' : 'rgb(239, 68, 68)'} \r\n                  stopOpacity={0}\r\n                />\r\n              </linearGradient>\r\n            </defs>\r\n\r\n            <CartesianGrid \r\n              strokeDasharray=\"3 3\" \r\n              stroke=\"rgba(0,0,0,0.05)\"\r\n              vertical={false}\r\n            />\r\n\r\n            <XAxis\r\n              dataKey=\"date\"\r\n              tickFormatter={(date) => {\r\n                const d = new Date(date);\r\n                if (timeFrame === '1D') {\r\n                  return d.toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' });\r\n                }\r\n                return d.toLocaleDateString([], { day: 'numeric', month: 'short' });\r\n              }}\r\n              stroke=\"rgba(0,0,0,0.1)\"\r\n              tick={{ fill: 'rgba(0,0,0,0.6)', fontSize: 11 }}\r\n              axisLine={{ stroke: 'rgba(0,0,0,0.1)' }}\r\n              tickLine={{ stroke: 'rgba(0,0,0,0.1)' }}\r\n            />\r\n\r\n            <YAxis\r\n              domain={['auto', 'auto']}\r\n              stroke=\"rgba(0,0,0,0.1)\"\r\n              tick={{ fill: 'rgba(0,0,0,0.6)', fontSize: 11 }}\r\n              tickFormatter={(value) => `₹${value.toFixed(2)}`} \r\n              axisLine={{ stroke: 'rgba(0,0,0,0.1)' }}\r\n              tickLine={{ stroke: 'rgba(0,0,0,0.1)' }}\r\n              tickCount={6}\r\n              width={65}\r\n            />\r\n\r\n            <Tooltip\r\n              content={<CustomTooltip />}\r\n              cursor={{\r\n                stroke: 'rgba(0,0,0,0.1)',\r\n                strokeWidth: 1,\r\n                strokeDasharray: '4 4'\r\n              }}\r\n            />\r\n\r\n            <Area\r\n              type=\"monotone\"\r\n              dataKey=\"price\"\r\n              stroke={priceChange >= 0 ? 'rgb(34, 197, 94)' : 'rgb(239, 68, 68)'}\r\n              strokeWidth={1.5}\r\n              fill=\"url(#colorPrice)\"\r\n              animationDuration={750}\r\n              dot={false}\r\n              activeDot={{\r\n                r: 4,\r\n                fill: priceChange >= 0 ? 'rgb(34, 197, 94)' : 'rgb(239, 68, 68)',\r\n                stroke: '#fff',\r\n                strokeWidth: 1\r\n              }}\r\n            />\r\n          </AreaChart>\r\n        </ResponsiveContainer>\r\n      )}\r\n\r\n      {/* Fixed Price Display */}\r\n      <motion.div\r\n        initial={{ opacity: 0, y: 10 }}\r\n        animate={{ opacity: 1, y: 0 }}\r\n        className=\"absolute top-4 right-4 bg-white/90 backdrop-blur-xl border border-gray-200 rounded-lg p-4\"\r\n      >\r\n        <p className=\"text-gray-600 text-sm\">Current Price</p>\r\n        <p className=\"text-black text-2xl font-medium\">\r\n          ₹{latestPrice.toFixed(2)} {/* Display price in rupees */}\r\n        </p>\r\n      </motion.div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default StockChart;","const FINNHUB_API_KEY = \"ctksb2pr01qn6d7jeekgctksb2pr01qn6d7jeel0\";\r\nconst BASE_URL = \"https://finnhub.io/api/v1\";\r\n\r\n// Cache duration in milliseconds (30 minutes)\r\nconst CACHE_DURATION = 30 * 60 * 1000;\r\n\r\nexport interface FinnhubQuote {\r\n  c: number;  // Current price\r\n  d: number;  // Change\r\n  dp: number; // Percent change\r\n  h: number;  // High price of the day\r\n  l: number;  // Low price of the day\r\n  o: number;  // Open price of the day\r\n  pc: number; // Previous close price\r\n  t: number;  // Timestamp\r\n}\r\n\r\nexport interface RecommendationTrend {\r\n  symbol: string;\r\n  buy: number;\r\n  hold: number;\r\n  period: string;\r\n  sell: number;\r\n  strongBuy: number;\r\n  strongSell: number;\r\n}\r\n\r\nexport const finnhubApi = {\r\n  async getQuote(symbol: string): Promise<FinnhubQuote> {\r\n    const cacheKey = `quote_${symbol}`;\r\n    const cachedData = localStorage.getItem(cacheKey);\r\n    const cacheTimestamp = localStorage.getItem(`${cacheKey}_timestamp`);\r\n    const now = Date.now();\r\n\r\n    if (cachedData && cacheTimestamp && now - Number(cacheTimestamp) < CACHE_DURATION) {\r\n      return JSON.parse(cachedData);\r\n    }\r\n\r\n    const response = await fetch(\r\n      `${BASE_URL}/quote?symbol=${symbol}&token=${FINNHUB_API_KEY}`\r\n    );\r\n    if (!response.ok) {\r\n      throw new Error('Failed to fetch quote');\r\n    }\r\n    const data = await response.json();\r\n    localStorage.setItem(cacheKey, JSON.stringify(data));\r\n    localStorage.setItem(`${cacheKey}_timestamp`, now.toString());\r\n    return data;\r\n  },\r\n\r\n  async getRecommendationTrends(symbol: string): Promise<RecommendationTrend[]> {\r\n    const cacheKey = `recommendation_${symbol}`;\r\n    const cachedData = localStorage.getItem(cacheKey);\r\n    const cacheTimestamp = localStorage.getItem(`${cacheKey}_timestamp`);\r\n    const now = Date.now();\r\n\r\n    if (cachedData && cacheTimestamp && now - Number(cacheTimestamp) < CACHE_DURATION) {\r\n      return JSON.parse(cachedData);\r\n    }\r\n\r\n    const response = await fetch(\r\n      `${BASE_URL}/stock/recommendation?symbol=${symbol}&token=${FINNHUB_API_KEY}`\r\n    );\r\n    if (!response.ok) {\r\n      throw new Error('Failed to fetch recommendation trends');\r\n    }\r\n    const data = await response.json();\r\n    localStorage.setItem(cacheKey, JSON.stringify(data));\r\n    localStorage.setItem(`${cacheKey}_timestamp`, now.toString());\r\n    return data;\r\n  },\r\n};","import React, { useState, useEffect, startTransition } from 'react';\r\nimport { Stock } from './stockApi';\r\nimport { ArrowUp, ArrowDown, Globe, X } from 'lucide-react';\r\nimport { motion, AnimatePresence } from 'framer-motion';\r\nimport { StockChart } from './StockChart';\r\nimport { finnhubApi } from './finnhubApi'; // Import the API utility\r\n\r\ninterface StockDetailProps {\r\n  stock: Stock | null;\r\n  onBuyClick: (stock: Stock) => void;\r\n  loading?: boolean;\r\n}\r\n\r\nexport const StockDetail: React.FC<StockDetailProps> = ({ stock, onBuyClick, loading }) => {\r\n  const [timeFrame, setTimeFrame] = useState<string>('1D');\r\n  const [currentTime, setCurrentTime] = useState(new Date());\r\n  const [recommendationTrends, setRecommendationTrends] = useState<any[]>([]);\r\n  const [trendsLoading, setTrendsLoading] = useState<boolean>(false);\r\n  const [isModalOpen, setIsModalOpen] = useState<boolean>(false); // State to control modal visibility\r\n\r\n  // Cache duration in milliseconds (30 minutes)\r\n  const CACHE_DURATION = 30 * 60 * 1000;\r\n\r\n  // Fetch recommendation trends when stock changes\r\n  useEffect(() => {\r\n    const fetchRecommendationTrends = async () => {\r\n      if (!stock?.symbol) return;\r\n\r\n      const cacheKey = `recommendation_${stock.symbol}`;\r\n      const cachedData = localStorage.getItem(cacheKey);\r\n      const cacheTimestamp = localStorage.getItem(`${cacheKey}_timestamp`);\r\n      const now = Date.now();\r\n\r\n      if (cachedData && cacheTimestamp && now - Number(cacheTimestamp) < CACHE_DURATION) {\r\n        setRecommendationTrends(JSON.parse(cachedData));\r\n        return;\r\n      }\r\n\r\n      startTransition(() => {\r\n        setTrendsLoading(true);\r\n      });\r\n\r\n      try {\r\n        const trends = await finnhubApi.getRecommendationTrends(stock.symbol); // Use finnhubApi utility\r\n        localStorage.setItem(cacheKey, JSON.stringify(trends));\r\n        localStorage.setItem(`${cacheKey}_timestamp`, now.toString());\r\n\r\n        startTransition(() => {\r\n          setRecommendationTrends(trends);\r\n        });\r\n      } catch (error) {\r\n        console.error('Failed to fetch recommendation trends:', error);\r\n      } finally {\r\n        startTransition(() => {\r\n          setTrendsLoading(false);\r\n        });\r\n      }\r\n    };\r\n\r\n    fetchRecommendationTrends();\r\n  }, [stock?.symbol]);\r\n\r\n  // Update current time every second\r\n  useEffect(() => {\r\n    const timer = setInterval(() => {\r\n      setCurrentTime(new Date());\r\n    }, 1000);\r\n    return () => clearInterval(timer);\r\n  }, []);\r\n\r\n  // If stock is not defined, return null or a fallback UI\r\n  if (loading || !stock) {\r\n    return (\r\n      <div className=\"flex items-center justify-center h-full text-gray-600\">\r\n        <div className=\"text-center\">\r\n          <Globe size={48} className=\"mx-auto mb-4 opacity-60\" />\r\n          <p className=\"text-xl\">Select a stock to view details</p>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  const timeFrames = ['1D', '1W', '1M', '3M', '1Y', 'ALL'];\r\n\r\n  // Color scheme for recommendation trends\r\n  const trendColors = {\r\n    strongBuy: '#16a34a', // Bright green\r\n    buy: '#4ade80',      // Light green\r\n    hold: '#facc15',     // Yellow\r\n    sell: '#f87171',     // Light red\r\n    strongSell: '#dc2626', // Bright red\r\n  };\r\n\r\n  // Function to open the modal\r\n  const openModal = () => {\r\n    setIsModalOpen(true);\r\n  };\r\n\r\n  // Function to close the modal\r\n  const closeModal = () => {\r\n    setIsModalOpen(false);\r\n  };\r\n\r\n  return (\r\n    <AnimatePresence mode=\"wait\">\r\n      <motion.div\r\n        initial={{ opacity: 0, y: 20 }}\r\n        animate={{ opacity: 1, y: 0 }}\r\n        exit={{ opacity: 0, y: -20 }}\r\n        className=\"flex -mt-6 flex-col h-full bg-white backdrop-blur-xl p-4 lg:p-4\"\r\n      >\r\n        {/* Compact Header */}\r\n        <div className=\"flex items-center justify-between mb-2\">\r\n          <div>\r\n            <h1 className=\"text-2xl font-semibold text-black\">{stock.name}</h1>\r\n            <div className=\"flex items-center gap-2 text-sm\">\r\n              <span className=\"text-gray-600\">{stock.symbol}</span>\r\n              <span className=\"text-gray-600\">•</span>\r\n              <span className=\"text-gray-600\">{currentTime.toLocaleTimeString()}</span>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        {/* Compact Price Section */}\r\n        <div className=\"flex items-center gap-4 mb-4\">\r\n          <span className=\"text-4xl font-medium text-black\">\r\n            ₹{stock.price?.toFixed(2) ?? 'N/A'} {/* Use the price from the selected stock */}\r\n          </span>\r\n          <motion.span\r\n            animate={{\r\n              color: (stock.change || 0) >= 0 ? \"rgb(34, 197, 94)\" : \"rgb(239, 68, 68)\"\r\n            }}\r\n            className=\"flex items-center text-lg\"\r\n          >\r\n            {(stock.change || 0) >= 0 ? <ArrowUp size={20} /> : <ArrowDown size={20} />}\r\n            {Math.abs(stock.change || 0).toFixed(2)}%\r\n          </motion.span>\r\n        </div>\r\n\r\n        {/* Compact Time Frame Selector */}\r\n        <div className=\"flex gap-1 mb-4 overflow-x-auto scrollbar-hide\">\r\n          {timeFrames.map((tf) => (\r\n            <button\r\n              key={tf}\r\n              onClick={() => setTimeFrame(tf)}\r\n              className={`px-3 py-1 rounded-full text-xs font-medium transition-all whitespace-nowrap ${\r\n                timeFrame === tf\r\n                  ? 'bg-black text-white'\r\n                  : 'bg-gray-100 text-gray-600 hover:bg-gray-200'\r\n              }`}\r\n            >\r\n              {tf}\r\n            </button>\r\n          ))}\r\n        </div>\r\n\r\n        {/* Chart Container */}\r\n        <div className=\"flex-1 bg-gray-100 rounded-xl mt-16 backdrop-blur-sm\">\r\n          <div className=\"h-full\">\r\n            <StockChart stock={stock} timeFrame={timeFrame} currentPrice={stock.price} change={stock.change} />\r\n          </div>\r\n        </div>\r\n\r\n   {/* Recommendation Trends Section */}\r\n<div\r\n  className=\"rounded-xl p-4 backdrop-blur-sm cursor-pointer\"\r\n  onClick={openModal} // Open modal on click\r\n>\r\n  <h3 className=\"text-lg font-semibold text-gray-800 mb-4\">Recommendation Trends</h3>\r\n  {trendsLoading ? (\r\n    <div className=\"flex justify-center items-center py-4\">\r\n      <span className=\"text-gray-600\">Loading trends...</span>\r\n    </div>\r\n  ) : recommendationTrends.length > 0 ? (\r\n    <div className=\"overflow-x-auto\">\r\n      <table className=\"min-w-full bg-white rounded-xl shadow-sm\">\r\n        <thead>\r\n          <tr>\r\n            <th className=\"px-4 py-2 text-xs text-gray-600 text-left\">Period</th>\r\n            <th className=\"px-4 py-2 text-xs text-gray-600 text-center\">Strong Buy</th>\r\n            <th className=\"px-4 py-2 text-xs text-gray-600 text-center\">Buy</th>\r\n            <th className=\"px-4 py-2 text-xs text-gray-600 text-center\">Hold</th>\r\n            <th className=\"px-4 py-2 text-xs text-gray-600 text-center\">Sell</th>\r\n            <th className=\"px-4 py-2 text-xs text-gray-600 text-center\">Strong Sell</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {recommendationTrends.slice(0, 1).map((trend, index) => ( // Show only the first row in the preview\r\n            <tr key={index} className=\"border-t border-gray-200\">\r\n              <td className=\"px-4 py-3 text-sm text-gray-700\">{trend.period}</td>\r\n              <td className=\"px-4 py-3 text-lg font-medium text-center\" style={{ color: '#4CAF50' }}> {/* Green */}\r\n                {trend.strongBuy}\r\n              </td>\r\n              <td className=\"px-4 py-3 text-lg font-medium text-center\" style={{ color: '#8BC34A' }}> {/* Light Green */}\r\n                {trend.buy}\r\n              </td>\r\n              <td className=\"px-4 py-3 text-lg font-medium text-center\" style={{ color: '#FFC107' }}> {/* Amber */}\r\n                {trend.hold}\r\n              </td>\r\n              <td className=\"px-4 py-3 text-lg font-medium text-center\" style={{ color: '#FF5722' }}> {/* Deep Orange */}\r\n                {trend.sell}\r\n              </td>\r\n              <td className=\"px-4 py-3 text-lg font-medium text-center\" style={{ color: '#F44336' }}> {/* Red */}\r\n                {trend.strongSell}\r\n              </td>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  ) : (\r\n    <div className=\"flex justify-center items-center py-4\">\r\n      <span className=\"text-gray-600\">No recommendation trends available.</span>\r\n    </div>\r\n  )}\r\n</div>\r\n\r\n{/* Modal for Recommendation Trends */}\r\n<AnimatePresence>\r\n  {isModalOpen && (\r\n    <motion.div\r\n      initial={{ opacity: 0 }}\r\n      animate={{ opacity: 1 }}\r\n      exit={{ opacity: 0 }}\r\n      className=\"fixed inset-0 bg-black bg-opacity-5 flex items-center justify-center p-4 z-50\"\r\n      onClick={closeModal} // Close modal when clicking outside\r\n    >\r\n      <motion.div\r\n        initial={{ scale: 0.9, y: 20 }}\r\n        animate={{ scale: 1, y: 0 }}\r\n        exit={{ scale: 0.9, y: -20 }}\r\n        className=\"bg-white rounded-xl w-full max-w-2xl p-6 relative\"\r\n        onClick={(e) => e.stopPropagation()} // Prevent clicks inside the modal from closing it\r\n      >\r\n        <button\r\n          onClick={closeModal}\r\n          className=\"absolute top-4 right-4 p-2 text-gray-600 hover:text-gray-800\"\r\n        >\r\n          <X size={20} />\r\n        </button>\r\n        <h3 className=\"text-lg font-semibold text-gray-800 mb-4\">Recommendation Trends</h3>\r\n        <div className=\"overflow-x-auto\">\r\n          <table className=\"min-w-full bg-white rounded-xl shadow-sm\">\r\n            <thead>\r\n              <tr>\r\n                <th className=\"px-4 py-2 text-xs text-gray-600 text-left\">Period</th>\r\n                <th className=\"px-4 py-2 text-xs text-gray-600 text-center\">Strong Buy</th>\r\n                <th className=\"px-4 py-2 text-xs text-gray-600 text-center\">Buy</th>\r\n                <th className=\"px-4 py-2 text-xs text-gray-600 text-center\">Hold</th>\r\n                <th className=\"px-4 py-2 text-xs text-gray-600 text-center\">Sell</th>\r\n                <th className=\"px-4 py-2 text-xs text-gray-600 text-center\">Strong Sell</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {recommendationTrends.map((trend, index) => (\r\n                <tr key={index} className=\"border-t border-gray-200\">\r\n                  <td className=\"px-4 py-3 text-sm text-gray-700\">{trend.period}</td>\r\n                  <td className=\"px-4 py-3 text-lg font-medium text-center\" style={{ color: '#4CAF50' }}> {/* Green */}\r\n                    {trend.strongBuy}\r\n                  </td>\r\n                  <td className=\"px-4 py-3 text-lg font-medium text-center\" style={{ color: '#8BC34A' }}> {/* Light Green */}\r\n                    {trend.buy}\r\n                  </td>\r\n                  <td className=\"px-4 py-3 text-lg font-medium text-center\" style={{ color: '#FFC107' }}> {/* Amber */}\r\n                    {trend.hold}\r\n                  </td>\r\n                  <td className=\"px-4 py-3 text-lg font-medium text-center\" style={{ color: '#FF5722' }}> {/* Deep Orange */}\r\n                    {trend.sell}\r\n                  </td>\r\n                  <td className=\"px-4 py-3 text-lg font-medium text-center\" style={{ color: '#F44336' }}> {/* Red */}\r\n                    {trend.strongSell}\r\n                  </td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      </motion.div>\r\n    </motion.div>\r\n  )}\r\n</AnimatePresence>\r\n      </motion.div>\r\n    </AnimatePresence>\r\n  );\r\n};","import React, { useState, useEffect, useMemo, startTransition } from 'react';\r\nimport { Search, ArrowUp, ArrowDown, Globe, DollarSign, Check } from 'lucide-react';\r\nimport BuyModal from './BuyModal';\r\nimport { motion, AnimatePresence } from 'framer-motion';\r\nimport Header from '@/components/Header/Header';\r\nimport { StockDetail } from './StockDetail';\r\nimport LoadingSpinner from '../../ui/LoadingSpinner';\r\nimport emailjs from 'emailjs-com';\r\nimport useAuth from '../../hooks/useAuth';\r\nimport { useLocation } from 'react-router-dom';\r\nimport { symbols } from '../AllStocks/symbols';\r\nimport { FixedSizeList as List } from 'react-window';\r\nimport Footer from '@/components/Footer/Footer';\r\nimport { finnhubApi, FinnhubQuote } from './finnhubApi';\r\n\r\n// Cache duration in milliseconds (30 minutes)\r\nconst CACHE_DURATION = 30 * 60 * 1000;\r\nconst useDebounce = (value: string, delay: number) => {\r\n  const [debouncedValue, setDebouncedValue] = useState(value);\r\n\r\n  useEffect(() => {\r\n    const handler = setTimeout(() => {\r\n      setDebouncedValue(value);\r\n    }, delay);\r\n\r\n    return () => {\r\n      clearTimeout(handler);\r\n    };\r\n  }, [value, delay]);\r\n\r\n  return debouncedValue;\r\n};\r\n\r\nclass ErrorBoundary extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { hasError: false };\r\n  }\r\n\r\n  static getDerivedStateFromError(error) {\r\n    return { hasError: true };\r\n  }\r\n\r\n  componentDidCatch(error, errorInfo) {\r\n    console.error('Error caught by ErrorBoundary:', error, errorInfo);\r\n  }\r\n\r\n  render() {\r\n    if (this.state.hasError) {\r\n      return <h1>Something went wrong. Please try again later.</h1>;\r\n    }\r\n    return this.props.children;\r\n  }\r\n}\r\n\r\n// Fetch stock data for all symbols\r\nconst fetchAllStockData = async () => {\r\n  const updated = await Promise.all(\r\n    symbols.map(async (stock) => {\r\n      const cacheKey = `stockData_${stock.symbol}`;\r\n      const cachedData = localStorage.getItem(cacheKey);\r\n      const cacheTimestamp = localStorage.getItem(`${cacheKey}_timestamp`);\r\n      const now = Date.now();\r\n\r\n      if (cachedData && cacheTimestamp && now - Number(cacheTimestamp) < CACHE_DURATION) {\r\n        return JSON.parse(cachedData);\r\n      }\r\n\r\n      try {\r\n        const quote = await finnhubApi.getQuote(stock.symbol);\r\n        const updatedStockData = {\r\n          ...stock,\r\n          price: quote.c || 0,\r\n          change: quote.d || 0,\r\n          changePercent: quote.dp || 0,\r\n          highPrice: quote.h || 0,\r\n          lowPrice: quote.l || 0,\r\n          openPrice: quote.o || 0,\r\n          previousClose: quote.pc || 0,\r\n        };\r\n\r\n        localStorage.setItem(cacheKey, JSON.stringify(updatedStockData));\r\n        localStorage.setItem(`${cacheKey}_timestamp`, now.toString());\r\n        return updatedStockData;\r\n      } catch (error) {\r\n        console.error(`Failed to fetch data for ${stock.symbol}:`, error);\r\n        return {\r\n          ...stock,\r\n          price: 0,\r\n          change: 0,\r\n          changePercent: 0,\r\n          highPrice: 0,\r\n          lowPrice: 0,\r\n          openPrice: 0,\r\n          previousClose: 0,\r\n        };\r\n      }\r\n    })\r\n  );\r\n\r\n  return updated;\r\n};\r\n\r\nexport const BuyStocks: React.FC = () => {\r\n  const { user } = useAuth();\r\n  const [stocks, setStocks] = useState(symbols);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState<string | null>(null);\r\n  const [searchTerm, setSearchTerm] = useState('');\r\n  const [selectedStock, setSelectedStock] = useState<typeof symbols[0] | null>(null);\r\n  const [selectedStockDetail, setSelectedStockDetail] = useState<typeof symbols[0] | null>(null);\r\n  const [stockDetailLoading, setStockDetailLoading] = useState(false);\r\n  const [showSuccessPopup, setShowSuccessPopup] = useState(false);\r\n  const [isBuyModalOpen, setIsBuyModalOpen] = useState(false);\r\n  const [email, setEmail] = useState(user?.email || '');\r\n  const location = useLocation();\r\n\r\n  // Debounced search term\r\n  const debouncedSearchTerm = useDebounce(searchTerm, 300);\r\n\r\n  // Fetch stock data on component mount\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      setLoading(true);\r\n      try {\r\n        const updatedStocks = await fetchAllStockData();\r\n        setStocks(updatedStocks);\r\n      } catch (error) {\r\n        console.error('Failed to fetch stock data:', error);\r\n        setError('Failed to fetch stock data');\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchData();\r\n  }, []);\r\n  // Set user email on component mount or when user changes\r\n  useEffect(() => {\r\n    if (user) {\r\n      setEmail(user.email || '');\r\n    }\r\n  }, [user]);\r\n\r\n  // Handle selected stock from navigation state\r\n  useEffect(() => {\r\n    if (location.state?.selectedStock) {\r\n      setSelectedStock(location.state.selectedStock);\r\n      setSelectedStockDetail(location.state.selectedStock);\r\n    }\r\n  }, [location.state]);\r\n\r\n  // Initialize EmailJS\r\n  useEffect(() => {\r\n    try {\r\n      emailjs.init('eyK87ZsxW822cQvyN'); // Replace with your EmailJS User ID\r\n    } catch (error) {\r\n      console.error('Failed to initialize EmailJS:', error);\r\n    }\r\n  }, []);\r\n\r\n  // Fetch stock data for all symbols\r\n  useEffect(() => {\r\n    const fetchAllStockData = async () => {\r\n      setLoading(true);\r\n      try {\r\n        const updated = await Promise.all(\r\n          symbols.map(async (stock) => {\r\n            // Check if data is already cached and not expired\r\n            const cachedData = localStorage.getItem(`stockData_${stock.symbol}`);\r\n            const cacheTimestamp = localStorage.getItem(`cacheTimestamp_${stock.symbol}`);\r\n            const now = Date.now();\r\n\r\n            if (cachedData && cacheTimestamp && now - Number(cacheTimestamp) < CACHE_DURATION) {\r\n              return JSON.parse(cachedData); // Use cached data if it's still valid\r\n            }\r\n\r\n            try {\r\n              const response = await fetch(\r\n                `https://finnhub.io/api/v1/quote?symbol=${stock.symbol}&token=${API_KEY}`\r\n              );\r\n              if (!response.ok) {\r\n                throw new Error(`Failed to fetch data for ${stock.symbol}`);\r\n              }\r\n              const data = await response.json();\r\n\r\n              const updatedStockData = {\r\n                ...stock,\r\n                price: data.c || 0,\r\n                change: data.d || 0,\r\n                changePercent: data.dp || 0,\r\n                highPrice: data.h || 0,\r\n                lowPrice: data.l || 0,\r\n                openPrice: data.o || 0,\r\n                previousClose: data.pc || 0,\r\n              };\r\n\r\n              // Cache the fetched data with a timestamp\r\n              localStorage.setItem(`stockData_${stock.symbol}`, JSON.stringify(updatedStockData));\r\n              localStorage.setItem(`cacheTimestamp_${stock.symbol}`, now.toString());\r\n\r\n              return updatedStockData;\r\n            } catch (error) {\r\n              console.error(`Failed to fetch data for ${stock.symbol}:`, error);\r\n              return {\r\n                ...stock,\r\n                price: 0,\r\n                change: 0,\r\n                changePercent: 0,\r\n                highPrice: 0,\r\n                lowPrice: 0,\r\n                openPrice: 0,\r\n                previousClose: 0,\r\n              };\r\n            }\r\n          })\r\n        );\r\n\r\n        setStocks(updated);\r\n      } catch (error) {\r\n        console.error('Failed to fetch stock data:', error);\r\n        setError('Failed to fetch stock data');\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchAllStockData();\r\n  }, []);\r\n\r\n  // Handle stock selection\r\n  const handleStockSelect = async (stock: typeof symbols[0]) => {\r\n    setStockDetailLoading(true);\r\n    setSelectedStockDetail(stock);\r\n\r\n    try {\r\n      const detailedStock = { ...stock };\r\n      setSelectedStockDetail(detailedStock);\r\n    } catch (error) {\r\n      console.error('Failed to load stock details:', error);\r\n      setError('Failed to load stock details');\r\n    } finally {\r\n      setStockDetailLoading(false);\r\n    }\r\n  };\r\n\r\n  // Handle successful transaction\r\n  const handleTransactionSuccess = async (stock: typeof symbols[0], quantity: number, totalPrice: number) => {\r\n    if (typeof totalPrice !== 'number' || isNaN(totalPrice)) {\r\n      console.error('Invalid totalPrice:', totalPrice);\r\n      return;\r\n    }\r\n\r\n    startTransition(() => {\r\n      setShowSuccessPopup(true);\r\n    });\r\n\r\n    setTimeout(() => {\r\n      startTransition(() => {\r\n        setShowSuccessPopup(false);\r\n      });\r\n    }, 3000);\r\n\r\n    if (user?.email) {\r\n      try {\r\n        const templateParams = {\r\n          to_email: user.email,\r\n          stock_symbol: stock.symbol,\r\n          stock_name: stock.name,\r\n          quantity: quantity,\r\n          total_price: totalPrice.toFixed(2),\r\n        };\r\n\r\n        await emailjs.send(\r\n          'service_box535f', // Replace with your EmailJS Service ID\r\n          'template_l4fugpk', // Replace with your EmailJS Template ID\r\n          templateParams\r\n        );\r\n\r\n        console.log('Email notification sent successfully!');\r\n      } catch (error) {\r\n        console.error('Failed to send email notification:', error);\r\n      }\r\n    } else {\r\n      console.error('User email not found.');\r\n      alert('User email not found. Please update your email in settings.');\r\n    }\r\n  };\r\n\r\n  // Filter stocks based on debounced search term\r\n  const filteredStocks = useMemo(() => {\r\n    return stocks.filter(\r\n      (stock) =>\r\n        stock.symbol.toLowerCase().includes(debouncedSearchTerm.toLowerCase()) ||\r\n        stock.name.toLowerCase().includes(debouncedSearchTerm.toLowerCase())\r\n    );\r\n  }, [debouncedSearchTerm, stocks]);\r\n\r\n  const Row = ({ index, style }: { index: number; style: React.CSSProperties }) => {\r\n    const stock = filteredStocks[index];\r\n    const isSelected = selectedStockDetail?.symbol === stock.symbol;\r\n\r\n    // If price is zero, show a skeleton loader\r\n    if (stock.price === 0) {\r\n      return (\r\n        <motion.div\r\n          style={{ ...style, marginBottom: '16px' }}\r\n          className=\"p-4 w-98 bg-white hover:bg-gray-50 transition-colors duration-200 cursor-pointer\"\r\n        >\r\n          <div className=\"flex justify-between items-start\">\r\n            <div>\r\n              {/* Skeleton for stock symbol */}\r\n              <div className=\"h-4 w-20 bg-gray-200 rounded mb-2 animate-pulse\"></div>\r\n              {/* Skeleton for stock name */}\r\n              <div className=\"h-3 w-32 bg-gray-200 rounded animate-pulse\"></div>\r\n            </div>\r\n            <div className=\"text-right\">\r\n              {/* Skeleton for price */}\r\n              <div className=\"h-4 w-16 bg-gray-200 rounded mb-2 animate-pulse\"></div>\r\n              {/* Skeleton for change percentage */}\r\n              <div className=\"h-3 w-12 bg-gray-200 rounded animate-pulse\"></div>\r\n            </div>\r\n          </div>\r\n        </motion.div>\r\n      );\r\n    }\r\n\r\n    return (\r\n      <motion.div\r\n        style={{ ...style, marginBottom: '16px' }}\r\n        layout\r\n        className={`p-4 w-98 ${\r\n          isSelected ? 'bg-gray-200 rounded' : 'bg-white hover:bg-gray-50'\r\n        } transition-colors duration-200 cursor-pointer`}\r\n        onClick={() => handleStockSelect(stock)}\r\n      >\r\n        <div className=\"flex justify-between items-start\">\r\n          <div>\r\n            <h3 className=\"font-medium text-sm text-black\">{stock.symbol}</h3>\r\n            <p className=\"text-xs text-gray-600\">{stock.name}</p>\r\n          </div>\r\n          <motion.div\r\n            animate={{\r\n              color: (stock.change || 0) >= 0\r\n                ? '#16a34a' // Green for positive change\r\n                : '#dc2626', // Red for negative change\r\n            }}\r\n            className=\"text-right\"\r\n          >\r\n            <p className=\"font-medium text-sm text-black\">₹{(stock.price|| 0).toFixed(2)}</p>\r\n            <p className=\"text-xs flex items-center gap-1\">\r\n              {(stock.change !== undefined) && (\r\n                <>\r\n                  {(stock.change >= 0) ? <ArrowUp size={10} /> : <ArrowDown size={10} />}\r\n                  {Math.abs(stock.change).toFixed(2)}%\r\n                </>\r\n              )}\r\n            </p>\r\n          </motion.div>\r\n        </div>\r\n      </motion.div>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <ErrorBoundary>\r\n      <div className=\"min-h-screen w-full text-black\">\r\n        <Header />\r\n        <div>\r\n          <div className=\"mt-28 absolute flex z-20 px-8 justify-end w-full\">\r\n            {selectedStockDetail && (\r\n              <button\r\n                onClick={() => setIsBuyModalOpen(true)}\r\n                className=\"px-8 py-3 bg-black text-white font-medium rounded-full hover:bg-black/90 transition-all flex items-center gap-2\"\r\n              >\r\n                <DollarSign size={16} />\r\n                Buy {selectedStockDetail.symbol}\r\n              </button>\r\n            )}\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"flex h-screen pt-20\">\r\n          <div className=\"w-98 bg-white border-r border-gray-200 overflow-hidden\">\r\n            <div className=\"p-6\">\r\n              <div className=\"relative mb-6\">\r\n                <Search className=\"absolute left-4 top-1/2 transform -translate-y-1/2 text-gray-400\" size={16} />\r\n                <input\r\n                  type=\"text\"\r\n                  placeholder=\"Search stocks...\"\r\n                  value={searchTerm}\r\n                  onChange={(e) => setSearchTerm(e.target.value)}\r\n                  className=\"w-full bg-gray-50 border border-gray-200 rounded-2xl pl-10 pr-4 py-2 text-sm focus:outline-none focus:ring-2 focus:ring-gray-300\"\r\n                />\r\n              </div>\r\n\r\n              <div className=\"space-y-4 overflow-y-auto w-[400px] hide-scrollbar\">\r\n                {loading ? (\r\n                  <LoadingSpinner />\r\n                ) : (\r\n                  <List\r\n                    height={600}\r\n                    itemCount={filteredStocks.length}\r\n                    itemSize={80}\r\n                    width={400}\r\n                  >\r\n                    {Row}\r\n                  </List>\r\n                )}\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"flex-1 \">\r\n            {stockDetailLoading ? (\r\n              <LoadingSpinner />\r\n            ) : selectedStockDetail ? (\r\n              <StockDetail\r\n                stock={selectedStockDetail}\r\n                onBuyClick={setSelectedStock}\r\n                loading={loading}\r\n              />\r\n            ) : (\r\n              <div className=\"h-full w-full flex items-center justify-center bg-gradient-to-b from-gray-50 to-white\">\r\n                <div className=\"text-center max-w-md px-4\">\r\n                  <div className=\"inline-flex items-center justify-center w-16 h-16 bg-black rounded-2xl shadow-lg mb-6\">\r\n                    <Globe size={28} className=\"text-white\" />\r\n                  </div>\r\n                  <p className=\"text-lg text-gray-600 mb-6\">Select a stock to view details.</p>\r\n                  <p className=\"text-sm text-gray-500 mt-6\">\r\n                    Dive into real-time data, charts, and insights to make informed decisions.\r\n                  </p>\r\n                </div>\r\n              </div>\r\n            )}\r\n          </div>\r\n        </div>\r\n\r\n        <AnimatePresence>\r\n          {showSuccessPopup && (\r\n            <motion.div\r\n              initial={{ opacity: 0, y: 50 }}\r\n              animate={{ opacity: 1, y: 0 }}\r\n              exit={{ opacity: 0, y: -50 }}\r\n              className=\"fixed inset-0 flex items-center justify-center z-50\"\r\n            >\r\n              <div className=\"bg-black/50 backdrop-blur-sm fixed inset-0\" />\r\n              <motion.div\r\n                initial={{ scale: 0.8 }}\r\n                animate={{ scale: 1 }}\r\n                exit={{ scale: 0.8 }}\r\n                className=\"bg-white/90 backdrop-blur-lg rounded-xl shadow-2xl p-6 max-w-md w-full mx-4 border border-gray-200\"\r\n              >\r\n                <div className=\"flex flex-col items-center gap-4 text-center\">\r\n                  <div className=\"bg-green-500/10 rounded-full p-3\">\r\n                    <Check className=\"w-6 h-6 text-green-500\" />\r\n                  </div>\r\n                  <h2 className=\"text-xl font-semibold text-gray-900\">Success!</h2>\r\n                  <p className=\"text-gray-600\">\r\n                    Transaction completed successfully! A notification has been sent to your email.\r\n                  </p>\r\n                  <button\r\n                    onClick={() => setShowSuccessPopup(false)}\r\n                    className=\"mt-4 px-6 py-2 bg-green-500 text-white rounded-lg hover:bg-green-600 transition-colors\"\r\n                  >\r\n                    Close\r\n                  </button>\r\n                </div>\r\n              </motion.div>\r\n            </motion.div>\r\n          )}\r\n        </AnimatePresence>\r\n\r\n        <AnimatePresence>\r\n          {isBuyModalOpen && selectedStockDetail && (\r\n            <BuyModal\r\n              stock={selectedStockDetail}\r\n              onClose={() => setIsBuyModalOpen(false)}\r\n              onSuccess={(quantity, totalPrice) =>\r\n                handleTransactionSuccess(selectedStockDetail, quantity, totalPrice)\r\n              }\r\n            />\r\n          )}\r\n        </AnimatePresence>\r\n      </div>\r\n      <Footer/>\r\n    </ErrorBoundary>\r\n  );\r\n};\r\n\r\nexport default BuyStocks;"],"names":["BuyModal","stock","onClose","onSuccess","quantity","setQuantity","useState","isAuthenticated","useAuth","showAuthModal","setShowAuthModal","isProcessing","error","handlePurchase","setIsProcessing","setError","token","user","async","response","fetch","method","headers","Authorization","body","JSON","stringify","stockSymbol","symbol","stockName","name","price","change","percentChange","high","low","openPrice","previousClose","userId","email","ok","errorData","json","Error","message","err","useBuyStock","totalPrice","jsxRuntimeExports","jsxs","Fragment","children","jsx","className","onClick","XIcon","size","Math","max","MinusIcon","PlusIcon","_a","toFixed","disabled","AuthModal","isOpen","generateInitialData","timeframe","basePrice","dataPoints","periods","ALL","prices","steps","volatility","i","smoothedChange","random","push","generateRandomWalk","now","Date","date","setMinutes","getMinutes","setHours","getHours","setDate","getDate","unshift","toISOString","Number","StockChart","timeFrame","currentPrice","onTimeframeChange","stockData","setStockData","isLoading","setIsLoading","fetchHistoricalData","useCallback","cacheKey","cachedData","localStorage","getItem","cacheTimestamp","parse","data","setItem","toString","console","useEffect","updatePrice","length","lastPrice","trend","changePercent","newPrice","newDataPoint","prevData","slice","interval","setInterval","clearInterval","priceChange","CustomTooltip","active","payload","label","value","toLocaleTimeString","hour","minute","toLocaleDateString","month","day","ArrowUp","ArrowDown","abs","latestPrice","motion","div","animate","rotate","transition","duration","repeat","Infinity","ease","ResponsiveContainer","width","height","AreaChart","id","x1","y1","x2","y2","offset","stopColor","stopOpacity","CartesianGrid","strokeDasharray","stroke","vertical","XAxis","dataKey","tickFormatter","d","tick","fill","fontSize","axisLine","tickLine","YAxis","domain","tickCount","Tooltip","content","cursor","strokeWidth","Area","type","animationDuration","dot","activeDot","r","initial","opacity","y","FINNHUB_API_KEY","BASE_URL","CACHE_DURATION","finnhubApi","getQuote","getRecommendationTrends","StockDetail","onBuyClick","loading","setTimeFrame","currentTime","setCurrentTime","recommendationTrends","setRecommendationTrends","trendsLoading","setTrendsLoading","isModalOpen","setIsModalOpen","startTransition","trends","fetchRecommendationTrends","timer","Globe","closeModal","AnimatePresence","mode","exit","span","color","map","tf","index","period","style","strongBuy","buy","hold","sell","strongSell","scale","e","stopPropagation","X","ErrorBoundary","React","Component","constructor","props","super","this","state","hasError","getDerivedStateFromError","componentDidCatch","errorInfo","render","BuyStocks","stocks","setStocks","symbols","setLoading","searchTerm","setSearchTerm","selectedStock","setSelectedStock","selectedStockDetail","setSelectedStockDetail","stockDetailLoading","setStockDetailLoading","showSuccessPopup","setShowSuccessPopup","isBuyModalOpen","setIsBuyModalOpen","setEmail","location","useLocation","debouncedSearchTerm","delay","debouncedValue","setDebouncedValue","handler","setTimeout","clearTimeout","useDebounce","updatedStocks","Promise","all","quote","updatedStockData","c","dp","highPrice","h","lowPrice","l","o","pc","fetchAllStockData","fetchData","emailjs","init","updated","API_KEY","fetchAllStockData2","filteredStocks","useMemo","filter","toLowerCase","includes","Header","DollarSign","Search","placeholder","onChange","target","LoadingSpinner","List","itemCount","itemSize","isSelected","marginBottom","layout","detailedStock","handleStockSelect","Check","isNaN","templateParams","to_email","stock_symbol","stock_name","total_price","send","log","alert","handleTransactionSuccess","Footer"],"mappings":"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"}