{"version":3,"file":"BuyStocks-DYjvdait.js","sources":["../../../node_modules/@babel/runtime/helpers/esm/extends.js","../../../node_modules/@babel/runtime/helpers/esm/setPrototypeOf.js","../../../node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js","../../../src/components/pages/BuyStocks/BuyModal.tsx","../../../src/components/pages/BuyStocks/useBuyStock.ts","../../../src/components/pages/BuyStocks/StockChart.tsx","../../../src/components/pages/BuyStocks/StockDetail.tsx","../../../node_modules/memoize-one/dist/memoize-one.esm.js","../../../node_modules/react-window/dist/index.esm.js","../../../node_modules/@babel/runtime/helpers/esm/inheritsLoose.js","../../../src/components/pages/BuyStocks/BuyStocks.tsx"],"sourcesContent":["function _extends() {\n  return _extends = Object.assign ? Object.assign.bind() : function (n) {\n    for (var e = 1; e < arguments.length; e++) {\n      var t = arguments[e];\n      for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]);\n    }\n    return n;\n  }, _extends.apply(null, arguments);\n}\nexport { _extends as default };","function _setPrototypeOf(t, e) {\n  return _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function (t, e) {\n    return t.__proto__ = e, t;\n  }, _setPrototypeOf(t, e);\n}\nexport { _setPrototypeOf as default };","function _assertThisInitialized(e) {\n  if (void 0 === e) throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  return e;\n}\nexport { _assertThisInitialized as default };","import React, { useState } from 'react';\r\nimport { MinusIcon, PlusIcon, XIcon } from 'lucide-react';\r\nimport { useBuyStock } from './useBuyStock';\r\nimport useAuth from '../../hooks/useAuth';\r\nimport AuthModal from '../../Auth/AuthModal';\r\n\r\ninterface BuyModalProps {\r\n  stock?: {\r\n    symbol: string;\r\n    name: string;\r\n    price: number;\r\n  };\r\n  onClose: () => void;\r\n  onSuccess: (quantity: number, totalPrice: number) => void;\r\n}\r\n\r\nconst BuyModal: React.FC<BuyModalProps> = ({ stock, onClose, onSuccess }) => {\r\n  const [quantity, setQuantity] = useState(1);\r\n  const { isAuthenticated } = useAuth();\r\n  const [showAuthModal, setShowAuthModal] = useState(false);\r\n  const { isProcessing, error, handlePurchase } = useBuyStock({\r\n    onSuccess: () => {\r\n      if (!stock) return;\r\n      const totalPrice = stock.price * quantity;\r\n      onSuccess(quantity, totalPrice);\r\n      onClose();\r\n    },\r\n  });\r\n\r\n  const handleSubmit = async () => {\r\n    if (!isAuthenticated) {\r\n      setShowAuthModal(true);\r\n      return;\r\n    }\r\n    if (!stock) return;\r\n    await handlePurchase(stock, quantity);\r\n  };\r\n\r\n  if (!stock) {\r\n    return null;\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <div className=\"fixed inset-0 bg-black/80 backdrop-blur-xl z-50 flex items-center justify-center\">\r\n        <div className=\"bg-[#111111] backdrop-blur-xl rounded-2xl p-8 w-full max-w-md mx-4 border border-white/10\">\r\n          <div className=\"flex justify-between items-center mb-8\">\r\n            <div>\r\n              <h2 className=\"text-2xl font-medium text-white\">{stock.name}</h2>\r\n              <p className=\"text-white/60 text-sm\">{stock.symbol}</p>\r\n            </div>\r\n            <button\r\n              onClick={onClose}\r\n              className=\"text-white/60 hover:text-white transition-colors p-2 rounded-full hover:bg-white/5\"\r\n            >\r\n              <XIcon size={24} />\r\n            </button>\r\n          </div>\r\n\r\n          <div className=\"space-y-8\">\r\n            <div className=\"flex flex-col items-center space-y-4\">\r\n              <span className=\"text-sm text-white/60\">Quantity</span>\r\n              <div className=\"flex items-center space-x-6\">\r\n                <button\r\n                  onClick={() => setQuantity(Math.max(1, quantity - 1))}\r\n                  className=\"w-12 h-12 rounded-full bg-white/5 hover:bg-white/10 flex items-center justify-center text-white border border-white/10 transition-all\"\r\n                >\r\n                  <MinusIcon size={20} />\r\n                </button>\r\n                <span className=\"text-4xl font-light text-white w-16 text-center\">\r\n                  {quantity}\r\n                </span>\r\n                <button\r\n                  onClick={() => setQuantity(quantity + 1)}\r\n                  className=\"w-12 h-12 rounded-full bg-white/5 hover:bg-white/10 flex items-center justify-center text-white border border-white/10 transition-all\"\r\n                >\r\n                  <PlusIcon size={20} />\r\n                </button>\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"space-y-4 border-t border-white/10 pt-6\">\r\n              <div className=\"flex justify-between text-sm\">\r\n                <span className=\"text-white/60\">Price per share</span>\r\n                <span className=\"text-white font-medium\">₹{stock.price?.toFixed(2)}</span>\r\n              </div>\r\n              <div className=\"flex justify-between text-xl\">\r\n                <span className=\"text-white/80\">Total Amount</span>\r\n                <span className=\"text-white font-medium\">₹{(stock.price * quantity).toFixed(2)}</span>\r\n              </div>\r\n            </div>\r\n\r\n            {error && (\r\n              <div className=\"bg-red-500/10 border border-red-500/20 rounded-xl p-4 text-red-400 text-sm\">\r\n                {error}\r\n              </div>\r\n            )}\r\n\r\n            <div className=\"space-y-3 pt-4\">\r\n              <button\r\n                onClick={handleSubmit}\r\n                disabled={isProcessing}\r\n                className=\"w-full py-4 bg-white text-black rounded-full font-medium hover:bg-white/90 transition-all disabled:opacity-50 disabled:cursor-not-allowed text-sm uppercase tracking-wide\"\r\n              >\r\n                {isProcessing ? 'Processing...' : 'Buy Now'}\r\n              </button>\r\n              <button\r\n                onClick={onClose}\r\n                className=\"w-full py-4 text-white/60 font-medium hover:text-white transition-colors text-sm uppercase tracking-wide\"\r\n              >\r\n                Cancel\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <AuthModal\r\n        isOpen={showAuthModal}\r\n        onClose={() => setShowAuthModal(false)}\r\n        onSuccess={() => {\r\n          setShowAuthModal(false);\r\n          if (!stock) return;\r\n          handlePurchase(stock, quantity);\r\n        }}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default BuyModal;","import { useState } from 'react';\r\nimport  useAuth  from '../../hooks/useAuth';\r\n\r\ninterface UseBuyStockProps {\r\n  onSuccess: () => void;\r\n}\r\n\r\nexport function useBuyStock({ onSuccess }: UseBuyStockProps) {\r\n  const [isProcessing, setIsProcessing] = useState(false);\r\n  const [error, setError] = useState<string | null>(null);\r\n  const { token, user, isAuthenticated } = useAuth();\r\n\r\n  const handlePurchase = async (stock: { symbol: string; name: string; price: number }, quantity: number) => {\r\n    if (!isAuthenticated || !token) {\r\n      setError('Please login to continue');\r\n      return;\r\n    }\r\n\r\n    setIsProcessing(true);\r\n    setError(null);\r\n\r\n    try {\r\n      const response = await fetch('https://production-backend-final.onrender.com/transaction/buy', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          'Authorization': `Bearer ${token}`\r\n        },\r\n        body: JSON.stringify({\r\n          stockSymbol: stock.symbol,\r\n          stockName: stock.name,\r\n          quantity,\r\n          price: stock.price,\r\n          userId: user?.email\r\n        })\r\n      });\r\n\r\n      if (!response.ok) {\r\n        const errorData = await response.json();\r\n        throw new Error(errorData.message || 'Transaction failed');\r\n      }\r\n\r\n      onSuccess();\r\n    } catch (err) {\r\n      setError(err instanceof Error ? err.message : 'Transaction failed');\r\n    } finally {\r\n      setIsProcessing(false);\r\n    }\r\n  };\r\n\r\n  return {\r\n    isProcessing,\r\n    error,\r\n    handlePurchase\r\n  };\r\n}\r\n","import React, { useState, useEffect, useCallback } from 'react';\r\nimport { motion } from 'framer-motion';\r\nimport {\r\n  AreaChart, Area, XAxis, YAxis, Tooltip, ResponsiveContainer,\r\n  CartesianGrid\r\n} from 'recharts';\r\n\r\ninterface StockChartProps {\r\n  stock: {\r\n    symbol: string;\r\n    name: string;\r\n    price: number;\r\n    change: number;\r\n    changePercent: number;\r\n  };\r\n  timeFrame: string;\r\n  onTimeframeChange?: (timeframe: string) => void;\r\n}\r\n\r\ninterface DataPoint {\r\n  date: string;\r\n  price: number;\r\n}\r\n\r\nconst generateRandomWalk = (basePrice: number, steps: number, volatility: number = 0.002) => {\r\n  let prices = [basePrice];\r\n  for (let i = 1; i < steps; i++) {\r\n    const change = prices[i - 1] * volatility * (Math.random() - 0.5);\r\n    const smoothedChange = change * 0.5 + (prices[i - 1] - (i > 1 ? prices[i - 2] : basePrice)) * 0.3;\r\n    prices.push(prices[i - 1] + smoothedChange);\r\n  }\r\n  return prices;\r\n};\r\n\r\nconst generateInitialData = (timeframe: string, basePrice: number = 100) => {\r\n  const dataPoints: DataPoint[] = [];\r\n  const periods = {\r\n    '1D': 78,    // 5-minute intervals for a trading day\r\n    '1W': 168,   // Hourly for a week\r\n    '1M': 30,    // Daily for a month\r\n    '3M': 90,    // Daily for 3 months\r\n    '1Y': 252,   // Trading days in a year\r\n    'ALL': 1260  // 5 years of trading days\r\n  }[timeframe] || 78;\r\n\r\n  const prices = generateRandomWalk(basePrice, periods);\r\n  const now = new Date();\r\n\r\n  for (let i = 0; i < periods; i++) {\r\n    const date = new Date(now);\r\n    if (timeframe === '1D') {\r\n      date.setMinutes(date.getMinutes() - (i * 5));\r\n    } else if (timeframe === '1W') {\r\n      date.setHours(date.getHours() - i);\r\n    } else {\r\n      date.setDate(date.getDate() - i);\r\n    }\r\n\r\n    dataPoints.unshift({\r\n      date: date.toISOString(),\r\n      price: Number(prices[i].toFixed(2))\r\n    });\r\n  }\r\n\r\n  return dataPoints;\r\n};\r\n\r\nexport const StockChart: React.FC<StockChartProps> = ({ \r\n  stock, \r\n  timeFrame,\r\n  onTimeframeChange \r\n}) => {\r\n  const [stockData, setStockData] = useState<DataPoint[]>([]);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [hoveredData, setHoveredData] = useState<DataPoint | null>(null);\r\n  \r\n  const updatePrice = useCallback(() => {\r\n    if (stockData.length === 0) return;\r\n    \r\n    const lastPrice = stockData[stockData.length - 1].price;\r\n    const volatility = 0.0001;\r\n    const trend = stock.changePercent / 100;\r\n    const change = lastPrice * volatility * (Math.random() - 0.5 + trend * 0.3);\r\n    const newPrice = Number((lastPrice + change).toFixed(2));\r\n    \r\n    const newDataPoint = {\r\n      date: new Date().toISOString(),\r\n      price: newPrice\r\n    };\r\n\r\n    setStockData(prevData => {\r\n      const newData = [...prevData.slice(1), newDataPoint];\r\n      return newData;\r\n    });\r\n  }, [stockData, stock.changePercent]);\r\n\r\n  useEffect(() => {\r\n    setIsLoading(true);\r\n    \r\n    const loadDelay = setTimeout(() => {\r\n      const initialData = generateInitialData(timeFrame, stock.price);\r\n      setStockData(initialData);\r\n      setIsLoading(false);\r\n    }, 100);\r\n\r\n    return () => clearTimeout(loadDelay);\r\n  }, [timeFrame, stock.price]);\r\n\r\n  useEffect(() => {\r\n    if (isLoading || timeFrame !== '1D') return;\r\n\r\n    const interval = setInterval(() => {\r\n      updatePrice();\r\n    }, 5000 + Math.random() * 2000);\r\n\r\n    return () => clearInterval(interval);\r\n  }, [isLoading, updatePrice, timeFrame]);\r\n\r\n  const priceChange = stockData.length > 0 \r\n    ? stockData[stockData.length - 1].price - stockData[0].price \r\n    : 0;\r\n\r\n  const CustomTooltip = ({ active, payload, label }: any) => {\r\n    if (active && payload && payload.length) {\r\n      const date = new Date(label);\r\n      const price = payload[0].value;\r\n      \r\n      return (\r\n        <div className=\"bg-white/90 backdrop-blur-xl border border-gray-200 rounded-lg p-4 shadow-xl\">\r\n          <p className=\"text-gray-600 text-sm mb-1\">\r\n            {timeFrame === '1D' \r\n              ? date.toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' })\r\n              : date.toLocaleDateString([], { month: 'short', day: 'numeric' })}\r\n          </p>\r\n          <p className=\"text-black text-lg font-medium\">\r\n            ${price.toFixed(2)}\r\n          </p>\r\n        </div>\r\n      );\r\n    }\r\n    return null;\r\n  };\r\n\r\n  return (\r\n    <div className=\"h-full relative bg-white\">\r\n      {isLoading ? (\r\n        <div className=\"h-full flex items-center justify-center\">\r\n          <div className=\"flex flex-col items-center gap-3\">\r\n            <motion.div\r\n              animate={{ rotate: 360 }}\r\n              transition={{ duration: 1, repeat: Infinity, ease: \"linear\" }}\r\n              className=\"w-8 h-8 border-2 border-gray-200 border-t-gray-400 rounded-full\"\r\n            />\r\n            <span className=\"text-gray-400 text-sm font-medium\">Loading chart...</span>\r\n          </div>\r\n        </div>\r\n      ) : (\r\n        <ResponsiveContainer width=\"95%\" height=\"100%\">\r\n          <AreaChart \r\n            data={stockData}\r\n            onMouseMove={(data: any) => {\r\n              if (data.activePayload) {\r\n                setHoveredData(data.activePayload[0].payload);\r\n              }\r\n            }}\r\n            onMouseLeave={() => setHoveredData(null)}\r\n          >\r\n            <defs>\r\n              <linearGradient id=\"colorPrice\" x1=\"0\" y1=\"0\" x2=\"0\" y2=\"1\">\r\n                <stop \r\n                  offset=\"0%\" \r\n                  stopColor={priceChange >= 0 ? 'rgb(34, 197, 94)' : 'rgb(239, 68, 68)'} \r\n                  stopOpacity={0.2}\r\n                />\r\n                <stop \r\n                  offset=\"99%\" \r\n                  stopColor={priceChange >= 0 ? 'rgb(34, 197, 94)' : 'rgb(239, 68, 68)'} \r\n                  stopOpacity={0}\r\n                />\r\n              </linearGradient>\r\n            </defs>\r\n            \r\n            <CartesianGrid \r\n              strokeDasharray=\"3 3\" \r\n              stroke=\"rgba(0,0,0,0.05)\"\r\n              vertical={false}\r\n            />\r\n            \r\n            <XAxis\r\n              dataKey=\"date\"\r\n              tickFormatter={(date) => {\r\n                const d = new Date(date);\r\n                if (timeFrame === '1D') {\r\n                  return d.toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' });\r\n                }\r\n                return d.toLocaleDateString([], { day: 'numeric', month: 'short' });\r\n              }}\r\n              stroke=\"rgba(0,0,0,0.1)\"\r\n              tick={{ fill: 'rgba(0,0,0,0.6)', fontSize: 11 }}\r\n              axisLine={{ stroke: 'rgba(0,0,0,0.1)' }}\r\n              tickLine={{ stroke: 'rgba(0,0,0,0.1)' }}\r\n            />\r\n            \r\n            <YAxis\r\n              domain={['auto', 'auto']}\r\n              stroke=\"rgba(0,0,0,0.1)\"\r\n              tick={{ fill: 'rgba(0,0,0,0.6)', fontSize: 11 }}\r\n              tickFormatter={(value) => `$${value.toFixed(2)}`}\r\n              axisLine={{ stroke: 'rgba(0,0,0,0.1)' }}\r\n              tickLine={{ stroke: 'rgba(0,0,0,0.1)' }}\r\n              tickCount={6}\r\n              width={65}\r\n            />\r\n            \r\n            <Tooltip\r\n              content={<CustomTooltip />}\r\n              cursor={{\r\n                stroke: 'rgba(0,0,0,0.1)',\r\n                strokeWidth: 1,\r\n                strokeDasharray: '4 4'\r\n              }}\r\n            />\r\n            \r\n            <Area\r\n              type=\"monotone\"\r\n              dataKey=\"price\"\r\n              stroke={priceChange >= 0 ? 'rgb(34, 197, 94)' : 'rgb(239, 68, 68)'}\r\n              strokeWidth={1.5}\r\n              fill=\"url(#colorPrice)\"\r\n              animationDuration={750}\r\n              dot={false}\r\n              activeDot={{\r\n                r: 4,\r\n                fill: priceChange >= 0 ? 'rgb(34, 197, 94)' : 'rgb(239, 68, 68)',\r\n                stroke: '#fff',\r\n                strokeWidth: 1\r\n              }}\r\n            />\r\n          </AreaChart>\r\n        </ResponsiveContainer>\r\n      )}\r\n\r\n      {/* Floating Price Display */}\r\n      {hoveredData && (\r\n        <motion.div\r\n          initial={{ opacity: 0, y: 10 }}\r\n          animate={{ opacity: 1, y: 0 }}\r\n          className=\"absolute top-4 right-4 bg-white/90 backdrop-blur-xl border border-gray-200 rounded-lg p-4\"\r\n        >\r\n          <p className=\"text-gray-600 text-sm\">Current Price</p>\r\n          <p className=\"text-black text-2xl font-medium\">\r\n            ${hoveredData.price.toFixed(2)}\r\n          </p>\r\n        </motion.div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default StockChart;","import React, { useState, useEffect } from 'react';\r\nimport { Stock } from './stockApi';\r\nimport { ArrowUp, ArrowDown, Globe, X } from 'lucide-react';\r\nimport { motion, AnimatePresence } from 'framer-motion';\r\nimport { StockChart } from './StockChart';\r\n\r\nconst API_KEY = \"ctre6q9r01qhb16mmh70ctre6q9r01qhb16mmh7g\"; // Replace with your API key\r\n\r\ninterface StockDetailProps {\r\n  stock: Stock | null;\r\n  onBuyClick: (stock: Stock) => void;\r\n  loading?: boolean;\r\n}\r\n\r\nexport const StockDetail: React.FC<StockDetailProps> = ({ stock, onBuyClick, loading }) => {\r\n  const [timeFrame, setTimeFrame] = useState<string>('1D');\r\n  const [currentTime, setCurrentTime] = useState(new Date());\r\n  const [recommendationTrends, setRecommendationTrends] = useState<any[]>([]);\r\n  const [trendsLoading, setTrendsLoading] = useState<boolean>(false);\r\n  const [isModalOpen, setIsModalOpen] = useState<boolean>(false); // State to control modal visibility\r\n\r\n  // Fetch recommendation trends when stock changes\r\n  useEffect(() => {\r\n    const fetchRecommendationTrends = async () => {\r\n      if (stock?.symbol) {\r\n        setTrendsLoading(true);\r\n        try {\r\n          const response = await fetch(\r\n            `https://finnhub.io/api/v1/stock/recommendation?symbol=${stock.symbol}&token=${API_KEY}`\r\n          );\r\n          const data = await response.json();\r\n          setRecommendationTrends(data);\r\n        } catch (error) {\r\n          console.error('Failed to fetch recommendation trends:', error);\r\n        } finally {\r\n          setTrendsLoading(false);\r\n        }\r\n      }\r\n    };\r\n\r\n    fetchRecommendationTrends();\r\n  }, [stock?.symbol]);\r\n\r\n  // Update current time every second\r\n  useEffect(() => {\r\n    const timer = setInterval(() => {\r\n      setCurrentTime(new Date());\r\n    }, 1000);\r\n    return () => clearInterval(timer);\r\n  }, []);\r\n\r\n  // If stock is not defined, return null or a fallback UI\r\n  if (loading || !stock) {\r\n    return (\r\n      <div className=\"flex items-center justify-center h-full text-gray-600\">\r\n        <div className=\"text-center\">\r\n          <Globe size={48} className=\"mx-auto mb-4 opacity-60\" />\r\n          <p className=\"text-xl\">Select a stock to view details</p>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  const timeFrames = ['1D', '1W', '1M', '3M', '1Y', 'ALL'];\r\n\r\n  // Color scheme for recommendation trends\r\n  const trendColors = {\r\n    strongBuy: '#16a34a', // Bright green\r\n    buy: '#4ade80',      // Light green\r\n    hold: '#facc15',     // Yellow\r\n    sell: '#f87171',     // Light red\r\n    strongSell: '#dc2626', // Bright red\r\n  };\r\n\r\n  // Function to open the modal\r\n  const openModal = () => {\r\n    setIsModalOpen(true);\r\n  };\r\n\r\n  // Function to close the modal\r\n  const closeModal = () => {\r\n    setIsModalOpen(false);\r\n  };\r\n\r\n  return (\r\n    <AnimatePresence mode=\"wait\">\r\n      <motion.div\r\n        initial={{ opacity: 0, y: 20 }}\r\n        animate={{ opacity: 1, y: 0 }}\r\n        exit={{ opacity: 0, y: -20 }}\r\n        className=\"flex -mt-6 flex-col h-full bg-white backdrop-blur-xl p-4 lg:p-4\"\r\n      >\r\n        {/* Compact Header */}\r\n        <div className=\"flex items-center justify-between mb-2\">\r\n          <div>\r\n            <h1 className=\"text-2xl font-semibold text-black\">{stock.name}</h1>\r\n            <div className=\"flex items-center gap-2 text-sm\">\r\n              <span className=\"text-gray-600\">{stock.symbol}</span>\r\n              <span className=\"text-gray-600\">•</span>\r\n              <span className=\"text-gray-600\">{currentTime.toLocaleTimeString()}</span>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        {/* Compact Price Section */}\r\n        <div className=\"flex items-center gap-4 mb-4\">\r\n          <span className=\"text-4xl font-medium text-black\">\r\n            ₹{stock.currentPrice?.toFixed(2) ?? 'N/A'} {/* Use the currentPrice from the selected stock */}\r\n          </span>\r\n          <motion.span\r\n            animate={{\r\n              color: (stock.change || 0) >= 0 ? \"rgb(34, 197, 94)\" : \"rgb(239, 68, 68)\"\r\n            }}\r\n            className=\"flex items-center text-lg\"\r\n          >\r\n            {(stock.change || 0) >= 0 ? <ArrowUp size={20} /> : <ArrowDown size={20} />}\r\n            {Math.abs(stock.change || 0).toFixed(2)}%\r\n          </motion.span>\r\n        </div>\r\n\r\n        {/* Compact Time Frame Selector */}\r\n        <div className=\"flex gap-1 mb-4 overflow-x-auto scrollbar-hide\">\r\n          {timeFrames.map((tf) => (\r\n            <button\r\n              key={tf}\r\n              onClick={() => setTimeFrame(tf)}\r\n              className={`px-3 py-1 rounded-full text-xs font-medium transition-all whitespace-nowrap ${\r\n                timeFrame === tf\r\n                  ? 'bg-black text-white'\r\n                  : 'bg-gray-100 text-gray-600 hover:bg-gray-200'\r\n              }`}\r\n            >\r\n              {tf}\r\n            </button>\r\n          ))}\r\n        </div>\r\n\r\n        {/* Chart Container */}\r\n        <div className=\"flex-1 bg-gray-100 rounded-xl mt-12 backdrop-blur-sm\">\r\n          <div className=\"h-full\">\r\n            <StockChart stock={stock} timeFrame={timeFrame} />\r\n          </div>\r\n        </div>\r\n\r\n        {/* Recommendation Trends Section */}\r\n        <div\r\n          className=\"rounded-xl p-4 backdrop-blur-sm cursor-pointer\"\r\n          onClick={openModal} // Open modal on click\r\n        >\r\n          <h3 className=\"text-lg font-semibold text-black mb-4\">Recommendation Trends</h3>\r\n          {trendsLoading ? (\r\n            <div className=\"flex justify-center items-center py-4\">\r\n              <span className=\"text-gray-600\">Loading trends...</span>\r\n            </div>\r\n          ) : recommendationTrends.length > 0 ? (\r\n            <div className=\"overflow-x-auto\">\r\n              <table className=\"min-w-full bg-white rounded-xl shadow-sm\">\r\n                <thead>\r\n                  <tr>\r\n                    <th className=\"px-4 py-2 text-xs text-gray-600 text-left\">Period</th>\r\n                    <th className=\"px-4 py-2 text-xs text-gray-600 text-center\">Strong Buy</th>\r\n                    <th className=\"px-4 py-2 text-xs text-gray-600 text-center\">Buy</th>\r\n                    <th className=\"px-4 py-2 text-xs text-gray-600 text-center\">Hold</th>\r\n                    <th className=\"px-4 py-2 text-xs text-gray-600 text-center\">Sell</th>\r\n                    <th className=\"px-4 py-2 text-xs text-gray-600 text-center\">Strong Sell</th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  {recommendationTrends.slice(0, 1).map((trend, index) => ( // Show only the first row in the preview\r\n                    <tr key={index} className=\"border-t border-gray-200\">\r\n                      <td className=\"px-4 py-3 text-sm text-gray-600\">{trend.period}</td>\r\n                      <td className=\"px-4 py-3 text-lg font-medium text-center\" style={{ color: trendColors.strongBuy }}>\r\n                        {trend.strongBuy}\r\n                      </td>\r\n                      <td className=\"px-4 py-3 text-lg font-medium text-center\" style={{ color: trendColors.buy }}>\r\n                        {trend.buy}\r\n                      </td>\r\n                      <td className=\"px-4 py-3 text-lg font-medium text-center\" style={{ color: trendColors.hold }}>\r\n                        {trend.hold}\r\n                      </td>\r\n                      <td className=\"px-4 py-3 text-lg font-medium text-center\" style={{ color: trendColors.sell }}>\r\n                        {trend.sell}\r\n                      </td>\r\n                      <td className=\"px-4 py-3 text-lg font-medium text-center\" style={{ color: trendColors.strongSell }}>\r\n                        {trend.strongSell}\r\n                      </td>\r\n                    </tr>\r\n                  ))}\r\n                </tbody>\r\n              </table>\r\n            </div>\r\n          ) : (\r\n            <div className=\"flex justify-center items-center py-4\">\r\n              <span className=\"text-gray-600\">No recommendation trends available.</span>\r\n            </div>\r\n          )}\r\n        </div>\r\n\r\n        {/* Modal for Recommendation Trends */}\r\n        <AnimatePresence>\r\n          {isModalOpen && (\r\n            <motion.div\r\n              initial={{ opacity: 0 }}\r\n              animate={{ opacity: 1 }}\r\n              exit={{ opacity: 0 }}\r\n              className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center p-4 z-50\"\r\n              onClick={closeModal} // Close modal when clicking outside\r\n            >\r\n              <motion.div\r\n                initial={{ scale: 0.9, y: 20 }}\r\n                animate={{ scale: 1, y: 0 }}\r\n                exit={{ scale: 0.9, y: -20 }}\r\n                className=\"bg-white rounded-xl w-full max-w-2xl p-6 relative\"\r\n                onClick={(e) => e.stopPropagation()} // Prevent clicks inside the modal from closing it\r\n              >\r\n                <button\r\n                  onClick={closeModal}\r\n                  className=\"absolute top-4 right-4 p-2 text-gray-600 hover:text-black\"\r\n                >\r\n                  <X size={20} />\r\n                </button>\r\n                <h3 className=\"text-lg font-semibold text-black mb-4\">Recommendation Trends</h3>\r\n                <div className=\"overflow-x-auto\">\r\n                  <table className=\"min-w-full bg-white rounded-xl shadow-sm\">\r\n                    <thead>\r\n                      <tr>\r\n                        <th className=\"px-4 py-2 text-xs text-gray-600 text-left\">Period</th>\r\n                        <th className=\"px-4 py-2 text-xs text-gray-600 text-center\">Strong Buy</th>\r\n                        <th className=\"px-4 py-2 text-xs text-gray-600 text-center\">Buy</th>\r\n                        <th className=\"px-4 py-2 text-xs text-gray-600 text-center\">Hold</th>\r\n                        <th className=\"px-4 py-2 text-xs text-gray-600 text-center\">Sell</th>\r\n                        <th className=\"px-4 py-2 text-xs text-gray-600 text-center\">Strong Sell</th>\r\n                      </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                      {recommendationTrends.map((trend, index) => (\r\n                        <tr key={index} className=\"border-t border-gray-200\">\r\n                          <td className=\"px-4 py-3 text-sm text-gray-600\">{trend.period}</td>\r\n                          <td className=\"px-4 py-3 text-lg font-medium text-center\" style={{ color: trendColors.strongBuy }}>\r\n                            {trend.strongBuy}\r\n                          </td>\r\n                          <td className=\"px-4 py-3 text-lg font-medium text-center\" style={{ color: trendColors.buy }}>\r\n                            {trend.buy}\r\n                          </td>\r\n                          <td className=\"px-4 py-3 text-lg font-medium text-center\" style={{ color: trendColors.hold }}>\r\n                            {trend.hold}\r\n                          </td>\r\n                          <td className=\"px-4 py-3 text-lg font-medium text-center\" style={{ color: trendColors.sell }}>\r\n                            {trend.sell}\r\n                          </td>\r\n                          <td className=\"px-4 py-3 text-lg font-medium text-center\" style={{ color: trendColors.strongSell }}>\r\n                            {trend.strongSell}\r\n                          </td>\r\n                        </tr>\r\n                      ))}\r\n                    </tbody>\r\n                  </table>\r\n                </div>\r\n              </motion.div>\r\n            </motion.div>\r\n          )}\r\n        </AnimatePresence>\r\n      </motion.div>\r\n    </AnimatePresence>\r\n  );\r\n};","var safeIsNaN = Number.isNaN ||\n    function ponyfill(value) {\n        return typeof value === 'number' && value !== value;\n    };\nfunction isEqual(first, second) {\n    if (first === second) {\n        return true;\n    }\n    if (safeIsNaN(first) && safeIsNaN(second)) {\n        return true;\n    }\n    return false;\n}\nfunction areInputsEqual(newInputs, lastInputs) {\n    if (newInputs.length !== lastInputs.length) {\n        return false;\n    }\n    for (var i = 0; i < newInputs.length; i++) {\n        if (!isEqual(newInputs[i], lastInputs[i])) {\n            return false;\n        }\n    }\n    return true;\n}\n\nfunction memoizeOne(resultFn, isEqual) {\n    if (isEqual === void 0) { isEqual = areInputsEqual; }\n    var lastThis;\n    var lastArgs = [];\n    var lastResult;\n    var calledOnce = false;\n    function memoized() {\n        var newArgs = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            newArgs[_i] = arguments[_i];\n        }\n        if (calledOnce && lastThis === this && isEqual(newArgs, lastArgs)) {\n            return lastResult;\n        }\n        lastResult = resultFn.apply(this, newArgs);\n        calledOnce = true;\n        lastThis = this;\n        lastArgs = newArgs;\n        return lastResult;\n    }\n    return memoized;\n}\n\nexport default memoizeOne;\n","import _extends from '@babel/runtime/helpers/esm/extends';\nimport _assertThisInitialized from '@babel/runtime/helpers/esm/assertThisInitialized';\nimport _inheritsLoose from '@babel/runtime/helpers/esm/inheritsLoose';\nimport memoizeOne from 'memoize-one';\nimport { createElement, PureComponent } from 'react';\nimport _objectWithoutPropertiesLoose from '@babel/runtime/helpers/esm/objectWithoutPropertiesLoose';\n\n// Animation frame based implementation of setTimeout.\n// Inspired by Joe Lambert, https://gist.github.com/joelambert/1002116#file-requesttimeout-js\nvar hasNativePerformanceNow = typeof performance === 'object' && typeof performance.now === 'function';\nvar now = hasNativePerformanceNow ? function () {\n  return performance.now();\n} : function () {\n  return Date.now();\n};\nfunction cancelTimeout(timeoutID) {\n  cancelAnimationFrame(timeoutID.id);\n}\nfunction requestTimeout(callback, delay) {\n  var start = now();\n\n  function tick() {\n    if (now() - start >= delay) {\n      callback.call(null);\n    } else {\n      timeoutID.id = requestAnimationFrame(tick);\n    }\n  }\n\n  var timeoutID = {\n    id: requestAnimationFrame(tick)\n  };\n  return timeoutID;\n}\n\nvar size = -1; // This utility copied from \"dom-helpers\" package.\n\nfunction getScrollbarSize(recalculate) {\n  if (recalculate === void 0) {\n    recalculate = false;\n  }\n\n  if (size === -1 || recalculate) {\n    var div = document.createElement('div');\n    var style = div.style;\n    style.width = '50px';\n    style.height = '50px';\n    style.overflow = 'scroll';\n    document.body.appendChild(div);\n    size = div.offsetWidth - div.clientWidth;\n    document.body.removeChild(div);\n  }\n\n  return size;\n}\nvar cachedRTLResult = null; // TRICKY According to the spec, scrollLeft should be negative for RTL aligned elements.\n// Chrome does not seem to adhere; its scrollLeft values are positive (measured relative to the left).\n// Safari's elastic bounce makes detecting this even more complicated wrt potential false positives.\n// The safest way to check this is to intentionally set a negative offset,\n// and then verify that the subsequent \"scroll\" event matches the negative offset.\n// If it does not match, then we can assume a non-standard RTL scroll implementation.\n\nfunction getRTLOffsetType(recalculate) {\n  if (recalculate === void 0) {\n    recalculate = false;\n  }\n\n  if (cachedRTLResult === null || recalculate) {\n    var outerDiv = document.createElement('div');\n    var outerStyle = outerDiv.style;\n    outerStyle.width = '50px';\n    outerStyle.height = '50px';\n    outerStyle.overflow = 'scroll';\n    outerStyle.direction = 'rtl';\n    var innerDiv = document.createElement('div');\n    var innerStyle = innerDiv.style;\n    innerStyle.width = '100px';\n    innerStyle.height = '100px';\n    outerDiv.appendChild(innerDiv);\n    document.body.appendChild(outerDiv);\n\n    if (outerDiv.scrollLeft > 0) {\n      cachedRTLResult = 'positive-descending';\n    } else {\n      outerDiv.scrollLeft = 1;\n\n      if (outerDiv.scrollLeft === 0) {\n        cachedRTLResult = 'negative';\n      } else {\n        cachedRTLResult = 'positive-ascending';\n      }\n    }\n\n    document.body.removeChild(outerDiv);\n    return cachedRTLResult;\n  }\n\n  return cachedRTLResult;\n}\n\nvar IS_SCROLLING_DEBOUNCE_INTERVAL = 150;\n\nvar defaultItemKey = function defaultItemKey(_ref) {\n  var columnIndex = _ref.columnIndex,\n      data = _ref.data,\n      rowIndex = _ref.rowIndex;\n  return rowIndex + \":\" + columnIndex;\n}; // In DEV mode, this Set helps us only log a warning once per component instance.\n// This avoids spamming the console every time a render happens.\n\n\nvar devWarningsOverscanCount = null;\nvar devWarningsOverscanRowsColumnsCount = null;\nvar devWarningsTagName = null;\n\nif (process.env.NODE_ENV !== 'production') {\n  if (typeof window !== 'undefined' && typeof window.WeakSet !== 'undefined') {\n    devWarningsOverscanCount = /*#__PURE__*/new WeakSet();\n    devWarningsOverscanRowsColumnsCount = /*#__PURE__*/new WeakSet();\n    devWarningsTagName = /*#__PURE__*/new WeakSet();\n  }\n}\n\nfunction createGridComponent(_ref2) {\n  var _class;\n\n  var getColumnOffset = _ref2.getColumnOffset,\n      getColumnStartIndexForOffset = _ref2.getColumnStartIndexForOffset,\n      getColumnStopIndexForStartIndex = _ref2.getColumnStopIndexForStartIndex,\n      getColumnWidth = _ref2.getColumnWidth,\n      getEstimatedTotalHeight = _ref2.getEstimatedTotalHeight,\n      getEstimatedTotalWidth = _ref2.getEstimatedTotalWidth,\n      getOffsetForColumnAndAlignment = _ref2.getOffsetForColumnAndAlignment,\n      getOffsetForRowAndAlignment = _ref2.getOffsetForRowAndAlignment,\n      getRowHeight = _ref2.getRowHeight,\n      getRowOffset = _ref2.getRowOffset,\n      getRowStartIndexForOffset = _ref2.getRowStartIndexForOffset,\n      getRowStopIndexForStartIndex = _ref2.getRowStopIndexForStartIndex,\n      initInstanceProps = _ref2.initInstanceProps,\n      shouldResetStyleCacheOnItemSizeChange = _ref2.shouldResetStyleCacheOnItemSizeChange,\n      validateProps = _ref2.validateProps;\n  return _class = /*#__PURE__*/function (_PureComponent) {\n    _inheritsLoose(Grid, _PureComponent);\n\n    // Always use explicit constructor for React components.\n    // It produces less code after transpilation. (#26)\n    // eslint-disable-next-line no-useless-constructor\n    function Grid(props) {\n      var _this;\n\n      _this = _PureComponent.call(this, props) || this;\n      _this._instanceProps = initInstanceProps(_this.props, _assertThisInitialized(_this));\n      _this._resetIsScrollingTimeoutId = null;\n      _this._outerRef = void 0;\n      _this.state = {\n        instance: _assertThisInitialized(_this),\n        isScrolling: false,\n        horizontalScrollDirection: 'forward',\n        scrollLeft: typeof _this.props.initialScrollLeft === 'number' ? _this.props.initialScrollLeft : 0,\n        scrollTop: typeof _this.props.initialScrollTop === 'number' ? _this.props.initialScrollTop : 0,\n        scrollUpdateWasRequested: false,\n        verticalScrollDirection: 'forward'\n      };\n      _this._callOnItemsRendered = void 0;\n      _this._callOnItemsRendered = memoizeOne(function (overscanColumnStartIndex, overscanColumnStopIndex, overscanRowStartIndex, overscanRowStopIndex, visibleColumnStartIndex, visibleColumnStopIndex, visibleRowStartIndex, visibleRowStopIndex) {\n        return _this.props.onItemsRendered({\n          overscanColumnStartIndex: overscanColumnStartIndex,\n          overscanColumnStopIndex: overscanColumnStopIndex,\n          overscanRowStartIndex: overscanRowStartIndex,\n          overscanRowStopIndex: overscanRowStopIndex,\n          visibleColumnStartIndex: visibleColumnStartIndex,\n          visibleColumnStopIndex: visibleColumnStopIndex,\n          visibleRowStartIndex: visibleRowStartIndex,\n          visibleRowStopIndex: visibleRowStopIndex\n        });\n      });\n      _this._callOnScroll = void 0;\n      _this._callOnScroll = memoizeOne(function (scrollLeft, scrollTop, horizontalScrollDirection, verticalScrollDirection, scrollUpdateWasRequested) {\n        return _this.props.onScroll({\n          horizontalScrollDirection: horizontalScrollDirection,\n          scrollLeft: scrollLeft,\n          scrollTop: scrollTop,\n          verticalScrollDirection: verticalScrollDirection,\n          scrollUpdateWasRequested: scrollUpdateWasRequested\n        });\n      });\n      _this._getItemStyle = void 0;\n\n      _this._getItemStyle = function (rowIndex, columnIndex) {\n        var _this$props = _this.props,\n            columnWidth = _this$props.columnWidth,\n            direction = _this$props.direction,\n            rowHeight = _this$props.rowHeight;\n\n        var itemStyleCache = _this._getItemStyleCache(shouldResetStyleCacheOnItemSizeChange && columnWidth, shouldResetStyleCacheOnItemSizeChange && direction, shouldResetStyleCacheOnItemSizeChange && rowHeight);\n\n        var key = rowIndex + \":\" + columnIndex;\n        var style;\n\n        if (itemStyleCache.hasOwnProperty(key)) {\n          style = itemStyleCache[key];\n        } else {\n          var _offset = getColumnOffset(_this.props, columnIndex, _this._instanceProps);\n\n          var isRtl = direction === 'rtl';\n          itemStyleCache[key] = style = {\n            position: 'absolute',\n            left: isRtl ? undefined : _offset,\n            right: isRtl ? _offset : undefined,\n            top: getRowOffset(_this.props, rowIndex, _this._instanceProps),\n            height: getRowHeight(_this.props, rowIndex, _this._instanceProps),\n            width: getColumnWidth(_this.props, columnIndex, _this._instanceProps)\n          };\n        }\n\n        return style;\n      };\n\n      _this._getItemStyleCache = void 0;\n      _this._getItemStyleCache = memoizeOne(function (_, __, ___) {\n        return {};\n      });\n\n      _this._onScroll = function (event) {\n        var _event$currentTarget = event.currentTarget,\n            clientHeight = _event$currentTarget.clientHeight,\n            clientWidth = _event$currentTarget.clientWidth,\n            scrollLeft = _event$currentTarget.scrollLeft,\n            scrollTop = _event$currentTarget.scrollTop,\n            scrollHeight = _event$currentTarget.scrollHeight,\n            scrollWidth = _event$currentTarget.scrollWidth;\n\n        _this.setState(function (prevState) {\n          if (prevState.scrollLeft === scrollLeft && prevState.scrollTop === scrollTop) {\n            // Scroll position may have been updated by cDM/cDU,\n            // In which case we don't need to trigger another render,\n            // And we don't want to update state.isScrolling.\n            return null;\n          }\n\n          var direction = _this.props.direction; // TRICKY According to the spec, scrollLeft should be negative for RTL aligned elements.\n          // This is not the case for all browsers though (e.g. Chrome reports values as positive, measured relative to the left).\n          // It's also easier for this component if we convert offsets to the same format as they would be in for ltr.\n          // So the simplest solution is to determine which browser behavior we're dealing with, and convert based on it.\n\n          var calculatedScrollLeft = scrollLeft;\n\n          if (direction === 'rtl') {\n            switch (getRTLOffsetType()) {\n              case 'negative':\n                calculatedScrollLeft = -scrollLeft;\n                break;\n\n              case 'positive-descending':\n                calculatedScrollLeft = scrollWidth - clientWidth - scrollLeft;\n                break;\n            }\n          } // Prevent Safari's elastic scrolling from causing visual shaking when scrolling past bounds.\n\n\n          calculatedScrollLeft = Math.max(0, Math.min(calculatedScrollLeft, scrollWidth - clientWidth));\n          var calculatedScrollTop = Math.max(0, Math.min(scrollTop, scrollHeight - clientHeight));\n          return {\n            isScrolling: true,\n            horizontalScrollDirection: prevState.scrollLeft < scrollLeft ? 'forward' : 'backward',\n            scrollLeft: calculatedScrollLeft,\n            scrollTop: calculatedScrollTop,\n            verticalScrollDirection: prevState.scrollTop < scrollTop ? 'forward' : 'backward',\n            scrollUpdateWasRequested: false\n          };\n        }, _this._resetIsScrollingDebounced);\n      };\n\n      _this._outerRefSetter = function (ref) {\n        var outerRef = _this.props.outerRef;\n        _this._outerRef = ref;\n\n        if (typeof outerRef === 'function') {\n          outerRef(ref);\n        } else if (outerRef != null && typeof outerRef === 'object' && outerRef.hasOwnProperty('current')) {\n          outerRef.current = ref;\n        }\n      };\n\n      _this._resetIsScrollingDebounced = function () {\n        if (_this._resetIsScrollingTimeoutId !== null) {\n          cancelTimeout(_this._resetIsScrollingTimeoutId);\n        }\n\n        _this._resetIsScrollingTimeoutId = requestTimeout(_this._resetIsScrolling, IS_SCROLLING_DEBOUNCE_INTERVAL);\n      };\n\n      _this._resetIsScrolling = function () {\n        _this._resetIsScrollingTimeoutId = null;\n\n        _this.setState({\n          isScrolling: false\n        }, function () {\n          // Clear style cache after state update has been committed.\n          // This way we don't break pure sCU for items that don't use isScrolling param.\n          _this._getItemStyleCache(-1);\n        });\n      };\n\n      return _this;\n    }\n\n    Grid.getDerivedStateFromProps = function getDerivedStateFromProps(nextProps, prevState) {\n      validateSharedProps(nextProps, prevState);\n      validateProps(nextProps);\n      return null;\n    };\n\n    var _proto = Grid.prototype;\n\n    _proto.scrollTo = function scrollTo(_ref3) {\n      var scrollLeft = _ref3.scrollLeft,\n          scrollTop = _ref3.scrollTop;\n\n      if (scrollLeft !== undefined) {\n        scrollLeft = Math.max(0, scrollLeft);\n      }\n\n      if (scrollTop !== undefined) {\n        scrollTop = Math.max(0, scrollTop);\n      }\n\n      this.setState(function (prevState) {\n        if (scrollLeft === undefined) {\n          scrollLeft = prevState.scrollLeft;\n        }\n\n        if (scrollTop === undefined) {\n          scrollTop = prevState.scrollTop;\n        }\n\n        if (prevState.scrollLeft === scrollLeft && prevState.scrollTop === scrollTop) {\n          return null;\n        }\n\n        return {\n          horizontalScrollDirection: prevState.scrollLeft < scrollLeft ? 'forward' : 'backward',\n          scrollLeft: scrollLeft,\n          scrollTop: scrollTop,\n          scrollUpdateWasRequested: true,\n          verticalScrollDirection: prevState.scrollTop < scrollTop ? 'forward' : 'backward'\n        };\n      }, this._resetIsScrollingDebounced);\n    };\n\n    _proto.scrollToItem = function scrollToItem(_ref4) {\n      var _ref4$align = _ref4.align,\n          align = _ref4$align === void 0 ? 'auto' : _ref4$align,\n          columnIndex = _ref4.columnIndex,\n          rowIndex = _ref4.rowIndex;\n      var _this$props2 = this.props,\n          columnCount = _this$props2.columnCount,\n          height = _this$props2.height,\n          rowCount = _this$props2.rowCount,\n          width = _this$props2.width;\n      var _this$state = this.state,\n          scrollLeft = _this$state.scrollLeft,\n          scrollTop = _this$state.scrollTop;\n      var scrollbarSize = getScrollbarSize();\n\n      if (columnIndex !== undefined) {\n        columnIndex = Math.max(0, Math.min(columnIndex, columnCount - 1));\n      }\n\n      if (rowIndex !== undefined) {\n        rowIndex = Math.max(0, Math.min(rowIndex, rowCount - 1));\n      }\n\n      var estimatedTotalHeight = getEstimatedTotalHeight(this.props, this._instanceProps);\n      var estimatedTotalWidth = getEstimatedTotalWidth(this.props, this._instanceProps); // The scrollbar size should be considered when scrolling an item into view,\n      // to ensure it's fully visible.\n      // But we only need to account for its size when it's actually visible.\n\n      var horizontalScrollbarSize = estimatedTotalWidth > width ? scrollbarSize : 0;\n      var verticalScrollbarSize = estimatedTotalHeight > height ? scrollbarSize : 0;\n      this.scrollTo({\n        scrollLeft: columnIndex !== undefined ? getOffsetForColumnAndAlignment(this.props, columnIndex, align, scrollLeft, this._instanceProps, verticalScrollbarSize) : scrollLeft,\n        scrollTop: rowIndex !== undefined ? getOffsetForRowAndAlignment(this.props, rowIndex, align, scrollTop, this._instanceProps, horizontalScrollbarSize) : scrollTop\n      });\n    };\n\n    _proto.componentDidMount = function componentDidMount() {\n      var _this$props3 = this.props,\n          initialScrollLeft = _this$props3.initialScrollLeft,\n          initialScrollTop = _this$props3.initialScrollTop;\n\n      if (this._outerRef != null) {\n        var outerRef = this._outerRef;\n\n        if (typeof initialScrollLeft === 'number') {\n          outerRef.scrollLeft = initialScrollLeft;\n        }\n\n        if (typeof initialScrollTop === 'number') {\n          outerRef.scrollTop = initialScrollTop;\n        }\n      }\n\n      this._callPropsCallbacks();\n    };\n\n    _proto.componentDidUpdate = function componentDidUpdate() {\n      var direction = this.props.direction;\n      var _this$state2 = this.state,\n          scrollLeft = _this$state2.scrollLeft,\n          scrollTop = _this$state2.scrollTop,\n          scrollUpdateWasRequested = _this$state2.scrollUpdateWasRequested;\n\n      if (scrollUpdateWasRequested && this._outerRef != null) {\n        // TRICKY According to the spec, scrollLeft should be negative for RTL aligned elements.\n        // This is not the case for all browsers though (e.g. Chrome reports values as positive, measured relative to the left).\n        // So we need to determine which browser behavior we're dealing with, and mimic it.\n        var outerRef = this._outerRef;\n\n        if (direction === 'rtl') {\n          switch (getRTLOffsetType()) {\n            case 'negative':\n              outerRef.scrollLeft = -scrollLeft;\n              break;\n\n            case 'positive-ascending':\n              outerRef.scrollLeft = scrollLeft;\n              break;\n\n            default:\n              var clientWidth = outerRef.clientWidth,\n                  scrollWidth = outerRef.scrollWidth;\n              outerRef.scrollLeft = scrollWidth - clientWidth - scrollLeft;\n              break;\n          }\n        } else {\n          outerRef.scrollLeft = Math.max(0, scrollLeft);\n        }\n\n        outerRef.scrollTop = Math.max(0, scrollTop);\n      }\n\n      this._callPropsCallbacks();\n    };\n\n    _proto.componentWillUnmount = function componentWillUnmount() {\n      if (this._resetIsScrollingTimeoutId !== null) {\n        cancelTimeout(this._resetIsScrollingTimeoutId);\n      }\n    };\n\n    _proto.render = function render() {\n      var _this$props4 = this.props,\n          children = _this$props4.children,\n          className = _this$props4.className,\n          columnCount = _this$props4.columnCount,\n          direction = _this$props4.direction,\n          height = _this$props4.height,\n          innerRef = _this$props4.innerRef,\n          innerElementType = _this$props4.innerElementType,\n          innerTagName = _this$props4.innerTagName,\n          itemData = _this$props4.itemData,\n          _this$props4$itemKey = _this$props4.itemKey,\n          itemKey = _this$props4$itemKey === void 0 ? defaultItemKey : _this$props4$itemKey,\n          outerElementType = _this$props4.outerElementType,\n          outerTagName = _this$props4.outerTagName,\n          rowCount = _this$props4.rowCount,\n          style = _this$props4.style,\n          useIsScrolling = _this$props4.useIsScrolling,\n          width = _this$props4.width;\n      var isScrolling = this.state.isScrolling;\n\n      var _this$_getHorizontalR = this._getHorizontalRangeToRender(),\n          columnStartIndex = _this$_getHorizontalR[0],\n          columnStopIndex = _this$_getHorizontalR[1];\n\n      var _this$_getVerticalRan = this._getVerticalRangeToRender(),\n          rowStartIndex = _this$_getVerticalRan[0],\n          rowStopIndex = _this$_getVerticalRan[1];\n\n      var items = [];\n\n      if (columnCount > 0 && rowCount) {\n        for (var _rowIndex = rowStartIndex; _rowIndex <= rowStopIndex; _rowIndex++) {\n          for (var _columnIndex = columnStartIndex; _columnIndex <= columnStopIndex; _columnIndex++) {\n            items.push(createElement(children, {\n              columnIndex: _columnIndex,\n              data: itemData,\n              isScrolling: useIsScrolling ? isScrolling : undefined,\n              key: itemKey({\n                columnIndex: _columnIndex,\n                data: itemData,\n                rowIndex: _rowIndex\n              }),\n              rowIndex: _rowIndex,\n              style: this._getItemStyle(_rowIndex, _columnIndex)\n            }));\n          }\n        }\n      } // Read this value AFTER items have been created,\n      // So their actual sizes (if variable) are taken into consideration.\n\n\n      var estimatedTotalHeight = getEstimatedTotalHeight(this.props, this._instanceProps);\n      var estimatedTotalWidth = getEstimatedTotalWidth(this.props, this._instanceProps);\n      return createElement(outerElementType || outerTagName || 'div', {\n        className: className,\n        onScroll: this._onScroll,\n        ref: this._outerRefSetter,\n        style: _extends({\n          position: 'relative',\n          height: height,\n          width: width,\n          overflow: 'auto',\n          WebkitOverflowScrolling: 'touch',\n          willChange: 'transform',\n          direction: direction\n        }, style)\n      }, createElement(innerElementType || innerTagName || 'div', {\n        children: items,\n        ref: innerRef,\n        style: {\n          height: estimatedTotalHeight,\n          pointerEvents: isScrolling ? 'none' : undefined,\n          width: estimatedTotalWidth\n        }\n      }));\n    };\n\n    _proto._callPropsCallbacks = function _callPropsCallbacks() {\n      var _this$props5 = this.props,\n          columnCount = _this$props5.columnCount,\n          onItemsRendered = _this$props5.onItemsRendered,\n          onScroll = _this$props5.onScroll,\n          rowCount = _this$props5.rowCount;\n\n      if (typeof onItemsRendered === 'function') {\n        if (columnCount > 0 && rowCount > 0) {\n          var _this$_getHorizontalR2 = this._getHorizontalRangeToRender(),\n              _overscanColumnStartIndex = _this$_getHorizontalR2[0],\n              _overscanColumnStopIndex = _this$_getHorizontalR2[1],\n              _visibleColumnStartIndex = _this$_getHorizontalR2[2],\n              _visibleColumnStopIndex = _this$_getHorizontalR2[3];\n\n          var _this$_getVerticalRan2 = this._getVerticalRangeToRender(),\n              _overscanRowStartIndex = _this$_getVerticalRan2[0],\n              _overscanRowStopIndex = _this$_getVerticalRan2[1],\n              _visibleRowStartIndex = _this$_getVerticalRan2[2],\n              _visibleRowStopIndex = _this$_getVerticalRan2[3];\n\n          this._callOnItemsRendered(_overscanColumnStartIndex, _overscanColumnStopIndex, _overscanRowStartIndex, _overscanRowStopIndex, _visibleColumnStartIndex, _visibleColumnStopIndex, _visibleRowStartIndex, _visibleRowStopIndex);\n        }\n      }\n\n      if (typeof onScroll === 'function') {\n        var _this$state3 = this.state,\n            _horizontalScrollDirection = _this$state3.horizontalScrollDirection,\n            _scrollLeft = _this$state3.scrollLeft,\n            _scrollTop = _this$state3.scrollTop,\n            _scrollUpdateWasRequested = _this$state3.scrollUpdateWasRequested,\n            _verticalScrollDirection = _this$state3.verticalScrollDirection;\n\n        this._callOnScroll(_scrollLeft, _scrollTop, _horizontalScrollDirection, _verticalScrollDirection, _scrollUpdateWasRequested);\n      }\n    } // Lazily create and cache item styles while scrolling,\n    // So that pure component sCU will prevent re-renders.\n    // We maintain this cache, and pass a style prop rather than index,\n    // So that List can clear cached styles and force item re-render if necessary.\n    ;\n\n    _proto._getHorizontalRangeToRender = function _getHorizontalRangeToRender() {\n      var _this$props6 = this.props,\n          columnCount = _this$props6.columnCount,\n          overscanColumnCount = _this$props6.overscanColumnCount,\n          overscanColumnsCount = _this$props6.overscanColumnsCount,\n          overscanCount = _this$props6.overscanCount,\n          rowCount = _this$props6.rowCount;\n      var _this$state4 = this.state,\n          horizontalScrollDirection = _this$state4.horizontalScrollDirection,\n          isScrolling = _this$state4.isScrolling,\n          scrollLeft = _this$state4.scrollLeft;\n      var overscanCountResolved = overscanColumnCount || overscanColumnsCount || overscanCount || 1;\n\n      if (columnCount === 0 || rowCount === 0) {\n        return [0, 0, 0, 0];\n      }\n\n      var startIndex = getColumnStartIndexForOffset(this.props, scrollLeft, this._instanceProps);\n      var stopIndex = getColumnStopIndexForStartIndex(this.props, startIndex, scrollLeft, this._instanceProps); // Overscan by one item in each direction so that tab/focus works.\n      // If there isn't at least one extra item, tab loops back around.\n\n      var overscanBackward = !isScrolling || horizontalScrollDirection === 'backward' ? Math.max(1, overscanCountResolved) : 1;\n      var overscanForward = !isScrolling || horizontalScrollDirection === 'forward' ? Math.max(1, overscanCountResolved) : 1;\n      return [Math.max(0, startIndex - overscanBackward), Math.max(0, Math.min(columnCount - 1, stopIndex + overscanForward)), startIndex, stopIndex];\n    };\n\n    _proto._getVerticalRangeToRender = function _getVerticalRangeToRender() {\n      var _this$props7 = this.props,\n          columnCount = _this$props7.columnCount,\n          overscanCount = _this$props7.overscanCount,\n          overscanRowCount = _this$props7.overscanRowCount,\n          overscanRowsCount = _this$props7.overscanRowsCount,\n          rowCount = _this$props7.rowCount;\n      var _this$state5 = this.state,\n          isScrolling = _this$state5.isScrolling,\n          verticalScrollDirection = _this$state5.verticalScrollDirection,\n          scrollTop = _this$state5.scrollTop;\n      var overscanCountResolved = overscanRowCount || overscanRowsCount || overscanCount || 1;\n\n      if (columnCount === 0 || rowCount === 0) {\n        return [0, 0, 0, 0];\n      }\n\n      var startIndex = getRowStartIndexForOffset(this.props, scrollTop, this._instanceProps);\n      var stopIndex = getRowStopIndexForStartIndex(this.props, startIndex, scrollTop, this._instanceProps); // Overscan by one item in each direction so that tab/focus works.\n      // If there isn't at least one extra item, tab loops back around.\n\n      var overscanBackward = !isScrolling || verticalScrollDirection === 'backward' ? Math.max(1, overscanCountResolved) : 1;\n      var overscanForward = !isScrolling || verticalScrollDirection === 'forward' ? Math.max(1, overscanCountResolved) : 1;\n      return [Math.max(0, startIndex - overscanBackward), Math.max(0, Math.min(rowCount - 1, stopIndex + overscanForward)), startIndex, stopIndex];\n    };\n\n    return Grid;\n  }(PureComponent), _class.defaultProps = {\n    direction: 'ltr',\n    itemData: undefined,\n    useIsScrolling: false\n  }, _class;\n}\n\nvar validateSharedProps = function validateSharedProps(_ref5, _ref6) {\n  var children = _ref5.children,\n      direction = _ref5.direction,\n      height = _ref5.height,\n      innerTagName = _ref5.innerTagName,\n      outerTagName = _ref5.outerTagName,\n      overscanColumnsCount = _ref5.overscanColumnsCount,\n      overscanCount = _ref5.overscanCount,\n      overscanRowsCount = _ref5.overscanRowsCount,\n      width = _ref5.width;\n  var instance = _ref6.instance;\n\n  if (process.env.NODE_ENV !== 'production') {\n    if (typeof overscanCount === 'number') {\n      if (devWarningsOverscanCount && !devWarningsOverscanCount.has(instance)) {\n        devWarningsOverscanCount.add(instance);\n        console.warn('The overscanCount prop has been deprecated. ' + 'Please use the overscanColumnCount and overscanRowCount props instead.');\n      }\n    }\n\n    if (typeof overscanColumnsCount === 'number' || typeof overscanRowsCount === 'number') {\n      if (devWarningsOverscanRowsColumnsCount && !devWarningsOverscanRowsColumnsCount.has(instance)) {\n        devWarningsOverscanRowsColumnsCount.add(instance);\n        console.warn('The overscanColumnsCount and overscanRowsCount props have been deprecated. ' + 'Please use the overscanColumnCount and overscanRowCount props instead.');\n      }\n    }\n\n    if (innerTagName != null || outerTagName != null) {\n      if (devWarningsTagName && !devWarningsTagName.has(instance)) {\n        devWarningsTagName.add(instance);\n        console.warn('The innerTagName and outerTagName props have been deprecated. ' + 'Please use the innerElementType and outerElementType props instead.');\n      }\n    }\n\n    if (children == null) {\n      throw Error('An invalid \"children\" prop has been specified. ' + 'Value should be a React component. ' + (\"\\\"\" + (children === null ? 'null' : typeof children) + \"\\\" was specified.\"));\n    }\n\n    switch (direction) {\n      case 'ltr':\n      case 'rtl':\n        // Valid values\n        break;\n\n      default:\n        throw Error('An invalid \"direction\" prop has been specified. ' + 'Value should be either \"ltr\" or \"rtl\". ' + (\"\\\"\" + direction + \"\\\" was specified.\"));\n    }\n\n    if (typeof width !== 'number') {\n      throw Error('An invalid \"width\" prop has been specified. ' + 'Grids must specify a number for width. ' + (\"\\\"\" + (width === null ? 'null' : typeof width) + \"\\\" was specified.\"));\n    }\n\n    if (typeof height !== 'number') {\n      throw Error('An invalid \"height\" prop has been specified. ' + 'Grids must specify a number for height. ' + (\"\\\"\" + (height === null ? 'null' : typeof height) + \"\\\" was specified.\"));\n    }\n  }\n};\n\nvar DEFAULT_ESTIMATED_ITEM_SIZE = 50;\n\nvar getEstimatedTotalHeight = function getEstimatedTotalHeight(_ref, _ref2) {\n  var rowCount = _ref.rowCount;\n  var rowMetadataMap = _ref2.rowMetadataMap,\n      estimatedRowHeight = _ref2.estimatedRowHeight,\n      lastMeasuredRowIndex = _ref2.lastMeasuredRowIndex;\n  var totalSizeOfMeasuredRows = 0; // Edge case check for when the number of items decreases while a scroll is in progress.\n  // https://github.com/bvaughn/react-window/pull/138\n\n  if (lastMeasuredRowIndex >= rowCount) {\n    lastMeasuredRowIndex = rowCount - 1;\n  }\n\n  if (lastMeasuredRowIndex >= 0) {\n    var itemMetadata = rowMetadataMap[lastMeasuredRowIndex];\n    totalSizeOfMeasuredRows = itemMetadata.offset + itemMetadata.size;\n  }\n\n  var numUnmeasuredItems = rowCount - lastMeasuredRowIndex - 1;\n  var totalSizeOfUnmeasuredItems = numUnmeasuredItems * estimatedRowHeight;\n  return totalSizeOfMeasuredRows + totalSizeOfUnmeasuredItems;\n};\n\nvar getEstimatedTotalWidth = function getEstimatedTotalWidth(_ref3, _ref4) {\n  var columnCount = _ref3.columnCount;\n  var columnMetadataMap = _ref4.columnMetadataMap,\n      estimatedColumnWidth = _ref4.estimatedColumnWidth,\n      lastMeasuredColumnIndex = _ref4.lastMeasuredColumnIndex;\n  var totalSizeOfMeasuredRows = 0; // Edge case check for when the number of items decreases while a scroll is in progress.\n  // https://github.com/bvaughn/react-window/pull/138\n\n  if (lastMeasuredColumnIndex >= columnCount) {\n    lastMeasuredColumnIndex = columnCount - 1;\n  }\n\n  if (lastMeasuredColumnIndex >= 0) {\n    var itemMetadata = columnMetadataMap[lastMeasuredColumnIndex];\n    totalSizeOfMeasuredRows = itemMetadata.offset + itemMetadata.size;\n  }\n\n  var numUnmeasuredItems = columnCount - lastMeasuredColumnIndex - 1;\n  var totalSizeOfUnmeasuredItems = numUnmeasuredItems * estimatedColumnWidth;\n  return totalSizeOfMeasuredRows + totalSizeOfUnmeasuredItems;\n};\n\nvar getItemMetadata = function getItemMetadata(itemType, props, index, instanceProps) {\n  var itemMetadataMap, itemSize, lastMeasuredIndex;\n\n  if (itemType === 'column') {\n    itemMetadataMap = instanceProps.columnMetadataMap;\n    itemSize = props.columnWidth;\n    lastMeasuredIndex = instanceProps.lastMeasuredColumnIndex;\n  } else {\n    itemMetadataMap = instanceProps.rowMetadataMap;\n    itemSize = props.rowHeight;\n    lastMeasuredIndex = instanceProps.lastMeasuredRowIndex;\n  }\n\n  if (index > lastMeasuredIndex) {\n    var offset = 0;\n\n    if (lastMeasuredIndex >= 0) {\n      var itemMetadata = itemMetadataMap[lastMeasuredIndex];\n      offset = itemMetadata.offset + itemMetadata.size;\n    }\n\n    for (var i = lastMeasuredIndex + 1; i <= index; i++) {\n      var size = itemSize(i);\n      itemMetadataMap[i] = {\n        offset: offset,\n        size: size\n      };\n      offset += size;\n    }\n\n    if (itemType === 'column') {\n      instanceProps.lastMeasuredColumnIndex = index;\n    } else {\n      instanceProps.lastMeasuredRowIndex = index;\n    }\n  }\n\n  return itemMetadataMap[index];\n};\n\nvar findNearestItem = function findNearestItem(itemType, props, instanceProps, offset) {\n  var itemMetadataMap, lastMeasuredIndex;\n\n  if (itemType === 'column') {\n    itemMetadataMap = instanceProps.columnMetadataMap;\n    lastMeasuredIndex = instanceProps.lastMeasuredColumnIndex;\n  } else {\n    itemMetadataMap = instanceProps.rowMetadataMap;\n    lastMeasuredIndex = instanceProps.lastMeasuredRowIndex;\n  }\n\n  var lastMeasuredItemOffset = lastMeasuredIndex > 0 ? itemMetadataMap[lastMeasuredIndex].offset : 0;\n\n  if (lastMeasuredItemOffset >= offset) {\n    // If we've already measured items within this range just use a binary search as it's faster.\n    return findNearestItemBinarySearch(itemType, props, instanceProps, lastMeasuredIndex, 0, offset);\n  } else {\n    // If we haven't yet measured this high, fallback to an exponential search with an inner binary search.\n    // The exponential search avoids pre-computing sizes for the full set of items as a binary search would.\n    // The overall complexity for this approach is O(log n).\n    return findNearestItemExponentialSearch(itemType, props, instanceProps, Math.max(0, lastMeasuredIndex), offset);\n  }\n};\n\nvar findNearestItemBinarySearch = function findNearestItemBinarySearch(itemType, props, instanceProps, high, low, offset) {\n  while (low <= high) {\n    var middle = low + Math.floor((high - low) / 2);\n    var currentOffset = getItemMetadata(itemType, props, middle, instanceProps).offset;\n\n    if (currentOffset === offset) {\n      return middle;\n    } else if (currentOffset < offset) {\n      low = middle + 1;\n    } else if (currentOffset > offset) {\n      high = middle - 1;\n    }\n  }\n\n  if (low > 0) {\n    return low - 1;\n  } else {\n    return 0;\n  }\n};\n\nvar findNearestItemExponentialSearch = function findNearestItemExponentialSearch(itemType, props, instanceProps, index, offset) {\n  var itemCount = itemType === 'column' ? props.columnCount : props.rowCount;\n  var interval = 1;\n\n  while (index < itemCount && getItemMetadata(itemType, props, index, instanceProps).offset < offset) {\n    index += interval;\n    interval *= 2;\n  }\n\n  return findNearestItemBinarySearch(itemType, props, instanceProps, Math.min(index, itemCount - 1), Math.floor(index / 2), offset);\n};\n\nvar getOffsetForIndexAndAlignment = function getOffsetForIndexAndAlignment(itemType, props, index, align, scrollOffset, instanceProps, scrollbarSize) {\n  var size = itemType === 'column' ? props.width : props.height;\n  var itemMetadata = getItemMetadata(itemType, props, index, instanceProps); // Get estimated total size after ItemMetadata is computed,\n  // To ensure it reflects actual measurements instead of just estimates.\n\n  var estimatedTotalSize = itemType === 'column' ? getEstimatedTotalWidth(props, instanceProps) : getEstimatedTotalHeight(props, instanceProps);\n  var maxOffset = Math.max(0, Math.min(estimatedTotalSize - size, itemMetadata.offset));\n  var minOffset = Math.max(0, itemMetadata.offset - size + scrollbarSize + itemMetadata.size);\n\n  if (align === 'smart') {\n    if (scrollOffset >= minOffset - size && scrollOffset <= maxOffset + size) {\n      align = 'auto';\n    } else {\n      align = 'center';\n    }\n  }\n\n  switch (align) {\n    case 'start':\n      return maxOffset;\n\n    case 'end':\n      return minOffset;\n\n    case 'center':\n      return Math.round(minOffset + (maxOffset - minOffset) / 2);\n\n    case 'auto':\n    default:\n      if (scrollOffset >= minOffset && scrollOffset <= maxOffset) {\n        return scrollOffset;\n      } else if (minOffset > maxOffset) {\n        // Because we only take into account the scrollbar size when calculating minOffset\n        // this value can be larger than maxOffset when at the end of the list\n        return minOffset;\n      } else if (scrollOffset < minOffset) {\n        return minOffset;\n      } else {\n        return maxOffset;\n      }\n\n  }\n};\n\nvar VariableSizeGrid = /*#__PURE__*/createGridComponent({\n  getColumnOffset: function getColumnOffset(props, index, instanceProps) {\n    return getItemMetadata('column', props, index, instanceProps).offset;\n  },\n  getColumnStartIndexForOffset: function getColumnStartIndexForOffset(props, scrollLeft, instanceProps) {\n    return findNearestItem('column', props, instanceProps, scrollLeft);\n  },\n  getColumnStopIndexForStartIndex: function getColumnStopIndexForStartIndex(props, startIndex, scrollLeft, instanceProps) {\n    var columnCount = props.columnCount,\n        width = props.width;\n    var itemMetadata = getItemMetadata('column', props, startIndex, instanceProps);\n    var maxOffset = scrollLeft + width;\n    var offset = itemMetadata.offset + itemMetadata.size;\n    var stopIndex = startIndex;\n\n    while (stopIndex < columnCount - 1 && offset < maxOffset) {\n      stopIndex++;\n      offset += getItemMetadata('column', props, stopIndex, instanceProps).size;\n    }\n\n    return stopIndex;\n  },\n  getColumnWidth: function getColumnWidth(props, index, instanceProps) {\n    return instanceProps.columnMetadataMap[index].size;\n  },\n  getEstimatedTotalHeight: getEstimatedTotalHeight,\n  getEstimatedTotalWidth: getEstimatedTotalWidth,\n  getOffsetForColumnAndAlignment: function getOffsetForColumnAndAlignment(props, index, align, scrollOffset, instanceProps, scrollbarSize) {\n    return getOffsetForIndexAndAlignment('column', props, index, align, scrollOffset, instanceProps, scrollbarSize);\n  },\n  getOffsetForRowAndAlignment: function getOffsetForRowAndAlignment(props, index, align, scrollOffset, instanceProps, scrollbarSize) {\n    return getOffsetForIndexAndAlignment('row', props, index, align, scrollOffset, instanceProps, scrollbarSize);\n  },\n  getRowOffset: function getRowOffset(props, index, instanceProps) {\n    return getItemMetadata('row', props, index, instanceProps).offset;\n  },\n  getRowHeight: function getRowHeight(props, index, instanceProps) {\n    return instanceProps.rowMetadataMap[index].size;\n  },\n  getRowStartIndexForOffset: function getRowStartIndexForOffset(props, scrollTop, instanceProps) {\n    return findNearestItem('row', props, instanceProps, scrollTop);\n  },\n  getRowStopIndexForStartIndex: function getRowStopIndexForStartIndex(props, startIndex, scrollTop, instanceProps) {\n    var rowCount = props.rowCount,\n        height = props.height;\n    var itemMetadata = getItemMetadata('row', props, startIndex, instanceProps);\n    var maxOffset = scrollTop + height;\n    var offset = itemMetadata.offset + itemMetadata.size;\n    var stopIndex = startIndex;\n\n    while (stopIndex < rowCount - 1 && offset < maxOffset) {\n      stopIndex++;\n      offset += getItemMetadata('row', props, stopIndex, instanceProps).size;\n    }\n\n    return stopIndex;\n  },\n  initInstanceProps: function initInstanceProps(props, instance) {\n    var _ref5 = props,\n        estimatedColumnWidth = _ref5.estimatedColumnWidth,\n        estimatedRowHeight = _ref5.estimatedRowHeight;\n    var instanceProps = {\n      columnMetadataMap: {},\n      estimatedColumnWidth: estimatedColumnWidth || DEFAULT_ESTIMATED_ITEM_SIZE,\n      estimatedRowHeight: estimatedRowHeight || DEFAULT_ESTIMATED_ITEM_SIZE,\n      lastMeasuredColumnIndex: -1,\n      lastMeasuredRowIndex: -1,\n      rowMetadataMap: {}\n    };\n\n    instance.resetAfterColumnIndex = function (columnIndex, shouldForceUpdate) {\n      if (shouldForceUpdate === void 0) {\n        shouldForceUpdate = true;\n      }\n\n      instance.resetAfterIndices({\n        columnIndex: columnIndex,\n        shouldForceUpdate: shouldForceUpdate\n      });\n    };\n\n    instance.resetAfterRowIndex = function (rowIndex, shouldForceUpdate) {\n      if (shouldForceUpdate === void 0) {\n        shouldForceUpdate = true;\n      }\n\n      instance.resetAfterIndices({\n        rowIndex: rowIndex,\n        shouldForceUpdate: shouldForceUpdate\n      });\n    };\n\n    instance.resetAfterIndices = function (_ref6) {\n      var columnIndex = _ref6.columnIndex,\n          rowIndex = _ref6.rowIndex,\n          _ref6$shouldForceUpda = _ref6.shouldForceUpdate,\n          shouldForceUpdate = _ref6$shouldForceUpda === void 0 ? true : _ref6$shouldForceUpda;\n\n      if (typeof columnIndex === 'number') {\n        instanceProps.lastMeasuredColumnIndex = Math.min(instanceProps.lastMeasuredColumnIndex, columnIndex - 1);\n      }\n\n      if (typeof rowIndex === 'number') {\n        instanceProps.lastMeasuredRowIndex = Math.min(instanceProps.lastMeasuredRowIndex, rowIndex - 1);\n      } // We could potentially optimize further by only evicting styles after this index,\n      // But since styles are only cached while scrolling is in progress-\n      // It seems an unnecessary optimization.\n      // It's unlikely that resetAfterIndex() will be called while a user is scrolling.\n\n\n      instance._getItemStyleCache(-1);\n\n      if (shouldForceUpdate) {\n        instance.forceUpdate();\n      }\n    };\n\n    return instanceProps;\n  },\n  shouldResetStyleCacheOnItemSizeChange: false,\n  validateProps: function validateProps(_ref7) {\n    var columnWidth = _ref7.columnWidth,\n        rowHeight = _ref7.rowHeight;\n\n    if (process.env.NODE_ENV !== 'production') {\n      if (typeof columnWidth !== 'function') {\n        throw Error('An invalid \"columnWidth\" prop has been specified. ' + 'Value should be a function. ' + (\"\\\"\" + (columnWidth === null ? 'null' : typeof columnWidth) + \"\\\" was specified.\"));\n      } else if (typeof rowHeight !== 'function') {\n        throw Error('An invalid \"rowHeight\" prop has been specified. ' + 'Value should be a function. ' + (\"\\\"\" + (rowHeight === null ? 'null' : typeof rowHeight) + \"\\\" was specified.\"));\n      }\n    }\n  }\n});\n\nvar IS_SCROLLING_DEBOUNCE_INTERVAL$1 = 150;\n\nvar defaultItemKey$1 = function defaultItemKey(index, data) {\n  return index;\n}; // In DEV mode, this Set helps us only log a warning once per component instance.\n// This avoids spamming the console every time a render happens.\n\n\nvar devWarningsDirection = null;\nvar devWarningsTagName$1 = null;\n\nif (process.env.NODE_ENV !== 'production') {\n  if (typeof window !== 'undefined' && typeof window.WeakSet !== 'undefined') {\n    devWarningsDirection = /*#__PURE__*/new WeakSet();\n    devWarningsTagName$1 = /*#__PURE__*/new WeakSet();\n  }\n}\n\nfunction createListComponent(_ref) {\n  var _class;\n\n  var getItemOffset = _ref.getItemOffset,\n      getEstimatedTotalSize = _ref.getEstimatedTotalSize,\n      getItemSize = _ref.getItemSize,\n      getOffsetForIndexAndAlignment = _ref.getOffsetForIndexAndAlignment,\n      getStartIndexForOffset = _ref.getStartIndexForOffset,\n      getStopIndexForStartIndex = _ref.getStopIndexForStartIndex,\n      initInstanceProps = _ref.initInstanceProps,\n      shouldResetStyleCacheOnItemSizeChange = _ref.shouldResetStyleCacheOnItemSizeChange,\n      validateProps = _ref.validateProps;\n  return _class = /*#__PURE__*/function (_PureComponent) {\n    _inheritsLoose(List, _PureComponent);\n\n    // Always use explicit constructor for React components.\n    // It produces less code after transpilation. (#26)\n    // eslint-disable-next-line no-useless-constructor\n    function List(props) {\n      var _this;\n\n      _this = _PureComponent.call(this, props) || this;\n      _this._instanceProps = initInstanceProps(_this.props, _assertThisInitialized(_this));\n      _this._outerRef = void 0;\n      _this._resetIsScrollingTimeoutId = null;\n      _this.state = {\n        instance: _assertThisInitialized(_this),\n        isScrolling: false,\n        scrollDirection: 'forward',\n        scrollOffset: typeof _this.props.initialScrollOffset === 'number' ? _this.props.initialScrollOffset : 0,\n        scrollUpdateWasRequested: false\n      };\n      _this._callOnItemsRendered = void 0;\n      _this._callOnItemsRendered = memoizeOne(function (overscanStartIndex, overscanStopIndex, visibleStartIndex, visibleStopIndex) {\n        return _this.props.onItemsRendered({\n          overscanStartIndex: overscanStartIndex,\n          overscanStopIndex: overscanStopIndex,\n          visibleStartIndex: visibleStartIndex,\n          visibleStopIndex: visibleStopIndex\n        });\n      });\n      _this._callOnScroll = void 0;\n      _this._callOnScroll = memoizeOne(function (scrollDirection, scrollOffset, scrollUpdateWasRequested) {\n        return _this.props.onScroll({\n          scrollDirection: scrollDirection,\n          scrollOffset: scrollOffset,\n          scrollUpdateWasRequested: scrollUpdateWasRequested\n        });\n      });\n      _this._getItemStyle = void 0;\n\n      _this._getItemStyle = function (index) {\n        var _this$props = _this.props,\n            direction = _this$props.direction,\n            itemSize = _this$props.itemSize,\n            layout = _this$props.layout;\n\n        var itemStyleCache = _this._getItemStyleCache(shouldResetStyleCacheOnItemSizeChange && itemSize, shouldResetStyleCacheOnItemSizeChange && layout, shouldResetStyleCacheOnItemSizeChange && direction);\n\n        var style;\n\n        if (itemStyleCache.hasOwnProperty(index)) {\n          style = itemStyleCache[index];\n        } else {\n          var _offset = getItemOffset(_this.props, index, _this._instanceProps);\n\n          var size = getItemSize(_this.props, index, _this._instanceProps); // TODO Deprecate direction \"horizontal\"\n\n          var isHorizontal = direction === 'horizontal' || layout === 'horizontal';\n          var isRtl = direction === 'rtl';\n          var offsetHorizontal = isHorizontal ? _offset : 0;\n          itemStyleCache[index] = style = {\n            position: 'absolute',\n            left: isRtl ? undefined : offsetHorizontal,\n            right: isRtl ? offsetHorizontal : undefined,\n            top: !isHorizontal ? _offset : 0,\n            height: !isHorizontal ? size : '100%',\n            width: isHorizontal ? size : '100%'\n          };\n        }\n\n        return style;\n      };\n\n      _this._getItemStyleCache = void 0;\n      _this._getItemStyleCache = memoizeOne(function (_, __, ___) {\n        return {};\n      });\n\n      _this._onScrollHorizontal = function (event) {\n        var _event$currentTarget = event.currentTarget,\n            clientWidth = _event$currentTarget.clientWidth,\n            scrollLeft = _event$currentTarget.scrollLeft,\n            scrollWidth = _event$currentTarget.scrollWidth;\n\n        _this.setState(function (prevState) {\n          if (prevState.scrollOffset === scrollLeft) {\n            // Scroll position may have been updated by cDM/cDU,\n            // In which case we don't need to trigger another render,\n            // And we don't want to update state.isScrolling.\n            return null;\n          }\n\n          var direction = _this.props.direction;\n          var scrollOffset = scrollLeft;\n\n          if (direction === 'rtl') {\n            // TRICKY According to the spec, scrollLeft should be negative for RTL aligned elements.\n            // This is not the case for all browsers though (e.g. Chrome reports values as positive, measured relative to the left).\n            // It's also easier for this component if we convert offsets to the same format as they would be in for ltr.\n            // So the simplest solution is to determine which browser behavior we're dealing with, and convert based on it.\n            switch (getRTLOffsetType()) {\n              case 'negative':\n                scrollOffset = -scrollLeft;\n                break;\n\n              case 'positive-descending':\n                scrollOffset = scrollWidth - clientWidth - scrollLeft;\n                break;\n            }\n          } // Prevent Safari's elastic scrolling from causing visual shaking when scrolling past bounds.\n\n\n          scrollOffset = Math.max(0, Math.min(scrollOffset, scrollWidth - clientWidth));\n          return {\n            isScrolling: true,\n            scrollDirection: prevState.scrollOffset < scrollOffset ? 'forward' : 'backward',\n            scrollOffset: scrollOffset,\n            scrollUpdateWasRequested: false\n          };\n        }, _this._resetIsScrollingDebounced);\n      };\n\n      _this._onScrollVertical = function (event) {\n        var _event$currentTarget2 = event.currentTarget,\n            clientHeight = _event$currentTarget2.clientHeight,\n            scrollHeight = _event$currentTarget2.scrollHeight,\n            scrollTop = _event$currentTarget2.scrollTop;\n\n        _this.setState(function (prevState) {\n          if (prevState.scrollOffset === scrollTop) {\n            // Scroll position may have been updated by cDM/cDU,\n            // In which case we don't need to trigger another render,\n            // And we don't want to update state.isScrolling.\n            return null;\n          } // Prevent Safari's elastic scrolling from causing visual shaking when scrolling past bounds.\n\n\n          var scrollOffset = Math.max(0, Math.min(scrollTop, scrollHeight - clientHeight));\n          return {\n            isScrolling: true,\n            scrollDirection: prevState.scrollOffset < scrollOffset ? 'forward' : 'backward',\n            scrollOffset: scrollOffset,\n            scrollUpdateWasRequested: false\n          };\n        }, _this._resetIsScrollingDebounced);\n      };\n\n      _this._outerRefSetter = function (ref) {\n        var outerRef = _this.props.outerRef;\n        _this._outerRef = ref;\n\n        if (typeof outerRef === 'function') {\n          outerRef(ref);\n        } else if (outerRef != null && typeof outerRef === 'object' && outerRef.hasOwnProperty('current')) {\n          outerRef.current = ref;\n        }\n      };\n\n      _this._resetIsScrollingDebounced = function () {\n        if (_this._resetIsScrollingTimeoutId !== null) {\n          cancelTimeout(_this._resetIsScrollingTimeoutId);\n        }\n\n        _this._resetIsScrollingTimeoutId = requestTimeout(_this._resetIsScrolling, IS_SCROLLING_DEBOUNCE_INTERVAL$1);\n      };\n\n      _this._resetIsScrolling = function () {\n        _this._resetIsScrollingTimeoutId = null;\n\n        _this.setState({\n          isScrolling: false\n        }, function () {\n          // Clear style cache after state update has been committed.\n          // This way we don't break pure sCU for items that don't use isScrolling param.\n          _this._getItemStyleCache(-1, null);\n        });\n      };\n\n      return _this;\n    }\n\n    List.getDerivedStateFromProps = function getDerivedStateFromProps(nextProps, prevState) {\n      validateSharedProps$1(nextProps, prevState);\n      validateProps(nextProps);\n      return null;\n    };\n\n    var _proto = List.prototype;\n\n    _proto.scrollTo = function scrollTo(scrollOffset) {\n      scrollOffset = Math.max(0, scrollOffset);\n      this.setState(function (prevState) {\n        if (prevState.scrollOffset === scrollOffset) {\n          return null;\n        }\n\n        return {\n          scrollDirection: prevState.scrollOffset < scrollOffset ? 'forward' : 'backward',\n          scrollOffset: scrollOffset,\n          scrollUpdateWasRequested: true\n        };\n      }, this._resetIsScrollingDebounced);\n    };\n\n    _proto.scrollToItem = function scrollToItem(index, align) {\n      if (align === void 0) {\n        align = 'auto';\n      }\n\n      var _this$props2 = this.props,\n          itemCount = _this$props2.itemCount,\n          layout = _this$props2.layout;\n      var scrollOffset = this.state.scrollOffset;\n      index = Math.max(0, Math.min(index, itemCount - 1)); // The scrollbar size should be considered when scrolling an item into view, to ensure it's fully visible.\n      // But we only need to account for its size when it's actually visible.\n      // This is an edge case for lists; normally they only scroll in the dominant direction.\n\n      var scrollbarSize = 0;\n\n      if (this._outerRef) {\n        var outerRef = this._outerRef;\n\n        if (layout === 'vertical') {\n          scrollbarSize = outerRef.scrollWidth > outerRef.clientWidth ? getScrollbarSize() : 0;\n        } else {\n          scrollbarSize = outerRef.scrollHeight > outerRef.clientHeight ? getScrollbarSize() : 0;\n        }\n      }\n\n      this.scrollTo(getOffsetForIndexAndAlignment(this.props, index, align, scrollOffset, this._instanceProps, scrollbarSize));\n    };\n\n    _proto.componentDidMount = function componentDidMount() {\n      var _this$props3 = this.props,\n          direction = _this$props3.direction,\n          initialScrollOffset = _this$props3.initialScrollOffset,\n          layout = _this$props3.layout;\n\n      if (typeof initialScrollOffset === 'number' && this._outerRef != null) {\n        var outerRef = this._outerRef; // TODO Deprecate direction \"horizontal\"\n\n        if (direction === 'horizontal' || layout === 'horizontal') {\n          outerRef.scrollLeft = initialScrollOffset;\n        } else {\n          outerRef.scrollTop = initialScrollOffset;\n        }\n      }\n\n      this._callPropsCallbacks();\n    };\n\n    _proto.componentDidUpdate = function componentDidUpdate() {\n      var _this$props4 = this.props,\n          direction = _this$props4.direction,\n          layout = _this$props4.layout;\n      var _this$state = this.state,\n          scrollOffset = _this$state.scrollOffset,\n          scrollUpdateWasRequested = _this$state.scrollUpdateWasRequested;\n\n      if (scrollUpdateWasRequested && this._outerRef != null) {\n        var outerRef = this._outerRef; // TODO Deprecate direction \"horizontal\"\n\n        if (direction === 'horizontal' || layout === 'horizontal') {\n          if (direction === 'rtl') {\n            // TRICKY According to the spec, scrollLeft should be negative for RTL aligned elements.\n            // This is not the case for all browsers though (e.g. Chrome reports values as positive, measured relative to the left).\n            // So we need to determine which browser behavior we're dealing with, and mimic it.\n            switch (getRTLOffsetType()) {\n              case 'negative':\n                outerRef.scrollLeft = -scrollOffset;\n                break;\n\n              case 'positive-ascending':\n                outerRef.scrollLeft = scrollOffset;\n                break;\n\n              default:\n                var clientWidth = outerRef.clientWidth,\n                    scrollWidth = outerRef.scrollWidth;\n                outerRef.scrollLeft = scrollWidth - clientWidth - scrollOffset;\n                break;\n            }\n          } else {\n            outerRef.scrollLeft = scrollOffset;\n          }\n        } else {\n          outerRef.scrollTop = scrollOffset;\n        }\n      }\n\n      this._callPropsCallbacks();\n    };\n\n    _proto.componentWillUnmount = function componentWillUnmount() {\n      if (this._resetIsScrollingTimeoutId !== null) {\n        cancelTimeout(this._resetIsScrollingTimeoutId);\n      }\n    };\n\n    _proto.render = function render() {\n      var _this$props5 = this.props,\n          children = _this$props5.children,\n          className = _this$props5.className,\n          direction = _this$props5.direction,\n          height = _this$props5.height,\n          innerRef = _this$props5.innerRef,\n          innerElementType = _this$props5.innerElementType,\n          innerTagName = _this$props5.innerTagName,\n          itemCount = _this$props5.itemCount,\n          itemData = _this$props5.itemData,\n          _this$props5$itemKey = _this$props5.itemKey,\n          itemKey = _this$props5$itemKey === void 0 ? defaultItemKey$1 : _this$props5$itemKey,\n          layout = _this$props5.layout,\n          outerElementType = _this$props5.outerElementType,\n          outerTagName = _this$props5.outerTagName,\n          style = _this$props5.style,\n          useIsScrolling = _this$props5.useIsScrolling,\n          width = _this$props5.width;\n      var isScrolling = this.state.isScrolling; // TODO Deprecate direction \"horizontal\"\n\n      var isHorizontal = direction === 'horizontal' || layout === 'horizontal';\n      var onScroll = isHorizontal ? this._onScrollHorizontal : this._onScrollVertical;\n\n      var _this$_getRangeToRend = this._getRangeToRender(),\n          startIndex = _this$_getRangeToRend[0],\n          stopIndex = _this$_getRangeToRend[1];\n\n      var items = [];\n\n      if (itemCount > 0) {\n        for (var _index = startIndex; _index <= stopIndex; _index++) {\n          items.push(createElement(children, {\n            data: itemData,\n            key: itemKey(_index, itemData),\n            index: _index,\n            isScrolling: useIsScrolling ? isScrolling : undefined,\n            style: this._getItemStyle(_index)\n          }));\n        }\n      } // Read this value AFTER items have been created,\n      // So their actual sizes (if variable) are taken into consideration.\n\n\n      var estimatedTotalSize = getEstimatedTotalSize(this.props, this._instanceProps);\n      return createElement(outerElementType || outerTagName || 'div', {\n        className: className,\n        onScroll: onScroll,\n        ref: this._outerRefSetter,\n        style: _extends({\n          position: 'relative',\n          height: height,\n          width: width,\n          overflow: 'auto',\n          WebkitOverflowScrolling: 'touch',\n          willChange: 'transform',\n          direction: direction\n        }, style)\n      }, createElement(innerElementType || innerTagName || 'div', {\n        children: items,\n        ref: innerRef,\n        style: {\n          height: isHorizontal ? '100%' : estimatedTotalSize,\n          pointerEvents: isScrolling ? 'none' : undefined,\n          width: isHorizontal ? estimatedTotalSize : '100%'\n        }\n      }));\n    };\n\n    _proto._callPropsCallbacks = function _callPropsCallbacks() {\n      if (typeof this.props.onItemsRendered === 'function') {\n        var itemCount = this.props.itemCount;\n\n        if (itemCount > 0) {\n          var _this$_getRangeToRend2 = this._getRangeToRender(),\n              _overscanStartIndex = _this$_getRangeToRend2[0],\n              _overscanStopIndex = _this$_getRangeToRend2[1],\n              _visibleStartIndex = _this$_getRangeToRend2[2],\n              _visibleStopIndex = _this$_getRangeToRend2[3];\n\n          this._callOnItemsRendered(_overscanStartIndex, _overscanStopIndex, _visibleStartIndex, _visibleStopIndex);\n        }\n      }\n\n      if (typeof this.props.onScroll === 'function') {\n        var _this$state2 = this.state,\n            _scrollDirection = _this$state2.scrollDirection,\n            _scrollOffset = _this$state2.scrollOffset,\n            _scrollUpdateWasRequested = _this$state2.scrollUpdateWasRequested;\n\n        this._callOnScroll(_scrollDirection, _scrollOffset, _scrollUpdateWasRequested);\n      }\n    } // Lazily create and cache item styles while scrolling,\n    // So that pure component sCU will prevent re-renders.\n    // We maintain this cache, and pass a style prop rather than index,\n    // So that List can clear cached styles and force item re-render if necessary.\n    ;\n\n    _proto._getRangeToRender = function _getRangeToRender() {\n      var _this$props6 = this.props,\n          itemCount = _this$props6.itemCount,\n          overscanCount = _this$props6.overscanCount;\n      var _this$state3 = this.state,\n          isScrolling = _this$state3.isScrolling,\n          scrollDirection = _this$state3.scrollDirection,\n          scrollOffset = _this$state3.scrollOffset;\n\n      if (itemCount === 0) {\n        return [0, 0, 0, 0];\n      }\n\n      var startIndex = getStartIndexForOffset(this.props, scrollOffset, this._instanceProps);\n      var stopIndex = getStopIndexForStartIndex(this.props, startIndex, scrollOffset, this._instanceProps); // Overscan by one item in each direction so that tab/focus works.\n      // If there isn't at least one extra item, tab loops back around.\n\n      var overscanBackward = !isScrolling || scrollDirection === 'backward' ? Math.max(1, overscanCount) : 1;\n      var overscanForward = !isScrolling || scrollDirection === 'forward' ? Math.max(1, overscanCount) : 1;\n      return [Math.max(0, startIndex - overscanBackward), Math.max(0, Math.min(itemCount - 1, stopIndex + overscanForward)), startIndex, stopIndex];\n    };\n\n    return List;\n  }(PureComponent), _class.defaultProps = {\n    direction: 'ltr',\n    itemData: undefined,\n    layout: 'vertical',\n    overscanCount: 2,\n    useIsScrolling: false\n  }, _class;\n} // NOTE: I considered further wrapping individual items with a pure ListItem component.\n// This would avoid ever calling the render function for the same index more than once,\n// But it would also add the overhead of a lot of components/fibers.\n// I assume people already do this (render function returning a class component),\n// So my doing it would just unnecessarily double the wrappers.\n\nvar validateSharedProps$1 = function validateSharedProps(_ref2, _ref3) {\n  var children = _ref2.children,\n      direction = _ref2.direction,\n      height = _ref2.height,\n      layout = _ref2.layout,\n      innerTagName = _ref2.innerTagName,\n      outerTagName = _ref2.outerTagName,\n      width = _ref2.width;\n  var instance = _ref3.instance;\n\n  if (process.env.NODE_ENV !== 'production') {\n    if (innerTagName != null || outerTagName != null) {\n      if (devWarningsTagName$1 && !devWarningsTagName$1.has(instance)) {\n        devWarningsTagName$1.add(instance);\n        console.warn('The innerTagName and outerTagName props have been deprecated. ' + 'Please use the innerElementType and outerElementType props instead.');\n      }\n    } // TODO Deprecate direction \"horizontal\"\n\n\n    var isHorizontal = direction === 'horizontal' || layout === 'horizontal';\n\n    switch (direction) {\n      case 'horizontal':\n      case 'vertical':\n        if (devWarningsDirection && !devWarningsDirection.has(instance)) {\n          devWarningsDirection.add(instance);\n          console.warn('The direction prop should be either \"ltr\" (default) or \"rtl\". ' + 'Please use the layout prop to specify \"vertical\" (default) or \"horizontal\" orientation.');\n        }\n\n        break;\n\n      case 'ltr':\n      case 'rtl':\n        // Valid values\n        break;\n\n      default:\n        throw Error('An invalid \"direction\" prop has been specified. ' + 'Value should be either \"ltr\" or \"rtl\". ' + (\"\\\"\" + direction + \"\\\" was specified.\"));\n    }\n\n    switch (layout) {\n      case 'horizontal':\n      case 'vertical':\n        // Valid values\n        break;\n\n      default:\n        throw Error('An invalid \"layout\" prop has been specified. ' + 'Value should be either \"horizontal\" or \"vertical\". ' + (\"\\\"\" + layout + \"\\\" was specified.\"));\n    }\n\n    if (children == null) {\n      throw Error('An invalid \"children\" prop has been specified. ' + 'Value should be a React component. ' + (\"\\\"\" + (children === null ? 'null' : typeof children) + \"\\\" was specified.\"));\n    }\n\n    if (isHorizontal && typeof width !== 'number') {\n      throw Error('An invalid \"width\" prop has been specified. ' + 'Horizontal lists must specify a number for width. ' + (\"\\\"\" + (width === null ? 'null' : typeof width) + \"\\\" was specified.\"));\n    } else if (!isHorizontal && typeof height !== 'number') {\n      throw Error('An invalid \"height\" prop has been specified. ' + 'Vertical lists must specify a number for height. ' + (\"\\\"\" + (height === null ? 'null' : typeof height) + \"\\\" was specified.\"));\n    }\n  }\n};\n\nvar DEFAULT_ESTIMATED_ITEM_SIZE$1 = 50;\n\nvar getItemMetadata$1 = function getItemMetadata(props, index, instanceProps) {\n  var _ref = props,\n      itemSize = _ref.itemSize;\n  var itemMetadataMap = instanceProps.itemMetadataMap,\n      lastMeasuredIndex = instanceProps.lastMeasuredIndex;\n\n  if (index > lastMeasuredIndex) {\n    var offset = 0;\n\n    if (lastMeasuredIndex >= 0) {\n      var itemMetadata = itemMetadataMap[lastMeasuredIndex];\n      offset = itemMetadata.offset + itemMetadata.size;\n    }\n\n    for (var i = lastMeasuredIndex + 1; i <= index; i++) {\n      var size = itemSize(i);\n      itemMetadataMap[i] = {\n        offset: offset,\n        size: size\n      };\n      offset += size;\n    }\n\n    instanceProps.lastMeasuredIndex = index;\n  }\n\n  return itemMetadataMap[index];\n};\n\nvar findNearestItem$1 = function findNearestItem(props, instanceProps, offset) {\n  var itemMetadataMap = instanceProps.itemMetadataMap,\n      lastMeasuredIndex = instanceProps.lastMeasuredIndex;\n  var lastMeasuredItemOffset = lastMeasuredIndex > 0 ? itemMetadataMap[lastMeasuredIndex].offset : 0;\n\n  if (lastMeasuredItemOffset >= offset) {\n    // If we've already measured items within this range just use a binary search as it's faster.\n    return findNearestItemBinarySearch$1(props, instanceProps, lastMeasuredIndex, 0, offset);\n  } else {\n    // If we haven't yet measured this high, fallback to an exponential search with an inner binary search.\n    // The exponential search avoids pre-computing sizes for the full set of items as a binary search would.\n    // The overall complexity for this approach is O(log n).\n    return findNearestItemExponentialSearch$1(props, instanceProps, Math.max(0, lastMeasuredIndex), offset);\n  }\n};\n\nvar findNearestItemBinarySearch$1 = function findNearestItemBinarySearch(props, instanceProps, high, low, offset) {\n  while (low <= high) {\n    var middle = low + Math.floor((high - low) / 2);\n    var currentOffset = getItemMetadata$1(props, middle, instanceProps).offset;\n\n    if (currentOffset === offset) {\n      return middle;\n    } else if (currentOffset < offset) {\n      low = middle + 1;\n    } else if (currentOffset > offset) {\n      high = middle - 1;\n    }\n  }\n\n  if (low > 0) {\n    return low - 1;\n  } else {\n    return 0;\n  }\n};\n\nvar findNearestItemExponentialSearch$1 = function findNearestItemExponentialSearch(props, instanceProps, index, offset) {\n  var itemCount = props.itemCount;\n  var interval = 1;\n\n  while (index < itemCount && getItemMetadata$1(props, index, instanceProps).offset < offset) {\n    index += interval;\n    interval *= 2;\n  }\n\n  return findNearestItemBinarySearch$1(props, instanceProps, Math.min(index, itemCount - 1), Math.floor(index / 2), offset);\n};\n\nvar getEstimatedTotalSize = function getEstimatedTotalSize(_ref2, _ref3) {\n  var itemCount = _ref2.itemCount;\n  var itemMetadataMap = _ref3.itemMetadataMap,\n      estimatedItemSize = _ref3.estimatedItemSize,\n      lastMeasuredIndex = _ref3.lastMeasuredIndex;\n  var totalSizeOfMeasuredItems = 0; // Edge case check for when the number of items decreases while a scroll is in progress.\n  // https://github.com/bvaughn/react-window/pull/138\n\n  if (lastMeasuredIndex >= itemCount) {\n    lastMeasuredIndex = itemCount - 1;\n  }\n\n  if (lastMeasuredIndex >= 0) {\n    var itemMetadata = itemMetadataMap[lastMeasuredIndex];\n    totalSizeOfMeasuredItems = itemMetadata.offset + itemMetadata.size;\n  }\n\n  var numUnmeasuredItems = itemCount - lastMeasuredIndex - 1;\n  var totalSizeOfUnmeasuredItems = numUnmeasuredItems * estimatedItemSize;\n  return totalSizeOfMeasuredItems + totalSizeOfUnmeasuredItems;\n};\n\nvar VariableSizeList = /*#__PURE__*/createListComponent({\n  getItemOffset: function getItemOffset(props, index, instanceProps) {\n    return getItemMetadata$1(props, index, instanceProps).offset;\n  },\n  getItemSize: function getItemSize(props, index, instanceProps) {\n    return instanceProps.itemMetadataMap[index].size;\n  },\n  getEstimatedTotalSize: getEstimatedTotalSize,\n  getOffsetForIndexAndAlignment: function getOffsetForIndexAndAlignment(props, index, align, scrollOffset, instanceProps, scrollbarSize) {\n    var direction = props.direction,\n        height = props.height,\n        layout = props.layout,\n        width = props.width; // TODO Deprecate direction \"horizontal\"\n\n    var isHorizontal = direction === 'horizontal' || layout === 'horizontal';\n    var size = isHorizontal ? width : height;\n    var itemMetadata = getItemMetadata$1(props, index, instanceProps); // Get estimated total size after ItemMetadata is computed,\n    // To ensure it reflects actual measurements instead of just estimates.\n\n    var estimatedTotalSize = getEstimatedTotalSize(props, instanceProps);\n    var maxOffset = Math.max(0, Math.min(estimatedTotalSize - size, itemMetadata.offset));\n    var minOffset = Math.max(0, itemMetadata.offset - size + itemMetadata.size + scrollbarSize);\n\n    if (align === 'smart') {\n      if (scrollOffset >= minOffset - size && scrollOffset <= maxOffset + size) {\n        align = 'auto';\n      } else {\n        align = 'center';\n      }\n    }\n\n    switch (align) {\n      case 'start':\n        return maxOffset;\n\n      case 'end':\n        return minOffset;\n\n      case 'center':\n        return Math.round(minOffset + (maxOffset - minOffset) / 2);\n\n      case 'auto':\n      default:\n        if (scrollOffset >= minOffset && scrollOffset <= maxOffset) {\n          return scrollOffset;\n        } else if (scrollOffset < minOffset) {\n          return minOffset;\n        } else {\n          return maxOffset;\n        }\n\n    }\n  },\n  getStartIndexForOffset: function getStartIndexForOffset(props, offset, instanceProps) {\n    return findNearestItem$1(props, instanceProps, offset);\n  },\n  getStopIndexForStartIndex: function getStopIndexForStartIndex(props, startIndex, scrollOffset, instanceProps) {\n    var direction = props.direction,\n        height = props.height,\n        itemCount = props.itemCount,\n        layout = props.layout,\n        width = props.width; // TODO Deprecate direction \"horizontal\"\n\n    var isHorizontal = direction === 'horizontal' || layout === 'horizontal';\n    var size = isHorizontal ? width : height;\n    var itemMetadata = getItemMetadata$1(props, startIndex, instanceProps);\n    var maxOffset = scrollOffset + size;\n    var offset = itemMetadata.offset + itemMetadata.size;\n    var stopIndex = startIndex;\n\n    while (stopIndex < itemCount - 1 && offset < maxOffset) {\n      stopIndex++;\n      offset += getItemMetadata$1(props, stopIndex, instanceProps).size;\n    }\n\n    return stopIndex;\n  },\n  initInstanceProps: function initInstanceProps(props, instance) {\n    var _ref4 = props,\n        estimatedItemSize = _ref4.estimatedItemSize;\n    var instanceProps = {\n      itemMetadataMap: {},\n      estimatedItemSize: estimatedItemSize || DEFAULT_ESTIMATED_ITEM_SIZE$1,\n      lastMeasuredIndex: -1\n    };\n\n    instance.resetAfterIndex = function (index, shouldForceUpdate) {\n      if (shouldForceUpdate === void 0) {\n        shouldForceUpdate = true;\n      }\n\n      instanceProps.lastMeasuredIndex = Math.min(instanceProps.lastMeasuredIndex, index - 1); // We could potentially optimize further by only evicting styles after this index,\n      // But since styles are only cached while scrolling is in progress-\n      // It seems an unnecessary optimization.\n      // It's unlikely that resetAfterIndex() will be called while a user is scrolling.\n\n      instance._getItemStyleCache(-1);\n\n      if (shouldForceUpdate) {\n        instance.forceUpdate();\n      }\n    };\n\n    return instanceProps;\n  },\n  shouldResetStyleCacheOnItemSizeChange: false,\n  validateProps: function validateProps(_ref5) {\n    var itemSize = _ref5.itemSize;\n\n    if (process.env.NODE_ENV !== 'production') {\n      if (typeof itemSize !== 'function') {\n        throw Error('An invalid \"itemSize\" prop has been specified. ' + 'Value should be a function. ' + (\"\\\"\" + (itemSize === null ? 'null' : typeof itemSize) + \"\\\" was specified.\"));\n      }\n    }\n  }\n});\n\nvar FixedSizeGrid = /*#__PURE__*/createGridComponent({\n  getColumnOffset: function getColumnOffset(_ref, index) {\n    var columnWidth = _ref.columnWidth;\n    return index * columnWidth;\n  },\n  getColumnWidth: function getColumnWidth(_ref2, index) {\n    var columnWidth = _ref2.columnWidth;\n    return columnWidth;\n  },\n  getRowOffset: function getRowOffset(_ref3, index) {\n    var rowHeight = _ref3.rowHeight;\n    return index * rowHeight;\n  },\n  getRowHeight: function getRowHeight(_ref4, index) {\n    var rowHeight = _ref4.rowHeight;\n    return rowHeight;\n  },\n  getEstimatedTotalHeight: function getEstimatedTotalHeight(_ref5) {\n    var rowCount = _ref5.rowCount,\n        rowHeight = _ref5.rowHeight;\n    return rowHeight * rowCount;\n  },\n  getEstimatedTotalWidth: function getEstimatedTotalWidth(_ref6) {\n    var columnCount = _ref6.columnCount,\n        columnWidth = _ref6.columnWidth;\n    return columnWidth * columnCount;\n  },\n  getOffsetForColumnAndAlignment: function getOffsetForColumnAndAlignment(_ref7, columnIndex, align, scrollLeft, instanceProps, scrollbarSize) {\n    var columnCount = _ref7.columnCount,\n        columnWidth = _ref7.columnWidth,\n        width = _ref7.width;\n    var lastColumnOffset = Math.max(0, columnCount * columnWidth - width);\n    var maxOffset = Math.min(lastColumnOffset, columnIndex * columnWidth);\n    var minOffset = Math.max(0, columnIndex * columnWidth - width + scrollbarSize + columnWidth);\n\n    if (align === 'smart') {\n      if (scrollLeft >= minOffset - width && scrollLeft <= maxOffset + width) {\n        align = 'auto';\n      } else {\n        align = 'center';\n      }\n    }\n\n    switch (align) {\n      case 'start':\n        return maxOffset;\n\n      case 'end':\n        return minOffset;\n\n      case 'center':\n        // \"Centered\" offset is usually the average of the min and max.\n        // But near the edges of the list, this doesn't hold true.\n        var middleOffset = Math.round(minOffset + (maxOffset - minOffset) / 2);\n\n        if (middleOffset < Math.ceil(width / 2)) {\n          return 0; // near the beginning\n        } else if (middleOffset > lastColumnOffset + Math.floor(width / 2)) {\n          return lastColumnOffset; // near the end\n        } else {\n          return middleOffset;\n        }\n\n      case 'auto':\n      default:\n        if (scrollLeft >= minOffset && scrollLeft <= maxOffset) {\n          return scrollLeft;\n        } else if (minOffset > maxOffset) {\n          // Because we only take into account the scrollbar size when calculating minOffset\n          // this value can be larger than maxOffset when at the end of the list\n          return minOffset;\n        } else if (scrollLeft < minOffset) {\n          return minOffset;\n        } else {\n          return maxOffset;\n        }\n\n    }\n  },\n  getOffsetForRowAndAlignment: function getOffsetForRowAndAlignment(_ref8, rowIndex, align, scrollTop, instanceProps, scrollbarSize) {\n    var rowHeight = _ref8.rowHeight,\n        height = _ref8.height,\n        rowCount = _ref8.rowCount;\n    var lastRowOffset = Math.max(0, rowCount * rowHeight - height);\n    var maxOffset = Math.min(lastRowOffset, rowIndex * rowHeight);\n    var minOffset = Math.max(0, rowIndex * rowHeight - height + scrollbarSize + rowHeight);\n\n    if (align === 'smart') {\n      if (scrollTop >= minOffset - height && scrollTop <= maxOffset + height) {\n        align = 'auto';\n      } else {\n        align = 'center';\n      }\n    }\n\n    switch (align) {\n      case 'start':\n        return maxOffset;\n\n      case 'end':\n        return minOffset;\n\n      case 'center':\n        // \"Centered\" offset is usually the average of the min and max.\n        // But near the edges of the list, this doesn't hold true.\n        var middleOffset = Math.round(minOffset + (maxOffset - minOffset) / 2);\n\n        if (middleOffset < Math.ceil(height / 2)) {\n          return 0; // near the beginning\n        } else if (middleOffset > lastRowOffset + Math.floor(height / 2)) {\n          return lastRowOffset; // near the end\n        } else {\n          return middleOffset;\n        }\n\n      case 'auto':\n      default:\n        if (scrollTop >= minOffset && scrollTop <= maxOffset) {\n          return scrollTop;\n        } else if (minOffset > maxOffset) {\n          // Because we only take into account the scrollbar size when calculating minOffset\n          // this value can be larger than maxOffset when at the end of the list\n          return minOffset;\n        } else if (scrollTop < minOffset) {\n          return minOffset;\n        } else {\n          return maxOffset;\n        }\n\n    }\n  },\n  getColumnStartIndexForOffset: function getColumnStartIndexForOffset(_ref9, scrollLeft) {\n    var columnWidth = _ref9.columnWidth,\n        columnCount = _ref9.columnCount;\n    return Math.max(0, Math.min(columnCount - 1, Math.floor(scrollLeft / columnWidth)));\n  },\n  getColumnStopIndexForStartIndex: function getColumnStopIndexForStartIndex(_ref10, startIndex, scrollLeft) {\n    var columnWidth = _ref10.columnWidth,\n        columnCount = _ref10.columnCount,\n        width = _ref10.width;\n    var left = startIndex * columnWidth;\n    var numVisibleColumns = Math.ceil((width + scrollLeft - left) / columnWidth);\n    return Math.max(0, Math.min(columnCount - 1, startIndex + numVisibleColumns - 1 // -1 is because stop index is inclusive\n    ));\n  },\n  getRowStartIndexForOffset: function getRowStartIndexForOffset(_ref11, scrollTop) {\n    var rowHeight = _ref11.rowHeight,\n        rowCount = _ref11.rowCount;\n    return Math.max(0, Math.min(rowCount - 1, Math.floor(scrollTop / rowHeight)));\n  },\n  getRowStopIndexForStartIndex: function getRowStopIndexForStartIndex(_ref12, startIndex, scrollTop) {\n    var rowHeight = _ref12.rowHeight,\n        rowCount = _ref12.rowCount,\n        height = _ref12.height;\n    var top = startIndex * rowHeight;\n    var numVisibleRows = Math.ceil((height + scrollTop - top) / rowHeight);\n    return Math.max(0, Math.min(rowCount - 1, startIndex + numVisibleRows - 1 // -1 is because stop index is inclusive\n    ));\n  },\n  initInstanceProps: function initInstanceProps(props) {// Noop\n  },\n  shouldResetStyleCacheOnItemSizeChange: true,\n  validateProps: function validateProps(_ref13) {\n    var columnWidth = _ref13.columnWidth,\n        rowHeight = _ref13.rowHeight;\n\n    if (process.env.NODE_ENV !== 'production') {\n      if (typeof columnWidth !== 'number') {\n        throw Error('An invalid \"columnWidth\" prop has been specified. ' + 'Value should be a number. ' + (\"\\\"\" + (columnWidth === null ? 'null' : typeof columnWidth) + \"\\\" was specified.\"));\n      }\n\n      if (typeof rowHeight !== 'number') {\n        throw Error('An invalid \"rowHeight\" prop has been specified. ' + 'Value should be a number. ' + (\"\\\"\" + (rowHeight === null ? 'null' : typeof rowHeight) + \"\\\" was specified.\"));\n      }\n    }\n  }\n});\n\nvar FixedSizeList = /*#__PURE__*/createListComponent({\n  getItemOffset: function getItemOffset(_ref, index) {\n    var itemSize = _ref.itemSize;\n    return index * itemSize;\n  },\n  getItemSize: function getItemSize(_ref2, index) {\n    var itemSize = _ref2.itemSize;\n    return itemSize;\n  },\n  getEstimatedTotalSize: function getEstimatedTotalSize(_ref3) {\n    var itemCount = _ref3.itemCount,\n        itemSize = _ref3.itemSize;\n    return itemSize * itemCount;\n  },\n  getOffsetForIndexAndAlignment: function getOffsetForIndexAndAlignment(_ref4, index, align, scrollOffset, instanceProps, scrollbarSize) {\n    var direction = _ref4.direction,\n        height = _ref4.height,\n        itemCount = _ref4.itemCount,\n        itemSize = _ref4.itemSize,\n        layout = _ref4.layout,\n        width = _ref4.width;\n    // TODO Deprecate direction \"horizontal\"\n    var isHorizontal = direction === 'horizontal' || layout === 'horizontal';\n    var size = isHorizontal ? width : height;\n    var lastItemOffset = Math.max(0, itemCount * itemSize - size);\n    var maxOffset = Math.min(lastItemOffset, index * itemSize);\n    var minOffset = Math.max(0, index * itemSize - size + itemSize + scrollbarSize);\n\n    if (align === 'smart') {\n      if (scrollOffset >= minOffset - size && scrollOffset <= maxOffset + size) {\n        align = 'auto';\n      } else {\n        align = 'center';\n      }\n    }\n\n    switch (align) {\n      case 'start':\n        return maxOffset;\n\n      case 'end':\n        return minOffset;\n\n      case 'center':\n        {\n          // \"Centered\" offset is usually the average of the min and max.\n          // But near the edges of the list, this doesn't hold true.\n          var middleOffset = Math.round(minOffset + (maxOffset - minOffset) / 2);\n\n          if (middleOffset < Math.ceil(size / 2)) {\n            return 0; // near the beginning\n          } else if (middleOffset > lastItemOffset + Math.floor(size / 2)) {\n            return lastItemOffset; // near the end\n          } else {\n            return middleOffset;\n          }\n        }\n\n      case 'auto':\n      default:\n        if (scrollOffset >= minOffset && scrollOffset <= maxOffset) {\n          return scrollOffset;\n        } else if (scrollOffset < minOffset) {\n          return minOffset;\n        } else {\n          return maxOffset;\n        }\n\n    }\n  },\n  getStartIndexForOffset: function getStartIndexForOffset(_ref5, offset) {\n    var itemCount = _ref5.itemCount,\n        itemSize = _ref5.itemSize;\n    return Math.max(0, Math.min(itemCount - 1, Math.floor(offset / itemSize)));\n  },\n  getStopIndexForStartIndex: function getStopIndexForStartIndex(_ref6, startIndex, scrollOffset) {\n    var direction = _ref6.direction,\n        height = _ref6.height,\n        itemCount = _ref6.itemCount,\n        itemSize = _ref6.itemSize,\n        layout = _ref6.layout,\n        width = _ref6.width;\n    // TODO Deprecate direction \"horizontal\"\n    var isHorizontal = direction === 'horizontal' || layout === 'horizontal';\n    var offset = startIndex * itemSize;\n    var size = isHorizontal ? width : height;\n    var numVisibleItems = Math.ceil((size + scrollOffset - offset) / itemSize);\n    return Math.max(0, Math.min(itemCount - 1, startIndex + numVisibleItems - 1 // -1 is because stop index is inclusive\n    ));\n  },\n  initInstanceProps: function initInstanceProps(props) {// Noop\n  },\n  shouldResetStyleCacheOnItemSizeChange: true,\n  validateProps: function validateProps(_ref7) {\n    var itemSize = _ref7.itemSize;\n\n    if (process.env.NODE_ENV !== 'production') {\n      if (typeof itemSize !== 'number') {\n        throw Error('An invalid \"itemSize\" prop has been specified. ' + 'Value should be a number. ' + (\"\\\"\" + (itemSize === null ? 'null' : typeof itemSize) + \"\\\" was specified.\"));\n      }\n    }\n  }\n});\n\n// Pulled from react-compat\n// https://github.com/developit/preact-compat/blob/7c5de00e7c85e2ffd011bf3af02899b63f699d3a/src/index.js#L349\nfunction shallowDiffers(prev, next) {\n  for (var attribute in prev) {\n    if (!(attribute in next)) {\n      return true;\n    }\n  }\n\n  for (var _attribute in next) {\n    if (prev[_attribute] !== next[_attribute]) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\nvar _excluded = [\"style\"],\n    _excluded2 = [\"style\"];\n// It knows to compare individual style props and ignore the wrapper object.\n// See https://reactjs.org/docs/react-api.html#reactmemo\n\nfunction areEqual(prevProps, nextProps) {\n  var prevStyle = prevProps.style,\n      prevRest = _objectWithoutPropertiesLoose(prevProps, _excluded);\n\n  var nextStyle = nextProps.style,\n      nextRest = _objectWithoutPropertiesLoose(nextProps, _excluded2);\n\n  return !shallowDiffers(prevStyle, nextStyle) && !shallowDiffers(prevRest, nextRest);\n}\n\n// It knows to compare individual style props and ignore the wrapper object.\n// See https://reactjs.org/docs/react-component.html#shouldcomponentupdate\n\nfunction shouldComponentUpdate(nextProps, nextState) {\n  return !areEqual(this.props, nextProps) || shallowDiffers(this.state, nextState);\n}\n\nexport { FixedSizeGrid, FixedSizeList, VariableSizeGrid, VariableSizeList, areEqual, shouldComponentUpdate };\n//# sourceMappingURL=index.esm.js.map\n","import setPrototypeOf from \"./setPrototypeOf.js\";\nfunction _inheritsLoose(t, o) {\n  t.prototype = Object.create(o.prototype), t.prototype.constructor = t, setPrototypeOf(t, o);\n}\nexport { _inheritsLoose as default };","import React, { useState, useEffect, useMemo } from 'react';\r\nimport { Search, ArrowUp, ArrowDown, Globe, DollarSign, Check } from 'lucide-react';\r\nimport BuyModal from './BuyModal';\r\nimport { motion, AnimatePresence } from 'framer-motion';\r\nimport Header from '@/components/Header/Header';\r\nimport { StockDetail } from './StockDetail';\r\nimport LoadingSpinner from '../../ui/LoadingSpinner';\r\nimport emailjs from 'emailjs-com';\r\nimport useAuth from '../../hooks/useAuth';\r\nimport { useLocation } from 'react-router-dom';\r\nimport { symbols } from '../AllStocks/symbols';\r\nimport { FixedSizeList as List } from 'react-window';\r\n\r\n// Debounce hook\r\nconst useDebounce = (value: string, delay: number) => {\r\n  const [debouncedValue, setDebouncedValue] = useState(value);\r\n\r\n  useEffect(() => {\r\n    const handler = setTimeout(() => {\r\n      setDebouncedValue(value);\r\n    }, delay);\r\n\r\n    return () => {\r\n      clearTimeout(handler);\r\n    };\r\n  }, [value, delay]);\r\n\r\n  return debouncedValue;\r\n};\r\n\r\nexport const BuyStocks: React.FC = () => {\r\n  const { user } = useAuth();\r\n  const [stocks, setStocks] = useState(symbols);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState<string | null>(null);\r\n  const [searchTerm, setSearchTerm] = useState('');\r\n  const [selectedStock, setSelectedStock] = useState<typeof symbols[0] | null>(null);\r\n  const [selectedStockDetail, setSelectedStockDetail] = useState<typeof symbols[0] | null>(null);\r\n  const [priceChanges, setPriceChanges] = useState<Record<string, number>>({});\r\n  const [stockDetailLoading, setStockDetailLoading] = useState(false);\r\n  const [showSuccessPopup, setShowSuccessPopup] = useState(false);\r\n  const [isBuyModalOpen, setIsBuyModalOpen] = useState(false); // State for BuyModal visibility\r\n  const [email, setEmail] = useState(user?.email || '');\r\n  const location = useLocation();\r\n\r\n  // Debounced search term\r\n  const debouncedSearchTerm = useDebounce(searchTerm, 300);\r\n\r\n  // Set user email on component mount or when user changes\r\n  useEffect(() => {\r\n    if (user) {\r\n      setEmail(user.email || '');\r\n    }\r\n  }, [user]);\r\n\r\n  // Handle selected stock from navigation state\r\n  useEffect(() => {\r\n    if (location.state?.selectedStock) {\r\n      setSelectedStock(location.state.selectedStock);\r\n      setSelectedStockDetail(location.state.selectedStock);\r\n    }\r\n  }, [location.state]);\r\n\r\n  // Initialize EmailJS\r\n  useEffect(() => {\r\n    try {\r\n      emailjs.init('eyK87ZsxW822cQvyN'); // Replace with your EmailJS User ID\r\n    } catch (error) {\r\n      console.error('Failed to initialize EmailJS:', error);\r\n    }\r\n  }, []);\r\n\r\n  // Simulate loading stocks\r\n  useEffect(() => {\r\n    setLoading(true);\r\n    const timer = setTimeout(() => {\r\n      setStocks(symbols);\r\n      setLoading(false);\r\n    }, 4000);\r\n\r\n    return () => clearTimeout(timer); // Cleanup timer\r\n  }, []);\r\n\r\n  // Simulate live price updates\r\n  useEffect(() => {\r\n    const interval = setInterval(() => {\r\n      setStocks((prevStocks) =>\r\n        prevStocks.map((stock) => {\r\n          const change = (Math.random() - 0.5) * 2;\r\n          const newPrice = (stock.price || 100) + change;\r\n\r\n          setPriceChanges((prev) => ({\r\n            ...prev,\r\n            [stock.symbol]: change,\r\n          }));\r\n\r\n          return {\r\n            ...stock,\r\n            price: newPrice,\r\n            change,\r\n            changePercent: (change / (stock.price || 100)) * 100,\r\n          };\r\n        })\r\n      );\r\n    }, 5000);\r\n\r\n    return () => clearInterval(interval); // Cleanup interval\r\n  }, []);\r\n\r\n  // Handle stock selection\r\n  const handleStockSelect = async (stock: typeof symbols[0]) => {\r\n    setStockDetailLoading(true);\r\n    setSelectedStockDetail(stock);\r\n\r\n    try {\r\n      const detailedStock = { ...stock };\r\n      setSelectedStockDetail(detailedStock);\r\n    } catch (error) {\r\n      console.error('Failed to load stock details:', error);\r\n      setError('Failed to load stock details');\r\n    } finally {\r\n      setStockDetailLoading(false);\r\n    }\r\n  };\r\n\r\n  // Handle successful transaction\r\n  const handleTransactionSuccess = async (stock: typeof symbols[0], quantity: number, totalPrice: number) => {\r\n    if (typeof totalPrice !== 'number' || isNaN(totalPrice)) {\r\n      console.error('Invalid totalPrice:', totalPrice);\r\n      return;\r\n    }\r\n\r\n    setShowSuccessPopup(true);\r\n    setTimeout(() => {\r\n      setShowSuccessPopup(false);\r\n    }, 3000);\r\n\r\n    if (user?.email) {\r\n      try {\r\n        const templateParams = {\r\n          to_email: user.email,\r\n          stock_symbol: stock.symbol,\r\n          stock_name: stock.name,\r\n          quantity: quantity,\r\n          total_price: totalPrice.toFixed(2),\r\n        };\r\n\r\n        await emailjs.send(\r\n          'service_box535f', // Replace with your EmailJS Service ID\r\n          'template_l4fugpk', // Replace with your EmailJS Template ID\r\n          templateParams\r\n        );\r\n\r\n        console.log('Email notification sent successfully!');\r\n      } catch (error) {\r\n        console.error('Failed to send email notification:', error);\r\n      }\r\n    } else {\r\n      console.error('User email not found.');\r\n      alert('User email not found. Please update your email in settings.');\r\n    }\r\n  };\r\n\r\n  // Filter stocks based on debounced search term\r\n  const filteredStocks = useMemo(() => {\r\n    return stocks.filter(\r\n      (stock) =>\r\n        stock.symbol.toLowerCase().includes(debouncedSearchTerm.toLowerCase()) ||\r\n        stock.name.toLowerCase().includes(debouncedSearchTerm.toLowerCase())\r\n    );\r\n  }, [debouncedSearchTerm, stocks]);\r\n\r\n  const Row = ({ index, style }: { index: number; style: React.CSSProperties }) => {\r\n    const stock = filteredStocks[index];\r\n    const isSelected = selectedStockDetail?.symbol === stock.symbol;\r\n    const [stockData, setStockData] = useState<typeof stock | null>(null);\r\n    const [loading, setLoading] = useState<boolean>(true);\r\n    const API_KEY = 'ctre6q9r01qhb16mmh70ctre6q9r01qhb16mmh7g'; // Replace with your Finnhub API key\r\n  \r\n    // Fetch stock data from Finnhub API only for the first 15 stocks\r\n    useEffect(() => {\r\n      if (index >= 15) {\r\n        setStockData({\r\n          ...stock,\r\n          price: stock.price || 0,\r\n          change: 0,\r\n          changePercent: 0,\r\n          highPrice: 0,\r\n          lowPrice: 0,\r\n          openPrice: 0,\r\n          previousClose: 0,\r\n        });\r\n        setLoading(false);\r\n        return;\r\n      }\r\n  \r\n      const fetchStockData = async () => {\r\n        try {\r\n          const response = await fetch(\r\n            `https://finnhub.io/api/v1/quote?symbol=${stock.symbol}&token=${API_KEY}`\r\n          );\r\n          if (!response.ok) {\r\n            throw new Error('Failed to fetch stock data');\r\n          }\r\n          const data = await response.json();\r\n  \r\n          // Update stock data with API response\r\n          setStockData({\r\n            ...stock,\r\n            price: data.c || 0, // Current price\r\n            change: data.d || 0, // Change\r\n            changePercent: data.dp || 0, // Change percentage\r\n            highPrice: data.h || 0, // High price\r\n            lowPrice: data.l || 0, // Low price\r\n            openPrice: data.o || 0, // Open price\r\n            previousClose: data.pc || 0, // Previous close price\r\n          });\r\n        } catch (error) {\r\n          console.error(`Failed to fetch data for ${stock.symbol}:`, error);\r\n          // Fallback to static data if API fails\r\n          setStockData({\r\n            ...stock,\r\n            price: stock.price || 0,\r\n            change: 0,\r\n            changePercent: 0,\r\n            highPrice: 0,\r\n            lowPrice: 0,\r\n            openPrice: 0,\r\n            previousClose: 0,\r\n          });\r\n        } finally {\r\n          setLoading(false);\r\n        }\r\n      };\r\n  \r\n      fetchStockData();\r\n    }, [stock.symbol, index]);\r\n  \r\n    if (loading || !stockData) {\r\n      return (\r\n        <motion.div\r\n          style={{ ...style, marginBottom: '16px' }}\r\n          className=\"p-4 w-98 bg-white hover:bg-gray-50 transition-colors duration-200 cursor-pointer\"\r\n        >\r\n          <div className=\"flex justify-between items-start\">\r\n            <div>\r\n              <h3 className=\"font-medium text-sm text-black\">{stock.symbol}</h3>\r\n              <p className=\"text-xs text-gray-600\">{stock.name}</p>\r\n            </div>\r\n            <div className=\"text-right\">\r\n              <p className=\"font-medium text-sm text-black\">Loading...</p>\r\n            </div>\r\n          </div>\r\n        </motion.div>\r\n      );\r\n    }\r\n  \r\n    return (\r\n      <motion.div\r\n        style={{ ...style, marginBottom: '16px' }}\r\n        layout\r\n        className={`p-4 w-98 ${\r\n          isSelected ? 'bg-gray-200 rounded' : 'bg-white hover:bg-gray-50'\r\n        } transition-colors duration-200 cursor-pointer`}\r\n        onClick={() => handleStockSelect(stockData)}\r\n      >\r\n        <div className=\"flex justify-between items-start\">\r\n          <div>\r\n            <h3 className=\"font-medium text-sm text-black\">{stockData.symbol}</h3>\r\n            <p className=\"text-xs text-gray-600\">{stockData.name}</p>\r\n          </div>\r\n          <motion.div\r\n            animate={{\r\n              color: (stockData.changePercent || 0) >= 0\r\n                ? '#16a34a' // Green for positive change\r\n                : '#dc2626', // Red for negative change\r\n            }}\r\n            className=\"text-right\"\r\n          >\r\n            <p className=\"font-medium text-sm text-black\">₹{(stockData.price || 0).toFixed(2)}</p>\r\n            <p className=\"text-xs flex items-center gap-1\">\r\n              {(stockData.changePercent !== undefined) && (\r\n                <>\r\n                  {(stockData.changePercent >= 0) ? <ArrowUp size={10} /> : <ArrowDown size={10} />}\r\n                  {Math.abs(stockData.changePercent).toFixed(2)}%\r\n                </>\r\n              )}\r\n            </p>\r\n          </motion.div>\r\n        </div>\r\n      </motion.div>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div className=\"min-h-screen w-full  text-black\">\r\n      <Header />\r\n      <div>\r\n        <div className=\"mt-28 absolute flex z-20 px-8 justify-end w-full\">\r\n          {selectedStockDetail && (\r\n            <button\r\n              onClick={() => setIsBuyModalOpen(true)} // Open BuyModal on click\r\n              className=\"px-8 py-3 bg-black text-white font-medium rounded-full hover:bg-black/90 transition-all flex items-center gap-2\"\r\n            >\r\n              <DollarSign size={16} />\r\n              Buy {selectedStockDetail.symbol}\r\n            </button>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"flex h-screen pt-20\">\r\n        <div className=\"w-98 bg-white border-r  border-gray-200 overflow-hidden\">\r\n          <div className=\"p-6 \">\r\n            <div className=\"relative mb-6\">\r\n              <Search className=\"absolute left-4 top-1/2 transform -translate-y-1/2 text-gray-400\" size={16} />\r\n              <input\r\n                type=\"text\"\r\n                placeholder=\"Search stocks...\"\r\n                value={searchTerm}\r\n                onChange={(e) => setSearchTerm(e.target.value)}\r\n                className=\"w-full bg-gray-50 border border-gray-200 rounded-2xl pl-10 pr-4 py-2 text-sm focus:outline-none focus:ring-2 focus:ring-gray-300\"\r\n              />\r\n            </div>\r\n\r\n            <div className=\"space-y-4 overflow-y-auto w-[400px] hide-scrollbar\">\r\n              {loading ? (\r\n               <LoadingSpinner />\r\n              ) : (\r\n                <List\r\n                  height={600}\r\n                  itemCount={filteredStocks.length}\r\n                  itemSize={80}\r\n                  width={400}\r\n                >\r\n                  {Row}\r\n                </List>\r\n              )}\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"flex-1\">\r\n          {stockDetailLoading ? (\r\n            <LoadingSpinner />\r\n          ) : selectedStockDetail ? (\r\n            <StockDetail\r\n              stock={selectedStockDetail}\r\n              onBuyClick={setSelectedStock}\r\n              loading={loading}\r\n            />\r\n          ) : (\r\n            <div className=\"h-full flex items-center justify-center text-gray-600\">\r\n              <div className=\"text-center\">\r\n                <Globe size={32} className=\"mx-auto mb-4 opacity-60\" />\r\n                <p className=\"text-lg\">Select a stock to view details</p>\r\n              </div>\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      <AnimatePresence>\r\n        {showSuccessPopup && (\r\n          <motion.div\r\n            initial={{ opacity: 0, y: 50 }}\r\n            animate={{ opacity: 1, y: 0 }}\r\n            exit={{ opacity: 0, y: -50 }}\r\n            className=\"fixed inset-0 flex items-center justify-center z-50\"\r\n          >\r\n            <div className=\"bg-black/50 backdrop-blur-sm fixed inset-0\" />\r\n            <motion.div\r\n              initial={{ scale: 0.8 }}\r\n              animate={{ scale: 1 }}\r\n              exit={{ scale: 0.8 }}\r\n              className=\"bg-white/90 backdrop-blur-lg rounded-xl shadow-2xl p-6 max-w-md w-full mx-4 border border-gray-200\"\r\n            >\r\n              <div className=\"flex flex-col items-center gap-4 text-center\">\r\n                <div className=\"bg-green-500/10 rounded-full p-3\">\r\n                  <Check className=\"w-6 h-6 text-green-500\" />\r\n                </div>\r\n                <h2 className=\"text-xl font-semibold text-gray-900\">Success!</h2>\r\n                <p className=\"text-gray-600\">\r\n                  Transaction completed successfully! A notification has been sent to your email.\r\n                </p>\r\n                <button\r\n                  onClick={() => setShowSuccessPopup(false)}\r\n                  className=\"mt-4 px-6 py-2 bg-green-500 text-white rounded-lg hover:bg-green-600 transition-colors\"\r\n                >\r\n                  Close\r\n                </button>\r\n              </div>\r\n            </motion.div>\r\n          </motion.div>\r\n        )}\r\n      </AnimatePresence>\r\n\r\n      {/* Render BuyModal only when isBuyModalOpen is true */}\r\n      <AnimatePresence>\r\n        {isBuyModalOpen && selectedStockDetail && (\r\n          <BuyModal\r\n            stock={selectedStockDetail}\r\n            onClose={() => setIsBuyModalOpen(false)} // Close BuyModal\r\n            onSuccess={(quantity, totalPrice) =>\r\n              handleTransactionSuccess(selectedStockDetail, quantity, totalPrice)\r\n            }\r\n          />\r\n        )}\r\n      </AnimatePresence>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default BuyStocks;"],"names":["_extends","Object","assign","bind","n","e","arguments","length","t","r","hasOwnProperty","call","apply","_setPrototypeOf","setPrototypeOf","__proto__","_assertThisInitialized","ReferenceError","BuyModal","stock","onClose","onSuccess","quantity","setQuantity","useState","isAuthenticated","useAuth","showAuthModal","setShowAuthModal","isProcessing","error","handlePurchase","setIsProcessing","setError","token","user","async","response","fetch","method","headers","Authorization","body","JSON","stringify","stockSymbol","symbol","stockName","name","price","userId","email","ok","errorData","json","Error","message","err","useBuyStock","totalPrice","jsxRuntimeExports","jsxs","Fragment","children","jsx","className","onClick","XIcon","size","Math","max","MinusIcon","PlusIcon","_a","toFixed","disabled","AuthModal","isOpen","generateInitialData","timeframe","basePrice","dataPoints","periods","ALL","prices","steps","volatility","i","smoothedChange","random","push","generateRandomWalk","now","Date","date","setMinutes","getMinutes","setHours","getHours","setDate","getDate","unshift","toISOString","Number","StockChart","timeFrame","onTimeframeChange","stockData","setStockData","isLoading","setIsLoading","hoveredData","setHoveredData","updatePrice","useCallback","lastPrice","trend","changePercent","change","newPrice","newDataPoint","prevData","slice","useEffect","loadDelay","setTimeout","initialData","clearTimeout","interval","setInterval","clearInterval","priceChange","CustomTooltip","active","payload","label","value","toLocaleTimeString","hour","minute","toLocaleDateString","month","day","motion","div","animate","rotate","transition","duration","repeat","Infinity","ease","ResponsiveContainer","width","height","AreaChart","data","onMouseMove","activePayload","onMouseLeave","id","x1","y1","x2","y2","offset","stopColor","stopOpacity","CartesianGrid","strokeDasharray","stroke","vertical","XAxis","dataKey","tickFormatter","d","tick","fill","fontSize","axisLine","tickLine","YAxis","domain","tickCount","Tooltip","content","cursor","strokeWidth","Area","type","animationDuration","dot","activeDot","initial","opacity","y","StockDetail","onBuyClick","loading","setTimeFrame","currentTime","setCurrentTime","recommendationTrends","setRecommendationTrends","trendsLoading","setTrendsLoading","isModalOpen","setIsModalOpen","console","fetchRecommendationTrends","timer","Globe","trendColors","closeModal","AnimatePresence","mode","exit","currentPrice","span","color","ArrowUp","ArrowDown","abs","map","tf","index","period","style","strongBuy","buy","hold","sell","strongSell","scale","stopPropagation","X","safeIsNaN","isNaN","areInputsEqual","newInputs","lastInputs","first","second","memoizeOne","resultFn","isEqual","lastThis","lastResult","lastArgs","calledOnce","newArgs","_i","this","performance","cancelTimeout","timeoutID","cancelAnimationFrame","getScrollbarSize","recalculate","document","createElement","overflow","appendChild","offsetWidth","clientWidth","removeChild","cachedRTLResult","getRTLOffsetType","outerDiv","outerStyle","direction","innerDiv","innerStyle","scrollLeft","defaultItemKey$1","createListComponent","_ref","_class","getItemOffset","getEstimatedTotalSize","getItemSize","getOffsetForIndexAndAlignment","getStartIndexForOffset","getStopIndexForStartIndex","initInstanceProps","shouldResetStyleCacheOnItemSizeChange","validateProps","_PureComponent","o","List","props","_this","_instanceProps","_outerRef","_resetIsScrollingTimeoutId","state","instance","isScrolling","scrollDirection","scrollOffset","initialScrollOffset","scrollUpdateWasRequested","_callOnItemsRendered","overscanStartIndex","overscanStopIndex","visibleStartIndex","visibleStopIndex","onItemsRendered","_callOnScroll","onScroll","_getItemStyle","_this$props","itemSize","layout","itemStyleCache","_getItemStyleCache","_offset","isHorizontal","isRtl","offsetHorizontal","position","left","right","top","_","__","___","_onScrollHorizontal","event","_event$currentTarget","currentTarget","scrollWidth","setState","prevState","min","_resetIsScrollingDebounced","_onScrollVertical","_event$currentTarget2","clientHeight","scrollHeight","scrollTop","_outerRefSetter","ref","outerRef","current","callback","delay","start","_resetIsScrolling","requestAnimationFrame","prototype","create","constructor","getDerivedStateFromProps","nextProps","validateSharedProps$1","_proto","scrollTo","scrollToItem","align","_this$props2","itemCount","scrollbarSize","componentDidMount","_this$props3","_callPropsCallbacks","componentDidUpdate","_this$props4","_this$state","componentWillUnmount","render","_this$props5","innerRef","innerElementType","innerTagName","itemData","_this$props5$itemKey","itemKey","outerElementType","outerTagName","useIsScrolling","_this$_getRangeToRend","_getRangeToRender","startIndex","stopIndex","items","_index","key","estimatedTotalSize","WebkitOverflowScrolling","willChange","pointerEvents","_this$_getRangeToRend2","_overscanStartIndex","_overscanStopIndex","_visibleStartIndex","_visibleStopIndex","_this$state2","_scrollDirection","_scrollOffset","_scrollUpdateWasRequested","_this$props6","overscanCount","_this$state3","overscanBackward","overscanForward","PureComponent","defaultProps","_ref2","_ref3","FixedSizeList","_ref4","instanceProps","lastItemOffset","maxOffset","minOffset","middleOffset","round","ceil","floor","_ref5","_ref6","numVisibleItems","_ref7","BuyStocks","stocks","setStocks","symbols","setLoading","searchTerm","setSearchTerm","selectedStock","setSelectedStock","selectedStockDetail","setSelectedStockDetail","priceChanges","setPriceChanges","stockDetailLoading","setStockDetailLoading","showSuccessPopup","setShowSuccessPopup","isBuyModalOpen","setIsBuyModalOpen","setEmail","location","useLocation","debouncedSearchTerm","debouncedValue","setDebouncedValue","handler","useDebounce","emailjs","init","prevStocks","prev","filteredStocks","useMemo","filter","toLowerCase","includes","Header","DollarSign","Search","placeholder","onChange","target","LoadingSpinner","isSelected","highPrice","lowPrice","openPrice","previousClose","c","dp","h","l","pc","fetchStockData","marginBottom","detailedStock","handleStockSelect","Check","templateParams","to_email","stock_symbol","stock_name","total_price","send","log","alert","handleTransactionSuccess"],"mappings":"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","x_google_ignoreList":[0,1,2,7,8,9]}