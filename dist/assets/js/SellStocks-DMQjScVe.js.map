{"version":3,"file":"SellStocks-DMQjScVe.js","sources":["../../../src/components/pages/SellStocks/SellModal.tsx","../../../src/components/portfolio/Asserts/Portfolio.ts","../../../src/components/pages/SellStocks/StockChart.tsx","../../../src/components/pages/SellStocks/StockDetail.tsx","../../../src/components/pages/SellStocks/SellStocks.tsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { MinusIcon, PlusIcon, XIcon } from 'lucide-react';\r\nimport useAuth from '../../hooks/useAuth';\r\nimport AuthModal from '../../Auth/AuthModal';\r\n\r\ninterface SellModalProps {\r\n  stock?: {\r\n    symbol: string;\r\n    name: string;\r\n    price: number;\r\n    quantity: number;\r\n  };\r\n  onClose: () => void;\r\n  onSuccess: (quantity: number) => void;\r\n}\r\n\r\nconst SellModal: React.FC<SellModalProps> = ({ stock, onClose, onSuccess }) => {\r\n  const [quantity, setQuantity] = useState(1);\r\n  const { isAuthenticated } = useAuth();\r\n  const [showAuthModal, setShowAuthModal] = useState(false);\r\n  const [error, setError] = useState<string | null>(null);\r\n\r\n  const handleSell = async () => {\r\n    if (!isAuthenticated) {\r\n      setShowAuthModal(true);\r\n      return;\r\n    }\r\n\r\n    if (quantity <= 0) {\r\n      setError('Quantity must be greater than 0.');\r\n      return;\r\n    }\r\n\r\n    if (!stock || quantity > stock.quantity) {\r\n      setError('Quantity exceeds available shares.');\r\n      return;\r\n    }\r\n\r\n    setError(null);\r\n    onSuccess(quantity);\r\n    onClose();\r\n  };\r\n\r\n  if (!stock) {\r\n    return null;\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <div className=\"fixed inset-0 bg-black/80 backdrop-blur-xl z-50 flex items-center justify-center\">\r\n        <div className=\"bg-[#111111] backdrop-blur-xl rounded-2xl p-8 w-full max-w-md mx-4 border border-white/10\">\r\n          <div className=\"flex justify-between items-center mb-8\">\r\n            <div>\r\n              <h2 className=\"text-2xl font-medium text-white\">{stock.name}</h2>\r\n              <p className=\"text-white/60 text-sm\">{stock.symbol}</p>\r\n            </div>\r\n            <button\r\n              onClick={onClose}\r\n              className=\"text-white/60 hover:text-white transition-colors p-2 rounded-full hover:bg-white/5\"\r\n            >\r\n              <XIcon size={24} />\r\n            </button>\r\n          </div>\r\n\r\n          <div className=\"space-y-8\">\r\n            <div className=\"flex flex-col items-center space-y-4\">\r\n              <span className=\"text-sm text-white/60\">Quantity</span>\r\n              <div className=\"flex items-center space-x-6\">\r\n                <button\r\n                  onClick={() => setQuantity(Math.max(1, quantity - 1))}\r\n                  className=\"w-12 h-12 rounded-full bg-white/5 hover:bg-white/10 flex items-center justify-center text-white border border-white/10 transition-all\"\r\n                >\r\n                  <MinusIcon size={20} />\r\n                </button>\r\n                <span className=\"text-4xl font-light text-white w-16 text-center\">\r\n                  {quantity}\r\n                </span>\r\n                <button\r\n                  onClick={() => setQuantity(Math.min(stock.quantity, quantity + 1))}\r\n                  className=\"w-12 h-12 rounded-full bg-white/5 hover:bg-white/10 flex items-center justify-center text-white border border-white/10 transition-all\"\r\n                >\r\n                  <PlusIcon size={20} />\r\n                </button>\r\n              </div>\r\n              <p className=\"text-white/40 text-sm\">\r\n                Available: {stock.quantity} shares\r\n              </p>\r\n            </div>\r\n\r\n            <div className=\"space-y-4 border-t border-white/10 pt-6\">\r\n              <div className=\"flex justify-between text-sm\">\r\n                <span className=\"text-white/60\">Price per share</span>\r\n                <span className=\"text-white font-medium\">₹{stock.currentPrice?.toFixed(2)}</span>\r\n              </div>\r\n              <div className=\"flex justify-between text-xl\">\r\n                <span className=\"text-white/80\">Total Amount</span>\r\n                <span className=\"text-white font-medium\">₹{(stock.currentPrice * quantity).toFixed(2)}</span>\r\n              </div>\r\n            </div>\r\n\r\n            {error && (\r\n              <div className=\"bg-red-500/10 border border-red-500/20 rounded-xl p-4 text-red-400 text-sm\">\r\n                {error}\r\n              </div>\r\n            )}\r\n\r\n            <div className=\"space-y-3 pt-4\">\r\n              <button\r\n                onClick={handleSell}\r\n                className=\"w-full py-4 bg-white text-black rounded-full font-medium hover:bg-white/90 transition-all disabled:opacity-50 disabled:cursor-not-allowed text-sm uppercase tracking-wide\"\r\n              >\r\n                Sell Now\r\n              </button>\r\n              <button\r\n                onClick={onClose}\r\n                className=\"w-full py-4 text-white/60 font-medium hover:text-white transition-colors text-sm uppercase tracking-wide\"\r\n              >\r\n                Cancel\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <AuthModal\r\n        isOpen={showAuthModal}\r\n        onClose={() => setShowAuthModal(false)}\r\n        onSuccess={() => {\r\n          setShowAuthModal(false);\r\n          if (!stock) return;\r\n          handleSell();\r\n        }}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default SellModal;","import { ReactNode } from \"react\";\r\n\r\nexport interface Portfolio {\r\n  quantity: number;\r\n  id: number;\r\n  symbol: string;\r\n  name: string;\r\n  shares: number;\r\n  value: number;\r\n  change: number;\r\n  averagePrice: number;\r\n  currentPrice: number;\r\n  totalReturn: number;\r\n  lastUpdated: string;\r\n}\r\n\r\nexport interface PortfolioStats {\r\n  dailyPerformance: Array<{\r\n    date: string;\r\n    value: number;\r\n  }>;\r\n  totalInvestment: number;\r\n}\r\n\r\nexport interface ApiResponse<T> {\r\n  success: boolean;\r\n  data: T;\r\n}\r\n\r\nexport interface Transaction {\r\n  id: number;\r\n  symbol: string;\r\n  type: 'BUY' | 'SELL';\r\n  quantity: number;\r\n  price: number;\r\n  totalAmount: number;\r\n  date: string;\r\n  status: string;\r\n}\r\n\r\n\r\nexport interface PortfolioHolding {\r\n  name: ReactNode;\r\n\r\n  symbol: string;\r\n\r\n  quantity: number;\r\n\r\n  averagePrice: number;\r\n\r\n  currentPrice: number;\r\n\r\n  marketValue?: number;\r\n\r\n  totalReturn?: number;\r\n\r\n}\r\n\r\n\r\nexport interface DailyPerformance {\r\n  date: string;\r\n  value: number;\r\n  change: number;\r\n}\r\n\r\nexport interface PortfolioAction {\r\n  id: string;\r\n  type: 'BUY' | 'SELL';\r\n  symbol: string;\r\n  quantity: number;\r\n  price: number;\r\n  timestamp: string;\r\n}\r\n\r\nexport const formatMoney = (value: number): string => {\r\n\r\n  return new Intl.NumberFormat('en-US', {\r\n\r\n    style: 'currency',\r\n\r\n    currency: 'USD'\r\n\r\n  }).format(value);\r\n\r\n};\r\n\r\n\r\n\r\nexport const formatPercent = (value: number): string => {\r\n\r\n  return new Intl.NumberFormat('en-US', {\r\n\r\n    style: 'percent',\r\n\r\n    minimumFractionDigits: 2,\r\n\r\n    maximumFractionDigits: 2\r\n\r\n  }).format(value / 100);\r\n\r\n};\r\n\r\nexport interface LoginActivityData {\r\n  date: string;\r\n  count: number;\r\n  details?: {\r\n    browser: string;\r\n    platform: string;\r\n    location?: string;\r\n  };\r\n}\r\n\r\nexport interface ActivityStats {\r\n  totalLogins: number;\r\n  averagePerDay: number;\r\n  mostActiveDay: {\r\n    date: string;\r\n    count: number;\r\n  };\r\n  lastSevenDays: {\r\n    dates: string[];\r\n    counts: number[];\r\n  };\r\n}","import React, { useState, useEffect, useCallback } from 'react';\r\nimport { motion } from 'framer-motion';\r\nimport {\r\n  AreaChart, Area, XAxis, YAxis, Tooltip, ResponsiveContainer,\r\n  CartesianGrid\r\n} from 'recharts';\r\nimport { ArrowUp, ArrowDown } from 'lucide-react';\r\n\r\ninterface StockChartProps {\r\n  stock: {\r\n    symbol: string;\r\n    name: string;\r\n    price: number;\r\n    change: number;\r\n    changePercent: number;\r\n  };\r\n  timeFrame: string;\r\n  currentPrice: number; // Add currentPrice prop\r\n  onTimeframeChange?: (timeframe: string) => void;\r\n}\r\n\r\ninterface DataPoint {\r\n  date: string;\r\n  price: number;\r\n}\r\n\r\nconst generateRandomWalk = (basePrice: number, steps: number, volatility: number = 0.002) => {\r\n  let prices = [basePrice];\r\n  for (let i = 1; i < steps; i++) {\r\n    const change = prices[i - 1] * volatility * (Math.random() - 0.5);\r\n    const smoothedChange = change * 0.5 + (prices[i - 1] - (i > 1 ? prices[i - 2] : basePrice)) * 0.3;\r\n    prices.push(prices[i - 1] + smoothedChange);\r\n  }\r\n  return prices;\r\n};\r\n\r\nconst generateInitialData = (timeframe: string, basePrice: number = 100) => {\r\n  const dataPoints: DataPoint[] = [];\r\n  const periods = {\r\n    '1D': 78,    // 5-minute intervals for a trading day\r\n    '1W': 168,   // Hourly for a week\r\n    '1M': 30,    // Daily for a month\r\n    '3M': 90,    // Daily for 3 months\r\n    '1Y': 252,   // Trading days in a year\r\n    'ALL': 1260  // 5 years of trading days\r\n  }[timeframe] || 78;\r\n\r\n  const prices = generateRandomWalk(basePrice, periods);\r\n  const now = new Date();\r\n\r\n  for (let i = 0; i < periods; i++) {\r\n    const date = new Date(now);\r\n    if (timeframe === '1D') {\r\n      date.setMinutes(date.getMinutes() - (i * 5));\r\n    } else if (timeframe === '1W') {\r\n      date.setHours(date.getHours() - i);\r\n    } else {\r\n      date.setDate(date.getDate() - i);\r\n    }\r\n\r\n    dataPoints.unshift({\r\n      date: date.toISOString(),\r\n      price: Number(prices[i].toFixed(2))\r\n    });\r\n  }\r\n\r\n  return dataPoints;\r\n};\r\n\r\nexport const StockChart: React.FC<StockChartProps> = ({ \r\n  stock, \r\n  timeFrame,\r\n  currentPrice, // Destructure currentPrice\r\n  onTimeframeChange \r\n}) => {\r\n  const [stockData, setStockData] = useState<DataPoint[]>([]);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [hoveredData, setHoveredData] = useState<DataPoint | null>(null);\r\n  \r\n  const updatePrice = useCallback(() => {\r\n    if (stockData.length === 0) return;\r\n    \r\n    const lastPrice = stockData[stockData.length - 1].price;\r\n    const volatility = 0.0001;\r\n    const trend = stock.changePercent / 100;\r\n    const change = lastPrice * volatility * (Math.random() - 0.5 + trend * 0.3);\r\n    const newPrice = Number((lastPrice + change).toFixed(2));\r\n    \r\n    const newDataPoint = {\r\n      date: new Date().toISOString(),\r\n      price: newPrice\r\n    };\r\n\r\n    setStockData(prevData => {\r\n      const newData = [...prevData.slice(1), newDataPoint];\r\n      return newData;\r\n    });\r\n  }, [stockData, stock.changePercent]);\r\n\r\n  useEffect(() => {\r\n    setIsLoading(true);\r\n    \r\n    const loadDelay = setTimeout(() => {\r\n      const initialData = generateInitialData(timeFrame, currentPrice); // Use currentPrice here\r\n      setStockData(initialData);\r\n      setIsLoading(false);\r\n    }, 100);\r\n\r\n    return () => clearTimeout(loadDelay);\r\n  }, [timeFrame, currentPrice]); // Add currentPrice to dependency array\r\n\r\n  useEffect(() => {\r\n    if (isLoading || timeFrame !== '1D') return;\r\n\r\n    const interval = setInterval(() => {\r\n      updatePrice();\r\n    }, 5000 + Math.random() * 2000);\r\n\r\n    return () => clearInterval(interval);\r\n  }, [isLoading, updatePrice, timeFrame]);\r\n\r\n  const priceChange = stockData.length > 0 \r\n    ? stockData[stockData.length - 1].price - stockData[0].price \r\n    : 0;\r\n\r\n  const CustomTooltip = ({ active, payload, label }: any) => {\r\n    if (active && payload && payload.length) {\r\n      const date = new Date(label);\r\n      const price = payload[0].value;\r\n      \r\n      return (\r\n        <div className=\"bg-white/90 backdrop-blur-xl border border-gray-200 rounded-lg p-4 shadow-xl\">\r\n          <p className=\"text-gray-600 text-sm mb-1\">\r\n            {timeFrame === '1D' \r\n              ? date.toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' })\r\n              : date.toLocaleDateString([], { month: 'short', day: 'numeric' })}\r\n          </p>\r\n          <p className=\"text-black text-lg font-medium\">\r\n            ₹{price.toFixed(2)} {/* Display price in rupees */}\r\n          </p>\r\n        </div>\r\n      );\r\n    }\r\n    return null;\r\n  };\r\n\r\n  return (\r\n    <div className=\"h-full relative bg-white\">\r\n      {isLoading ? (\r\n        <div className=\"h-full flex items-center justify-center\">\r\n          <div className=\"flex flex-col items-center gap-3\">\r\n            <motion.div\r\n              animate={{ rotate: 360 }}\r\n              transition={{ duration: 1, repeat: Infinity, ease: \"linear\" }}\r\n              className=\"w-8 h-8 border-2 border-gray-200 border-t-gray-400 rounded-full\"\r\n            />\r\n            <span className=\"text-gray-400 text-sm font-medium\">Loading chart...</span>\r\n          </div>\r\n        </div>\r\n      ) : (\r\n        <ResponsiveContainer width=\"95%\" height=\"100%\">\r\n          <AreaChart \r\n            data={stockData}\r\n            onMouseMove={(data: any) => {\r\n              if (data.activePayload) {\r\n                setHoveredData(data.activePayload[0].payload);\r\n              }\r\n            }}\r\n            onMouseLeave={() => setHoveredData(null)}\r\n          >\r\n            <defs>\r\n              <linearGradient id=\"colorPrice\" x1=\"0\" y1=\"0\" x2=\"0\" y2=\"1\">\r\n                <stop \r\n                  offset=\"0%\" \r\n                  stopColor={priceChange >= 0 ? 'rgb(34, 197, 94)' : 'rgb(239, 68, 68)'} \r\n                  stopOpacity={0.2}\r\n                />\r\n                <stop \r\n                  offset=\"99%\" \r\n                  stopColor={priceChange >= 0 ? 'rgb(34, 197, 94)' : 'rgb(239, 68, 68)'} \r\n                  stopOpacity={0}\r\n                />\r\n              </linearGradient>\r\n            </defs>\r\n            \r\n            <CartesianGrid \r\n              strokeDasharray=\"3 3\" \r\n              stroke=\"rgba(0,0,0,0.05)\"\r\n              vertical={false}\r\n            />\r\n            \r\n            <XAxis\r\n              dataKey=\"date\"\r\n              tickFormatter={(date) => {\r\n                const d = new Date(date);\r\n                if (timeFrame === '1D') {\r\n                  return d.toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' });\r\n                }\r\n                return d.toLocaleDateString([], { day: 'numeric', month: 'short' });\r\n              }}\r\n              stroke=\"rgba(0,0,0,0.1)\"\r\n              tick={{ fill: 'rgba(0,0,0,0.6)', fontSize: 11 }}\r\n              axisLine={{ stroke: 'rgba(0,0,0,0.1)' }}\r\n              tickLine={{ stroke: 'rgba(0,0,0,0.1)' }}\r\n            />\r\n            \r\n            <YAxis\r\n              domain={['auto', 'auto']}\r\n              stroke=\"rgba(0,0,0,0.1)\"\r\n              tick={{ fill: 'rgba(0,0,0,0.6)', fontSize: 11 }}\r\n              tickFormatter={(value) => `₹${value.toFixed(2)}`} \r\n              axisLine={{ stroke: 'rgba(0,0,0,0.1)' }}\r\n              tickLine={{ stroke: 'rgba(0,0,0,0.1)' }}\r\n              tickCount={6}\r\n              width={65}\r\n            />\r\n            \r\n            <Tooltip\r\n              content={<CustomTooltip />}\r\n              cursor={{\r\n                stroke: 'rgba(0,0,0,0.1)',\r\n                strokeWidth: 1,\r\n                strokeDasharray: '4 4'\r\n              }}\r\n            />\r\n            \r\n            <Area\r\n              type=\"monotone\"\r\n              dataKey=\"price\"\r\n              stroke={priceChange >= 0 ? 'rgb(34, 197, 94)' : 'rgb(239, 68, 68)'}\r\n              strokeWidth={1.5}\r\n              fill=\"url(#colorPrice)\"\r\n              animationDuration={750}\r\n              dot={false}\r\n              activeDot={{\r\n                r: 4,\r\n                fill: priceChange >= 0 ? 'rgb(34, 197, 94)' : 'rgb(239, 68, 68)',\r\n                stroke: '#fff',\r\n                strokeWidth: 1\r\n              }}\r\n            />\r\n          </AreaChart>\r\n        </ResponsiveContainer>\r\n      )}\r\n\r\n      {/* Floating Price Display */}\r\n      {hoveredData && (\r\n        <motion.div\r\n          initial={{ opacity: 0, y: 10 }}\r\n          animate={{ opacity: 1, y: 0 }}\r\n          className=\"absolute top-4 right-4 bg-white/90 backdrop-blur-xl border border-gray-200 rounded-lg p-4\"\r\n        >\r\n          <p className=\"text-gray-600 text-sm\">Current Price</p>\r\n          <p className=\"text-black text-2xl font-medium\">\r\n            ₹{hoveredData.price.toFixed(2)} {/* Display price in rupees */}\r\n          </p>\r\n          <p className=\"text-xs flex items-center gap-1\">\r\n              {(stock.change !== undefined) && (\r\n                <>\r\n                  {(stock.change >= 0) ? <ArrowUp size={10} /> : <ArrowDown size={10} />}\r\n                  {Math.abs(stock.change).toFixed(2)}%\r\n                </>\r\n              )}\r\n            </p>\r\n        </motion.div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default StockChart;","import React, { useState, useEffect } from 'react';\r\nimport { ArrowUp, ArrowDown, Globe, X } from 'lucide-react';\r\nimport { motion, AnimatePresence } from 'framer-motion';\r\n\r\nimport { Portfolio } from '@/components/portfolio/Asserts/Portfolio';\r\nimport StockChart from './StockChart';\r\n\r\nconst API_KEY = \"ctre6q9r01qhb16mmh70ctre6q9r01qhb16mmh7g\"; // Replace with your API key\r\n\r\ninterface StockDetailProps {\r\n  stock: Portfolio | null;\r\n  onSellClick: (stock: Portfolio) => void;\r\n  loading?: boolean;\r\n}\r\n\r\nexport const StockDetail: React.FC<StockDetailProps> = ({ stock, onSellClick, loading }) => {\r\n  const [timeFrame, setTimeFrame] = useState<string>('1D');\r\n  const [currentTime, setCurrentTime] = useState(new Date());\r\n  const [recommendationTrends, setRecommendationTrends] = useState<any[]>([]);\r\n  const [trendsLoading, setTrendsLoading] = useState<boolean>(false);\r\n  const [isModalOpen, setIsModalOpen] = useState<boolean>(false); // State to control modal visibility\r\n\r\n  // Fetch recommendation trends when stock changes\r\n  useEffect(() => {\r\n    const fetchRecommendationTrends = async () => {\r\n      if (stock?.symbol) {\r\n        setTrendsLoading(true);\r\n        try {\r\n          const response = await fetch(\r\n            `https://finnhub.io/api/v1/stock/recommendation?symbol=${stock.symbol}&token=${API_KEY}`\r\n          );\r\n          const data = await response.json();\r\n          setRecommendationTrends(data);\r\n        } catch (error) {\r\n          console.error('Failed to fetch recommendation trends:', error);\r\n        } finally {\r\n          setTrendsLoading(false);\r\n        }\r\n      }\r\n    };\r\n\r\n    fetchRecommendationTrends();\r\n  }, [stock?.symbol]);\r\n\r\n  // Update current time every second\r\n  useEffect(() => {\r\n    const timer = setInterval(() => {\r\n      setCurrentTime(new Date());\r\n    }, 1000);\r\n    return () => clearInterval(timer);\r\n  }, []);\r\n\r\n  // If stock is not defined, return null or a fallback UI\r\n  if (loading || !stock) {\r\n    return (\r\n      <div className=\"flex items-center justify-center h-full text-gray-600\">\r\n        <div className=\"text-center\">\r\n          <Globe size={48} className=\"mx-auto mb-4 opacity-60\" />\r\n          <p className=\"text-xl\">Select a stock to view details</p>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  const timeFrames = ['1D', '1W', '1M', '3M', '1Y', 'ALL'];\r\n\r\n  // Color scheme for recommendation trends\r\n  const trendColors = {\r\n    strongBuy: '#16a34a', // Bright green\r\n    buy: '#4ade80',      // Light green\r\n    hold: '#facc15',     // Yellow\r\n    sell: '#f87171',     // Light red\r\n    strongSell: '#dc2626', // Bright red\r\n  };\r\n\r\n  // Function to open the modal\r\n  const openModal = () => {\r\n    setIsModalOpen(true);\r\n  };\r\n\r\n  // Function to close the modal\r\n  const closeModal = () => {\r\n    setIsModalOpen(false);\r\n  };\r\n\r\n  return (\r\n    <AnimatePresence mode=\"wait\">\r\n      <motion.div\r\n        initial={{ opacity: 0, y: 20 }}\r\n        animate={{ opacity: 1, y: 0 }}\r\n        exit={{ opacity: 0, y: -20 }}\r\n        className=\"flex -mt-6 flex-col h-full bg-white backdrop-blur-xl p-4 lg:p-4\"\r\n      >\r\n        {/* Compact Header */}\r\n        <div className=\"flex items-center justify-between mb-2\">\r\n          <div>\r\n            <h1 className=\"text-2xl font-semibold text-black\">{stock.name}</h1>\r\n            <div className=\"flex items-center gap-2 text-sm\">\r\n              <span className=\"text-gray-600\">{stock.symbol}</span>\r\n              <span className=\"text-gray-600\">•</span>\r\n              <span className=\"text-gray-600\">{currentTime.toLocaleTimeString()}</span>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        {/* Compact Price Section */}\r\n        <div className=\"flex items-center gap-4 mb-4\">\r\n          <span className=\"text-4xl font-medium text-black\">\r\n            ₹{stock.currentPrice?.toFixed(2) ?? 'N/A'} {/* Use the currentPrice from the selected stock */}\r\n          </span>\r\n          <motion.span\r\n            animate={{\r\n              color: (stock.totalReturn || 0) >= 0 ? \"rgb(34, 197, 94)\" : \"rgb(239, 68, 68)\"\r\n            }}\r\n            className=\"flex items-center text-lg\"\r\n          >\r\n            {(stock.totalReturn || 0) >= 0 ? <ArrowUp size={20} /> : <ArrowDown size={20} />}\r\n            {Math.abs(stock.totalReturn || 0).toFixed(2)}%\r\n          </motion.span>\r\n        </div>\r\n\r\n        {/* Compact Time Frame Selector */}\r\n        <div className=\"flex gap-1 mb-4 overflow-x-auto scrollbar-hide\">\r\n          {timeFrames.map((tf) => (\r\n            <button\r\n              key={tf}\r\n              onClick={() => setTimeFrame(tf)}\r\n              className={`px-3 py-1 rounded-full text-xs font-medium transition-all whitespace-nowrap ${\r\n                timeFrame === tf\r\n                  ? 'bg-black text-white'\r\n                  : 'bg-gray-100 text-gray-600 hover:bg-gray-200'\r\n              }`}\r\n            >\r\n              {tf}\r\n            </button>\r\n          ))}\r\n        </div>\r\n\r\n        {/* Chart Container */}\r\n        <div className=\"flex-1 bg-gray-100 rounded-xl mt-12 backdrop-blur-sm\">\r\n          <div className=\"h-full\">\r\n            <StockChart stock={stock} timeFrame={timeFrame} currentPrice={stock.currentPrice} change={stock.change} />\r\n          </div>\r\n        </div>\r\n\r\n        {/* Recommendation Trends Section */}\r\n        <div\r\n          className=\"rounded-xl p-4 backdrop-blur-sm cursor-pointer\"\r\n          onClick={openModal} // Open modal on click\r\n        >\r\n          <h3 className=\"text-lg font-semibold text-black mb-4\">Recommendation Trends</h3>\r\n          {trendsLoading ? (\r\n            <div className=\"flex justify-center items-center py-4\">\r\n              <span className=\"text-gray-600\">Loading trends...</span>\r\n            </div>\r\n          ) : recommendationTrends.length > 0 ? (\r\n            <div className=\"overflow-x-auto\">\r\n              <table className=\"min-w-full bg-white rounded-xl shadow-sm\">\r\n                <thead>\r\n                  <tr>\r\n                    <th className=\"px-4 py-2 text-xs text-gray-600 text-left\">Period</th>\r\n                    <th className=\"px-4 py-2 text-xs text-gray-600 text-center\">Strong Buy</th>\r\n                    <th className=\"px-4 py-2 text-xs text-gray-600 text-center\">Buy</th>\r\n                    <th className=\"px-4 py-2 text-xs text-gray-600 text-center\">Hold</th>\r\n                    <th className=\"px-4 py-2 text-xs text-gray-600 text-center\">Sell</th>\r\n                    <th className=\"px-4 py-2 text-xs text-gray-600 text-center\">Strong Sell</th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  {recommendationTrends.slice(0, 1).map((trend, index) => ( // Show only the first row in the preview\r\n                    <tr key={index} className=\"border-t border-gray-200\">\r\n                      <td className=\"px-4 py-3 text-sm text-gray-600\">{trend.period}</td>\r\n                      <td className=\"px-4 py-3 text-lg font-medium text-center\" style={{ color: trendColors.strongBuy }}>\r\n                        {trend.strongBuy}\r\n                      </td>\r\n                      <td className=\"px-4 py-3 text-lg font-medium text-center\" style={{ color: trendColors.buy }}>\r\n                        {trend.buy}\r\n                      </td>\r\n                      <td className=\"px-4 py-3 text-lg font-medium text-center\" style={{ color: trendColors.hold }}>\r\n                        {trend.hold}\r\n                      </td>\r\n                      <td className=\"px-4 py-3 text-lg font-medium text-center\" style={{ color: trendColors.sell }}>\r\n                        {trend.sell}\r\n                      </td>\r\n                      <td className=\"px-4 py-3 text-lg font-medium text-center\" style={{ color: trendColors.strongSell }}>\r\n                        {trend.strongSell}\r\n                      </td>\r\n                    </tr>\r\n                  ))}\r\n                </tbody>\r\n              </table>\r\n            </div>\r\n          ) : (\r\n            <div className=\"flex justify-center items-center py-4\">\r\n              <span className=\"text-gray-600\">No recommendation trends available.</span>\r\n            </div>\r\n          )}\r\n        </div>\r\n\r\n        {/* Modal for Recommendation Trends */}\r\n        <AnimatePresence>\r\n          {isModalOpen && (\r\n            <motion.div\r\n              initial={{ opacity: 0 }}\r\n              animate={{ opacity: 1 }}\r\n              exit={{ opacity: 0 }}\r\n              className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center p-4 z-50\"\r\n              onClick={closeModal} // Close modal when clicking outside\r\n            >\r\n              <motion.div\r\n                initial={{ scale: 0.9, y: 20 }}\r\n                animate={{ scale: 1, y: 0 }}\r\n                exit={{ scale: 0.9, y: -20 }}\r\n                className=\"bg-white rounded-xl w-full max-w-2xl p-6 relative\"\r\n                onClick={(e) => e.stopPropagation()} // Prevent clicks inside the modal from closing it\r\n              >\r\n                <button\r\n                  onClick={closeModal}\r\n                  className=\"absolute top-4 right-4 p-2 text-gray-600 hover:text-black\"\r\n                >\r\n                  <X size={20} />\r\n                </button>\r\n                <h3 className=\"text-lg font-semibold text-black mb-4\">Recommendation Trends</h3>\r\n                <div className=\"overflow-x-auto\">\r\n                  <table className=\"min-w-full bg-white rounded-xl shadow-sm\">\r\n                    <thead>\r\n                      <tr>\r\n                        <th className=\"px-4 py-2 text-xs text-gray-600 text-left\">Period</th>\r\n                        <th className=\"px-4 py-2 text-xs text-gray-600 text-center\">Strong Buy</th>\r\n                        <th className=\"px-4 py-2 text-xs text-gray-600 text-center\">Buy</th>\r\n                        <th className=\"px-4 py-2 text-xs text-gray-600 text-center\">Hold</th>\r\n                        <th className=\"px-4 py-2 text-xs text-gray-600 text-center\">Sell</th>\r\n                        <th className=\"px-4 py-2 text-xs text-gray-600 text-center\">Strong Sell</th>\r\n                      </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                      {recommendationTrends.map((trend, index) => (\r\n                        <tr key={index} className=\"border-t border-gray-200\">\r\n                          <td className=\"px-4 py-3 text-sm text-gray-600\">{trend.period}</td>\r\n                          <td className=\"px-4 py-3 text-lg font-medium text-center\" style={{ color: trendColors.strongBuy }}>\r\n                            {trend.strongBuy}\r\n                          </td>\r\n                          <td className=\"px-4 py-3 text-lg font-medium text-center\" style={{ color: trendColors.buy }}>\r\n                            {trend.buy}\r\n                          </td>\r\n                          <td className=\"px-4 py-3 text-lg font-medium text-center\" style={{ color: trendColors.hold }}>\r\n                            {trend.hold}\r\n                          </td>\r\n                          <td className=\"px-4 py-3 text-lg font-medium text-center\" style={{ color: trendColors.sell }}>\r\n                            {trend.sell}\r\n                          </td>\r\n                          <td className=\"px-4 py-3 text-lg font-medium text-center\" style={{ color: trendColors.strongSell }}>\r\n                            {trend.strongSell}\r\n                          </td>\r\n                        </tr>\r\n                      ))}\r\n                    </tbody>\r\n                  </table>\r\n                </div>\r\n              </motion.div>\r\n            </motion.div>\r\n          )}\r\n        </AnimatePresence>\r\n      </motion.div>\r\n    </AnimatePresence>\r\n  );\r\n};","import React, { useState, useEffect, useTransition, useMemo } from 'react';\r\nimport { Search, ArrowUp, ArrowDown, Globe, DollarSign, Check } from 'lucide-react';\r\nimport SellModal from './SellModal';\r\nimport { motion, AnimatePresence } from 'framer-motion';\r\nimport Header from '@/components/Header/Header';\r\nimport LoadingSpinner from '../../ui/LoadingSpinner';\r\nimport useAuth from '@/components/hooks/useAuth';\r\nimport { formatMoney, formatPercent, Portfolio } from '@/components/portfolio/Asserts/Portfolio';\r\nimport emailjs from 'emailjs-com';\r\nimport { FixedSizeList as List } from 'react-window';\r\nimport { StockDetail } from './StockDetail';\r\n\r\n// Debounce hook\r\nconst useDebounce = (value: string, delay: number) => {\r\n  const [debouncedValue, setDebouncedValue] = useState(value);\r\n\r\n  useEffect(() => {\r\n    const handler = setTimeout(() => {\r\n      setDebouncedValue(value);\r\n    }, delay);\r\n\r\n    return () => {\r\n      clearTimeout(handler);\r\n    };\r\n  }, [value, delay]);\r\n\r\n  return debouncedValue;\r\n};\r\n\r\nexport const SellStocks: React.FC = () => {\r\n  const { user, token } = useAuth();\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState<string | null>(null);\r\n  const [searchTerm, setSearchTerm] = useState('');\r\n  const [selectedStock, setSelectedStock] = useState<Portfolio | null>(null);\r\n  const [selectedStockDetail, setSelectedStockDetail] = useState<Portfolio | null>(null);\r\n  const [showSuccessPopup, setShowSuccessPopup] = useState(false);\r\n  const [portfolio, setPortfolio] = useState<Portfolio[]>([]);\r\n  const [isPending, startTransition] = useTransition();\r\n\r\n  // Debounced search term\r\n  const debouncedSearchTerm = useDebounce(searchTerm, 300);\r\n\r\n  // Initialize EmailJS\r\n  useEffect(() => {\r\n    try {\r\n      emailjs.init('eyK87ZsxW822cQvyN'); // Replace with your EmailJS User ID\r\n    } catch (error) {\r\n      console.error('Failed to initialize EmailJS:', error);\r\n    }\r\n  }, []);\r\n\r\n  // Fetch portfolio data on component mount\r\n  useEffect(() => {\r\n    const fetchPortfolio = async () => {\r\n      try {\r\n        const response = await fetch('https://production-backend-final.onrender.com/portfolio', {\r\n          method: 'GET',\r\n          headers: {\r\n            Authorization: `Bearer ${token}`,\r\n          },\r\n        });\r\n\r\n        if (!response.ok) {\r\n          throw new Error('Failed to fetch portfolio');\r\n        }\r\n\r\n        const { data } = await response.json();\r\n        console.log('Backend Response:', data); // Debugging\r\n\r\n        // Validate portfolio data and filter out stocks with zero quantity\r\n        if (Array.isArray(data)) {\r\n          const validPortfolio = data\r\n            .filter((holding) => {\r\n              // Ensure all required fields are present and quantity is greater than zero\r\n              return (\r\n                holding?.symbol &&\r\n                holding?.name &&\r\n                holding.shares > 0 // Only include stocks with quantity > 0\r\n              );\r\n            })\r\n            .map((holding) => ({\r\n              ...holding,\r\n              quantity: holding.shares, // Map `shares` to `quantity` if needed\r\n              currentPrice: holding.value / holding.shares, // Calculate current price if needed\r\n            }));\r\n\r\n          setPortfolio(validPortfolio);\r\n        } else {\r\n          throw new Error('Invalid portfolio data format');\r\n        }\r\n      } catch (error) {\r\n        console.error('Error fetching portfolio:', error);\r\n        setError('Failed to load portfolio');\r\n        setPortfolio([]); // Reset portfolio to an empty array in case of error\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchPortfolio();\r\n  }, [token]);\r\n\r\n  // Handle successful transaction\r\n  const handleTransactionSuccess = async (stock: Portfolio, quantity: number, totalPrice: number) => {\r\n    if (typeof totalPrice !== 'number' || isNaN(totalPrice)) {\r\n      console.error('Invalid totalPrice:', totalPrice);\r\n      return;\r\n    }\r\n\r\n    startTransition(() => {\r\n      setShowSuccessPopup(true);\r\n    });\r\n    setTimeout(() => {\r\n      startTransition(() => {\r\n        setShowSuccessPopup(false);\r\n      });\r\n    }, 3000);\r\n\r\n    // Re-fetch portfolio data\r\n    try {\r\n      const response = await fetch('https://production-backend-final.onrender.com/portfolio', {\r\n        method: 'GET',\r\n        headers: {\r\n          Authorization: `Bearer ${token}`,\r\n        },\r\n      });\r\n\r\n      if (!response.ok) {\r\n        throw new Error('Failed to fetch portfolio');\r\n      }\r\n\r\n      const { data } = await response.json();\r\n      console.log('Backend Response:', data); // Debugging\r\n\r\n      // Validate portfolio data\r\n      if (Array.isArray(data)) {\r\n        const validPortfolio = data.filter(\r\n          (holding) => holding?.symbol && holding?.name && holding.shares > 0 // Only include stocks with quantity > 0\r\n        );\r\n        setPortfolio(validPortfolio);\r\n      } else {\r\n        throw new Error('Invalid portfolio data format');\r\n      }\r\n    } catch (error) {\r\n      console.error('Error fetching portfolio:', error);\r\n      setError('Failed to load portfolio');\r\n      setPortfolio([]); // Reset portfolio to an empty array in case of error\r\n    }\r\n\r\n    // Send email notification\r\n    if (user?.email) {\r\n      try {\r\n        const templateParams = {\r\n          to_email: user.email,\r\n          stock_symbol: stock.symbol,\r\n          stock_name: stock.name,\r\n          quantity: quantity,\r\n          total_price: totalPrice.toFixed(2),\r\n        };\r\n\r\n        await emailjs.send(\r\n          'service_box535f', // Replace with your EmailJS Service ID\r\n          'template_l4fugpk', // Replace with your EmailJS Template ID\r\n          templateParams\r\n        );\r\n\r\n        console.log('Email notification sent successfully!');\r\n      } catch (error) {\r\n        console.error('Failed to send email notification:', error);\r\n      }\r\n    } else {\r\n      console.error('User email not found.');\r\n      alert('User email not found. Please update your email in settings.');\r\n    }\r\n  };\r\n\r\n  // Handle stock selection\r\n  const handleStockSelect = (stock: Portfolio) => {\r\n    setSelectedStockDetail(stock);\r\n  };\r\n\r\n  // Handle selling stock\r\n  const handleSell = async (symbol: string, quantity: number) => {\r\n    try {\r\n      const response = await fetch('https://production-backend-final.onrender.com/transaction/sell', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          Authorization: `Bearer ${token}`,\r\n        },\r\n        body: JSON.stringify({\r\n          stockSymbol: symbol,\r\n          quantity,\r\n          price: selectedStockDetail?.currentPrice || 0,\r\n        }),\r\n      });\r\n\r\n      if (!response.ok) {\r\n        const errorData = await response.json();\r\n        throw new Error(errorData.message || 'Failed to process transaction');\r\n      }\r\n\r\n      // Update the portfolio after selling\r\n      setPortfolio((prevPortfolio) =>\r\n        prevPortfolio\r\n          .map((holding) => {\r\n            if (holding.symbol === symbol) {\r\n              const newQuantity = holding.shares - quantity; // Use `shares` instead of `quantity`\r\n\r\n              // Check if the new quantity is valid (finite and not NaN)\r\n              if (!Number.isFinite(newQuantity) || Number.isNaN(newQuantity)) {\r\n                console.error(`Invalid quantity for ${symbol}: ${newQuantity}`);\r\n                return null; // Skip this holding\r\n              }\r\n\r\n              return { ...holding, shares: newQuantity }; // Update `shares`\r\n            }\r\n            return holding;\r\n          })\r\n          .filter((holding) => holding !== null && holding.shares > 0) // Remove invalid or zero-quantity stocks\r\n      );\r\n\r\n      // If the sold stock is the selected stock, clear the selection\r\n      if (selectedStockDetail?.symbol === symbol) {\r\n        setSelectedStockDetail(null);\r\n        setSelectedStock(null);\r\n      }\r\n\r\n      handleTransactionSuccess(selectedStockDetail!, quantity, selectedStockDetail!.currentPrice * quantity);\r\n    } catch (error) {\r\n      console.error('Sell transaction failed:', error);\r\n      setError('Failed to sell stock');\r\n    }\r\n  };\r\n\r\n  // Filter portfolio based on debounced search term\r\n  const filteredPortfolio = useMemo(() => {\r\n    return (Array.isArray(portfolio) ? portfolio : []).filter(\r\n      (holding) =>\r\n        holding?.shares > 0 && // Only include stocks with quantity > 0\r\n        (holding?.symbol?.toLowerCase().includes(debouncedSearchTerm.toLowerCase()) ||\r\n          holding?.name?.toLowerCase().includes(debouncedSearchTerm.toLowerCase()))\r\n    );\r\n  }, [debouncedSearchTerm, portfolio]);\r\n\r\n  const Row = ({ index, style }: { index: number; style: React.CSSProperties }) => {\r\n    const holding = filteredPortfolio[index];\r\n    const isSelected = selectedStockDetail?.symbol === holding.symbol;\r\n\r\n    return (\r\n      <motion.div\r\n        style={{ ...style, marginBottom: '16px' }}\r\n        layout\r\n        className={`p-4 w-98 ${\r\n          isSelected ? 'bg-gray-200 rounded' : 'bg-white hover:bg-gray-50'\r\n        } transition-colors duration-200 cursor-pointer`}\r\n        onClick={() => handleStockSelect(holding)}\r\n      >\r\n        <div className=\"flex justify-between items-start\">\r\n          <div>\r\n            <h3 className=\"font-medium text-sm text-black\">{holding.symbol}</h3>\r\n            <p className=\"text-xs text-gray-600\">{holding.name}</p>\r\n          </div>\r\n          <motion.div\r\n            animate={{\r\n              color: (holding.totalReturn || 0) >= 0 ? '#16a34a' : '#dc2626',\r\n            }}\r\n            className=\"text-right\"\r\n          >\r\n            <p className=\"font-medium text-sm text-black\">{formatMoney(holding.currentPrice)}</p>\r\n            <p className=\"text-xs flex items-center gap-1\">\r\n              {(holding.change !== undefined) && (\r\n                <>\r\n                  {(holding.totalReturn >= 0) ? <ArrowUp size={10} /> : <ArrowDown size={10} />}\r\n                  {formatPercent(Math.abs(holding.change))}\r\n                </>\r\n              )}\r\n            </p>\r\n          </motion.div>\r\n        </div>\r\n      </motion.div>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div className=\"min-h-screen w-full text-black\">\r\n      <Header />\r\n      <div>\r\n        <div className=\"mt-28 absolute flex z-20 px-8 justify-end w-full\">\r\n          {selectedStockDetail && (\r\n            <button\r\n              onClick={() => setSelectedStock(selectedStockDetail)}\r\n              className=\"px-8 py-3 bg-black text-white font-medium rounded-full hover:bg-black/90 transition-all flex items-center gap-2\"\r\n            >\r\n              <DollarSign size={16} />\r\n              Sell {selectedStockDetail.symbol}\r\n            </button>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"flex h-screen pt-20\">\r\n        <div className=\"w-98 bg-white border-r border-gray-200 overflow-hidden\">\r\n          <div className=\"p-6\">\r\n            <div className=\"relative mb-6\">\r\n              <Search className=\"absolute left-4 top-1/2 transform -translate-y-1/2 text-gray-400\" size={16} />\r\n              <input\r\n                type=\"text\"\r\n                placeholder=\"Search stocks...\"\r\n                value={searchTerm}\r\n                onChange={(e) => setSearchTerm(e.target.value)}\r\n                className=\"w-full bg-gray-50 border border-gray-200 rounded-2xl pl-10 pr-4 py-2 text-sm focus:outline-none focus:ring-2 focus:ring-gray-300\"\r\n              />\r\n            </div>\r\n\r\n            <div className=\"space-y-4 overflow-y-auto w-[400px] hide-scrollbar\">\r\n              {loading ? (\r\n                <LoadingSpinner />\r\n              ) : (\r\n                <List\r\n                  height={600}\r\n                  itemCount={filteredPortfolio.length}\r\n                  itemSize={80}\r\n                  width={400}\r\n                >\r\n                  {Row}\r\n                </List>\r\n              )}\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"flex-1\">\r\n          {selectedStockDetail ? (\r\n            <StockDetail\r\n              stock={selectedStockDetail}\r\n              onSellClick={setSelectedStock}\r\n              loading={loading}\r\n            />\r\n          ) : (\r\n            <div className=\"h-full w-full flex items-center justify-center bg-gradient-to-b from-gray-50 to-white\">\r\n              <div className=\"text-center max-w-md px-4\">\r\n                {/* Icon with a subtle gradient */}\r\n                <div className=\"inline-flex items-center justify-center w-16 h-16 bg-black rounded-2xl shadow-lg mb-6\">\r\n                  <Globe size={28} className=\"text-white\" />\r\n                </div>\r\n\r\n                {/* Subtext */}\r\n                <p className=\"text-lg text-gray-600 mb-6\">\r\n                  Select a stock to view details.\r\n                </p>\r\n\r\n                {/* Additional content */}\r\n                <p className=\"text-sm text-gray-500 mt-6\">\r\n                  Dive into real-time data, charts, and insights to make informed decisions.\r\n                </p>\r\n              </div>\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      <AnimatePresence>\r\n        {showSuccessPopup && (\r\n          <motion.div\r\n            initial={{ opacity: 0, y: 50 }}\r\n            animate={{ opacity: 1, y: 0 }}\r\n            exit={{ opacity: 0, y: -50 }}\r\n            className=\"fixed inset-0 flex items-center justify-center z-50\"\r\n          >\r\n            <div className=\"bg-black/50 backdrop-blur-sm fixed inset-0\" />\r\n            <motion.div\r\n              initial={{ scale: 0.8 }}\r\n              animate={{ scale: 1 }}\r\n              exit={{ scale: 0.8 }}\r\n              className=\"bg-white/90 backdrop-blur-lg rounded-xl shadow-2xl p-6 max-w-md w-full mx-4 border border-gray-200\"\r\n            >\r\n              <div className=\"flex flex-col items-center gap-4 text-center\">\r\n                <div className=\"bg-green-500/10 rounded-full p-3\">\r\n                  <Check className=\"w-6 h-6 text-green-500\" />\r\n                </div>\r\n                <h2 className=\"text-xl font-semibold text-gray-900\">Success!</h2>\r\n                <p className=\"text-gray-600\">\r\n                  Transaction completed successfully! A notification has been sent to your email.\r\n                </p>\r\n                <button\r\n                  onClick={() => setShowSuccessPopup(false)}\r\n                  className=\"mt-4 px-6 py-2 bg-green-500 text-white rounded-lg hover:bg-green-600 transition-colors\"\r\n                >\r\n                  Close\r\n                </button>\r\n              </div>\r\n            </motion.div>\r\n          </motion.div>\r\n        )}\r\n      </AnimatePresence>\r\n\r\n      {selectedStock && (\r\n        <SellModal\r\n          stock={selectedStock}\r\n          onClose={() => setSelectedStock(null)}\r\n          onSuccess={(quantity) => handleSell(selectedStock.symbol, quantity)}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SellStocks;"],"names":["SellModal","stock","onClose","onSuccess","quantity","setQuantity","useState","isAuthenticated","useAuth","showAuthModal","setShowAuthModal","error","setError","handleSell","async","jsxRuntimeExports","jsxs","Fragment","children","jsx","className","name","symbol","onClick","XIcon","size","Math","max","MinusIcon","min","PlusIcon","_a","currentPrice","toFixed","AuthModal","isOpen","formatPercent","value","Intl","NumberFormat","style","minimumFractionDigits","maximumFractionDigits","format","generateInitialData","timeframe","basePrice","dataPoints","periods","ALL","prices","steps","volatility","i","smoothedChange","random","push","generateRandomWalk","now","Date","date","setMinutes","getMinutes","setHours","getHours","setDate","getDate","unshift","toISOString","price","Number","StockChart","timeFrame","onTimeframeChange","stockData","setStockData","isLoading","setIsLoading","hoveredData","setHoveredData","updatePrice","useCallback","length","lastPrice","trend","changePercent","change","newPrice","newDataPoint","prevData","slice","useEffect","loadDelay","setTimeout","initialData","clearTimeout","interval","setInterval","clearInterval","priceChange","CustomTooltip","active","payload","label","toLocaleTimeString","hour","minute","toLocaleDateString","month","day","motion","div","animate","rotate","transition","duration","repeat","Infinity","ease","ResponsiveContainer","width","height","AreaChart","data","onMouseMove","activePayload","onMouseLeave","id","x1","y1","x2","y2","offset","stopColor","stopOpacity","CartesianGrid","strokeDasharray","stroke","vertical","XAxis","dataKey","tickFormatter","d","tick","fill","fontSize","axisLine","tickLine","YAxis","domain","tickCount","Tooltip","content","cursor","strokeWidth","Area","type","animationDuration","dot","activeDot","r","initial","opacity","y","ArrowUp","ArrowDown","abs","StockDetail","onSellClick","loading","setTimeFrame","currentTime","setCurrentTime","recommendationTrends","setRecommendationTrends","trendsLoading","setTrendsLoading","isModalOpen","setIsModalOpen","response","fetch","json","console","fetchRecommendationTrends","timer","Globe","trendColors","closeModal","AnimatePresence","mode","exit","span","color","totalReturn","map","tf","index","period","strongBuy","buy","hold","sell","strongSell","scale","e","stopPropagation","X","SellStocks","user","token","setLoading","searchTerm","setSearchTerm","selectedStock","setSelectedStock","selectedStockDetail","setSelectedStockDetail","showSuccessPopup","setShowSuccessPopup","portfolio","setPortfolio","isPending","startTransition","useTransition","debouncedSearchTerm","delay","debouncedValue","setDebouncedValue","handler","useDebounce","emailjs","init","method","headers","Authorization","ok","Error","log","Array","isArray","validPortfolio","filter","holding","shares","fetchPortfolio","body","JSON","stringify","stockSymbol","errorData","message","prevPortfolio","newQuantity","isFinite","isNaN","totalPrice","email","templateParams","to_email","stock_symbol","stock_name","total_price","send","alert","handleTransactionSuccess","filteredPortfolio","useMemo","toLowerCase","includes","_b","Header","DollarSign","Search","placeholder","onChange","target","LoadingSpinner","List","itemCount","itemSize","isSelected","marginBottom","layout","currency","Check"],"mappings":"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"}